

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat May 27 21:22:04 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Version 2.40
    47                           ; Generated 04/07/2022 GMT
    48                           ; 
    49                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F4550 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81   000000                     
    82                           	psect	idataCOMRAM
    83   001382                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for _interfaz
    87   001382  08                 	db	8
    88   000000                     _EECON2	set	4007
    89   000000                     _RCREG	set	4014
    90   000000                     _TXREG	set	4013
    91   000000                     _TRISC	set	3988
    92   000000                     _TRISD	set	3989
    93   000000                     _SPBRG	set	4015
    94   000000                     _BAUDCON	set	4024
    95   000000                     _RD	set	32048
    96   000000                     _WR	set	32049
    97   000000                     _WREN	set	32050
    98   000000                     _CFGS	set	32054
    99   000000                     _GO	set	32273
   100   000000                     _RB7	set	31759
   101   000000                     _RB6	set	31758
   102   000000                     _RB5	set	31757
   103   000000                     _TRMT	set	32097
   104   000000                     _RC2	set	31762
   105   000000                     _TRISC2	set	31906
   106   000000                     _RB0	set	31752
   107   000000                     _RB2	set	31754
   108   000000                     _TMR0ON	set	32431
   109   000000                     _GIE	set	32663
   110   000000                     _TMR0IE	set	32661
   111   000000                     _LATE1	set	31849
   112   000000                     _LATD	set	3980
   113   000000                     _USBEN	set	31595
   114   000000                     _LATC2	set	31834
   115   000000                     _TRISB	set	3987
   116   000000                     _TRISE	set	3990
   117   000000                     _RCSTA	set	4011
   118   000000                     _TXSTA	set	4012
   119   000000                     _OSCCON	set	4051
   120   000000                     _TRISA0	set	31888
   121   000000                     _LATE0	set	31848
   122   000000                     _T0CON	set	4053
   123   000000                     _RBPU	set	32655
   124   000000                     _ADCON2	set	4032
   125   000000                     _ADCON1	set	4033
   126   000000                     _ADCON0	set	4034
   127   000000                     _RCIF	set	31989
   128   000000                     _ADRES	set	4035
   129   000000                     _UTRDIS	set	31611
   130   000000                     _RB1	set	31753
   131   000000                     _RC4	set	31764
   132   000000                     _TMR0IF	set	32658
   133   000000                     _TMR0	set	4054
   134   000000                     _RE2	set	31778
   135   000000                     _EEDATA	set	4008
   136   000000                     _EEADR	set	4009
   137   000000                     _EEIF	set	32012
   138   000000                     _EEPGD	set	32055
   139                           
   140                           	psect	smallconst
   141   000800                     __psmallconst:
   142                           	callstack 0
   143   000800  00                 	db	0
   144   000801                     STR_1:
   145   000801  55                 	db	85	;'U'
   146   000802  6C                 	db	108	;'l'
   147   000803  74                 	db	116	;'t'
   148   000804  69                 	db	105	;'i'
   149   000805  6D                 	db	109	;'m'
   150   000806  61                 	db	97	;'a'
   151   000807  20                 	db	32
   152   000808  74                 	db	116	;'t'
   153   000809  65                 	db	101	;'e'
   154   00080A  6D                 	db	109	;'m'
   155   00080B  70                 	db	112	;'p'
   156   00080C  3A                 	db	58	;':'
   157   00080D  00                 	db	0
   158   00080E                     STR_2:
   159   00080E  49                 	db	73	;'I'
   160   00080F  6E                 	db	110	;'n'
   161   000810  69                 	db	105	;'i'
   162   000811  63                 	db	99	;'c'
   163   000812  69                 	db	105	;'i'
   164   000813  61                 	db	97	;'a'
   165   000814  6E                 	db	110	;'n'
   166   000815  64                 	db	100	;'d'
   167   000816  6F                 	db	111	;'o'
   168   000817  00                 	db	0
   169   000818                     STR_3:
   170   000818  54                 	db	84	;'T'
   171   000819  65                 	db	101	;'e'
   172   00081A  6D                 	db	109	;'m'
   173   00081B  70                 	db	112	;'p'
   174   00081C  3A                 	db	58	;':'
   175   00081D  00                 	db	0
   176   00081E                     STR_4:
   177   00081E  48                 	db	72	;'H'
   178   00081F  75                 	db	117	;'u'
   179   000820  6D                 	db	109	;'m'
   180   000821  3A                 	db	58	;':'
   181   000822  00                 	db	0
   182   000823  00                 	db	0	; dummy byte at the end
   183   000000                     
   184                           ; #config settings
   185                           
   186                           	psect	cinit
   187   0011FA                     __pcinit:
   188                           	callstack 0
   189   0011FA                     start_initialization:
   190                           	callstack 0
   191   0011FA                     __initialization:
   192                           	callstack 0
   193                           
   194                           ; Initialize objects allocated to COMRAM (1 bytes)
   195                           ; load TBLPTR registers with __pidataCOMRAM
   196   0011FA  0E82               	movlw	low __pidataCOMRAM
   197   0011FC  6EF6               	movwf	tblptrl,c
   198   0011FE  0E13               	movlw	high __pidataCOMRAM
   199   001200  6EF7               	movwf	tblptrh,c
   200   001202  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   201   001204  6EF8               	movwf	tblptru,c
   202   001206  0009               	tblrd		*+	;fetch initializer
   203   001208  CFF5 F020          	movff	tablat,__pdataCOMRAM
   204                           
   205                           ; Clear objects allocated to COMRAM (7 bytes)
   206   00120C  EE00  F019         	lfsr	0,__pbssCOMRAM
   207   001210  0E07               	movlw	7
   208   001212                     clear_0:
   209   001212  6AEE               	clrf	postinc0,c
   210   001214  06E8               	decf	wreg,f,c
   211   001216  E1FD               	bnz	clear_0
   212   001218                     end_of_initialization:
   213                           	callstack 0
   214   001218                     __end_of__initialization:
   215                           	callstack 0
   216   001218  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   217   00121A  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   218   00121C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   219   00121E  6EF8               	movwf	tblptru,c
   220   001220  0100               	movlb	0
   221   001222  EF60  F005         	goto	_main	;jump to C main() function
   222                           
   223                           	psect	bssCOMRAM
   224   000019                     __pbssCOMRAM:
   225                           	callstack 0
   226   000019                     _B:
   227                           	callstack 0
   228   000019                     	ds	2
   229   00001B                     _A:
   230                           	callstack 0
   231   00001B                     	ds	2
   232   00001D                     _TempEEPROM:
   233                           	callstack 0
   234   00001D                     	ds	1
   235   00001E                     _Hum:
   236                           	callstack 0
   237   00001E                     	ds	1
   238   00001F                     _Temp:
   239                           	callstack 0
   240   00001F                     	ds	1
   241                           
   242                           	psect	dataCOMRAM
   243   000020                     __pdataCOMRAM:
   244                           	callstack 0
   245   000020                     _interfaz:
   246                           	callstack 0
   247   000020                     	ds	1
   248                           
   249                           	psect	cstackCOMRAM
   250   000001                     __pcstackCOMRAM:
   251                           	callstack 0
   252   000001                     ??_ISR:
   253   000001                     
   254                           ; 2 bytes @ 0x0
   255   000001                     	ds	2
   256   000003                     ??_RetardoLCD:
   257   000003                     ?_strlen:
   258                           	callstack 0
   259   000003                     ?___wmul:
   260                           	callstack 0
   261   000003                     ?___awdiv:
   262                           	callstack 0
   263   000003                     ?___lwdiv:
   264                           	callstack 0
   265   000003                     ?___lwmod:
   266                           	callstack 0
   267   000003                     ConfiguraLCD@a:
   268                           	callstack 0
   269   000003                     LeerBit@res:
   270                           	callstack 0
   271   000003                     Transmitir@BufferT:
   272                           	callstack 0
   273   000003                     Conversion@canal:
   274                           	callstack 0
   275   000003                     ___lbdiv@divisor:
   276                           	callstack 0
   277   000003                     ___lbmod@divisor:
   278                           	callstack 0
   279   000003                     strlen@s:
   280                           	callstack 0
   281   000003                     ColorRGB@val:
   282                           	callstack 0
   283   000003                     GuardarDatoEnEEPROM@dir:
   284                           	callstack 0
   285   000003                     leerDatoEnEEPROM@dir:
   286                           	callstack 0
   287   000003                     ___wmul@multiplier:
   288                           	callstack 0
   289   000003                     ___awdiv@dividend:
   290                           	callstack 0
   291   000003                     ___lwdiv@dividend:
   292                           	callstack 0
   293   000003                     ___lwmod@dividend:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x2
   297   000003                     	ds	1
   298   000004                     ??_LeerByte:
   299   000004                     RetardoLCD@a:
   300                           	callstack 0
   301   000004                     ___lbdiv@dividend:
   302                           	callstack 0
   303   000004                     ___lbmod@dividend:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x3
   307   000004                     	ds	1
   308   000005                     ??_EnviaDato:
   309   000005                     LeerByte@res:
   310                           	callstack 0
   311   000005                     GuardarDatoEnEEPROM@dato:
   312                           	callstack 0
   313   000005                     ___lbdiv@counter:
   314                           	callstack 0
   315   000005                     ___lbmod@counter:
   316                           	callstack 0
   317   000005                     strlen@cp:
   318                           	callstack 0
   319   000005                     ___wmul@multiplicand:
   320                           	callstack 0
   321   000005                     ___awdiv@divisor:
   322                           	callstack 0
   323   000005                     ___lwdiv@divisor:
   324                           	callstack 0
   325   000005                     ___lwmod@divisor:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x4
   329   000005                     	ds	1
   330   000006                     EnviaDato@a:
   331                           	callstack 0
   332   000006                     LeerByte@i:
   333                           	callstack 0
   334   000006                     ___lbdiv@quotient:
   335                           	callstack 0
   336   000006                     ___lbmod@rem:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x5
   340   000006                     	ds	1
   341   000007                     ??_LeerHT11:
   342   000007                     EscribeLCD_c@a:
   343                           	callstack 0
   344   000007                     DireccionaLCD@a:
   345                           	callstack 0
   346   000007                     ___awdiv@counter:
   347                           	callstack 0
   348   000007                     ___lwmod@counter:
   349                           	callstack 0
   350   000007                     ___wmul@product:
   351                           	callstack 0
   352   000007                     ___lwdiv@quotient:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x6
   356   000007                     	ds	1
   357   000008                     MensajeLCD_Var@a:
   358                           	callstack 0
   359   000008                     ___awdiv@sign:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x7
   363   000008                     	ds	1
   364   000009                     ??_MensajeLCD_Var:
   365   000009                     ___lwdiv@counter:
   366                           	callstack 0
   367   000009                     ___awdiv@quotient:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x8
   371   000009                     	ds	1
   372   00000A                     MensajeLCD_Var@i:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x9
   376   00000A                     	ds	1
   377   00000B                     TransmitirDatos@Ent1:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0xA
   381   00000B                     	ds	2
   382   00000D                     TransmitirDatos@Ent2:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0xC
   386   00000D                     	ds	2
   387   00000F                     ??_TransmitirDatos:
   388                           
   389                           ; 1 bytes @ 0xE
   390   00000F                     	ds	2
   391   000011                     TransmitirDatos@n:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x10
   395   000011                     	ds	2
   396   000013                     TransmitirDatos@Simb:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x12
   400   000013                     	ds	2
   401   000015                     TransmitirDatos@TempC:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x14
   405   000015                     	ds	2
   406   000017                     ??_main:
   407                           
   408                           ; 1 bytes @ 0x16
   409   000017                     	ds	2
   410                           
   411 ;;
   412 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   413 ;;
   414 ;; *************** function _main *****************
   415 ;; Defined at:
   416 ;;		line 35 in file "Lab5.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   430 ;;      Params:         0       0       0       0       0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0       0       0       0       0
   432 ;;      Temps:          2       0       0       0       0       0       0       0       0
   433 ;;      Totals:         2       0       0       0       0       0       0       0       0
   434 ;;Total ram usage:        2 bytes
   435 ;; Hardware stack levels required when called: 6
   436 ;; This function calls:
   437 ;;		_BorraLCD
   438 ;;		_ColorRGB
   439 ;;		_ConfiguraLCD
   440 ;;		_Conversion
   441 ;;		_DireccionaLCD
   442 ;;		_EscribeLCD_c
   443 ;;		_GuardarDatoEnEEPROM
   444 ;;		_InicializaLCD
   445 ;;		_LeerHT11
   446 ;;		_MensajeLCD_Var
   447 ;;		_TransmitirDatos
   448 ;;		___lbdiv
   449 ;;		___lbmod
   450 ;;		_leerDatoEnEEPROM
   451 ;; This function is called by:
   452 ;;		Startup code after reset
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text0
   457   000AC0                     __ptext0:
   458                           	callstack 0
   459   000AC0                     _main:
   460                           	callstack 25
   461                           
   462                           ;Lab5.c: 38: ConfiguraLCD(4);
   463                           
   464                           ;incstack = 0
   465   000AC0  0E04               	movlw	4
   466   000AC2  EC73  F009         	call	_ConfiguraLCD
   467                           
   468                           ;Lab5.c: 39: OSCCON = 0b01110110;
   469   000AC6  0E76               	movlw	118
   470   000AC8  6ED3               	movwf	211,c	;volatile
   471                           
   472                           ;Lab5.c: 40: _delay((unsigned long)((1)*(8000000/4000.0)));
   473   000ACA  0E03               	movlw	3
   474   000ACC  6E17               	movwf	??_main^0,c
   475   000ACE  0E98               	movlw	152
   476   000AD0                     u1137:
   477   000AD0  2EE8               	decfsz	wreg,f,c
   478   000AD2  D7FE               	bra	u1137
   479   000AD4  2E17               	decfsz	??_main^0,f,c
   480   000AD6  D7FC               	bra	u1137
   481                           
   482                           ;Lab5.c: 41: LATC2 = 0;
   483   000AD8  948B               	bcf	3979,2,c	;volatile
   484                           
   485                           ;Lab5.c: 42: TXSTA = 0b00100000;
   486   000ADA  0E20               	movlw	32
   487   000ADC  6EAC               	movwf	172,c	;volatile
   488                           
   489                           ;Lab5.c: 43: RCSTA = 0b10010000;
   490   000ADE  0E90               	movlw	144
   491   000AE0  6EAB               	movwf	171,c	;volatile
   492                           
   493                           ;Lab5.c: 44: BAUDCON = 0b00000000;
   494   000AE2  0E00               	movlw	0
   495   000AE4  6EB8               	movwf	184,c	;volatile
   496                           
   497                           ;Lab5.c: 46: TRISE=0;
   498   000AE6  0E00               	movlw	0
   499   000AE8  6E96               	movwf	150,c	;volatile
   500                           
   501                           ;Lab5.c: 47: SPBRG = 12;
   502   000AEA  0E0C               	movlw	12
   503   000AEC  6EAF               	movwf	175,c	;volatile
   504                           
   505                           ;Lab5.c: 49: ADCON0 = 0b00000001;
   506   000AEE  0E01               	movlw	1
   507   000AF0  6EC2               	movwf	194,c	;volatile
   508                           
   509                           ;Lab5.c: 50: ADCON1 = 14;
   510   000AF2  0E0E               	movlw	14
   511   000AF4  6EC1               	movwf	193,c	;volatile
   512                           
   513                           ;Lab5.c: 51: ADCON2 = 0b10001000;
   514   000AF6  0E88               	movlw	136
   515   000AF8  6EC0               	movwf	192,c	;volatile
   516                           
   517                           ;Lab5.c: 54: TRISB = 0b00001110;
   518   000AFA  0E0E               	movlw	14
   519   000AFC  6E93               	movwf	147,c	;volatile
   520                           
   521                           ;Lab5.c: 55: TRISD = 0;
   522   000AFE  0E00               	movlw	0
   523   000B00  6E95               	movwf	149,c	;volatile
   524                           
   525                           ;Lab5.c: 56: TRISA0 = 1;
   526   000B02  8092               	bsf	3986,0,c	;volatile
   527                           
   528                           ;Lab5.c: 57: TRISC = 0b11010111;
   529   000B04  0ED7               	movlw	215
   530   000B06  6E94               	movwf	148,c	;volatile
   531                           
   532                           ;Lab5.c: 58: USBEN = 0;
   533   000B08  966D               	bcf	3949,3,c	;volatile
   534                           
   535                           ;Lab5.c: 59: UTRDIS = 1;
   536   000B0A  866F               	bsf	3951,3,c	;volatile
   537                           
   538                           ;Lab5.c: 60: RBPU = 0;
   539   000B0C  9EF1               	bcf	4081,7,c	;volatile
   540                           
   541                           ;Lab5.c: 62: TempEEPROM = leerDatoEnEEPROM(0);
   542   000B0E  0E00               	movlw	0
   543   000B10  6E04               	movwf	(leerDatoEnEEPROM@dir+1)^0,c
   544   000B12  0E00               	movlw	0
   545   000B14  6E03               	movwf	leerDatoEnEEPROM@dir^0,c
   546   000B16  ECA9  F009         	call	_leerDatoEnEEPROM	;wreg free
   547   000B1A  6E1D               	movwf	_TempEEPROM^0,c
   548                           
   549                           ;Lab5.c: 64: InicializaLCD();
   550   000B1C  EC0D  F007         	call	_InicializaLCD	;wreg free
   551                           
   552                           ;Lab5.c: 66: T0CON=0b00000011;
   553   000B20  0E03               	movlw	3
   554   000B22  6ED5               	movwf	213,c	;volatile
   555                           
   556                           ;Lab5.c: 67: TMR0IF=0;
   557   000B24  94F2               	bcf	4082,2,c	;volatile
   558                           
   559                           ;Lab5.c: 68: TMR0=3036;
   560   000B26  0E0B               	movlw	11
   561   000B28  6ED7               	movwf	215,c	;volatile
   562   000B2A  0EDC               	movlw	220
   563   000B2C  6ED6               	movwf	214,c	;volatile
   564                           
   565                           ;Lab5.c: 69: TMR0IE=1;
   566   000B2E  8AF2               	bsf	4082,5,c	;volatile
   567                           
   568                           ;Lab5.c: 70: GIE=1;
   569   000B30  8EF2               	bsf	4082,7,c	;volatile
   570                           
   571                           ;Lab5.c: 71: TMR0ON=1;
   572   000B32  8ED5               	bsf	4053,7,c	;volatile
   573                           
   574                           ;Lab5.c: 73: BorraLCD();
   575   000B34  EC95  F009         	call	_BorraLCD	;wreg free
   576                           
   577                           ;Lab5.c: 75: if (TempEEPROM != 0xFF) {
   578   000B38  281D               	incf	_TempEEPROM^0,w,c
   579   000B3A  B4D8               	btfsc	status,2,c
   580   000B3C  D02B               	goto	l2025
   581                           
   582                           ;Lab5.c: 76: MensajeLCD_Var("Ultima temp:");
   583   000B3E  0E01               	movlw	low STR_1
   584   000B40  6E08               	movwf	MensajeLCD_Var@a^0,c
   585   000B42  EC3E  F008         	call	_MensajeLCD_Var	;wreg free
   586                           
   587                           ;Lab5.c: 77: DireccionaLCD(192);
   588   000B46  0EC0               	movlw	192
   589   000B48  EC7F  F009         	call	_DireccionaLCD
   590                           
   591                           ;Lab5.c: 78: EscribeLCD_c(TempEEPROM / 10 + 48);
   592   000B4C  0E0A               	movlw	10
   593   000B4E  6E03               	movwf	___lbdiv@divisor^0,c
   594   000B50  501D               	movf	_TempEEPROM^0,w,c
   595   000B52  ECAB  F008         	call	___lbdiv
   596   000B56  0F30               	addlw	48
   597   000B58  EC8A  F009         	call	_EscribeLCD_c
   598                           
   599                           ;Lab5.c: 79: EscribeLCD_c(TempEEPROM % 10 + 48);
   600   000B5C  0E0A               	movlw	10
   601   000B5E  6E03               	movwf	___lbmod@divisor^0,c
   602   000B60  501D               	movf	_TempEEPROM^0,w,c
   603   000B62  EC13  F009         	call	___lbmod
   604   000B66  0F30               	addlw	48
   605   000B68  EC8A  F009         	call	_EscribeLCD_c
   606                           
   607                           ;Lab5.c: 80: EscribeLCD_c(223);
   608   000B6C  0EDF               	movlw	223
   609   000B6E  EC8A  F009         	call	_EscribeLCD_c
   610                           
   611                           ;Lab5.c: 81: EscribeLCD_c('C');
   612   000B72  0E43               	movlw	67
   613   000B74  EC8A  F009         	call	_EscribeLCD_c
   614                           
   615                           ;Lab5.c: 82: _delay((unsigned long)((2000)*(8000000/4000.0)));
   616   000B78  0E15               	movlw	21
   617   000B7A  6E18               	movwf	(??_main+1)^0,c
   618   000B7C  0E4B               	movlw	75
   619   000B7E  6E17               	movwf	??_main^0,c
   620   000B80  0EBE               	movlw	190
   621   000B82                     u1147:
   622   000B82  2EE8               	decfsz	wreg,f,c
   623   000B84  D7FE               	bra	u1147
   624   000B86  2E17               	decfsz	??_main^0,f,c
   625   000B88  D7FC               	bra	u1147
   626   000B8A  2E18               	decfsz	(??_main+1)^0,f,c
   627   000B8C  D7FA               	bra	u1147
   628   000B8E  D000               	nop2	
   629                           
   630                           ;Lab5.c: 83: BorraLCD();
   631   000B90  EC95  F009         	call	_BorraLCD	;wreg free
   632   000B94                     l2025:
   633                           
   634                           ;Lab5.c: 84: };Lab5.c: 86: MensajeLCD_Var("Iniciando");
   635   000B94  0E0E               	movlw	low STR_2
   636   000B96  6E08               	movwf	MensajeLCD_Var@a^0,c
   637   000B98  EC3E  F008         	call	_MensajeLCD_Var	;wreg free
   638                           
   639                           ;Lab5.c: 87: _delay((unsigned long)((500)*(8000000/4000.0)));
   640   000B9C  0E06               	movlw	6
   641   000B9E  6E18               	movwf	(??_main+1)^0,c
   642   000BA0  0E13               	movlw	19
   643   000BA2  6E17               	movwf	??_main^0,c
   644   000BA4  0EAE               	movlw	174
   645   000BA6                     u1157:
   646   000BA6  2EE8               	decfsz	wreg,f,c
   647   000BA8  D7FE               	bra	u1157
   648   000BAA  2E17               	decfsz	??_main^0,f,c
   649   000BAC  D7FC               	bra	u1157
   650   000BAE  2E18               	decfsz	(??_main+1)^0,f,c
   651   000BB0  D7FA               	bra	u1157
   652                           
   653                           ;Lab5.c: 88: EscribeLCD_c('.');
   654   000BB2  0E2E               	movlw	46
   655   000BB4  EC8A  F009         	call	_EscribeLCD_c
   656                           
   657                           ;Lab5.c: 89: _delay((unsigned long)((500)*(8000000/4000.0)));
   658   000BB8  0E06               	movlw	6
   659   000BBA  6E18               	movwf	(??_main+1)^0,c
   660   000BBC  0E13               	movlw	19
   661   000BBE  6E17               	movwf	??_main^0,c
   662   000BC0  0EAE               	movlw	174
   663   000BC2                     u1167:
   664   000BC2  2EE8               	decfsz	wreg,f,c
   665   000BC4  D7FE               	bra	u1167
   666   000BC6  2E17               	decfsz	??_main^0,f,c
   667   000BC8  D7FC               	bra	u1167
   668   000BCA  2E18               	decfsz	(??_main+1)^0,f,c
   669   000BCC  D7FA               	bra	u1167
   670                           
   671                           ;Lab5.c: 90: EscribeLCD_c('.');
   672   000BCE  0E2E               	movlw	46
   673   000BD0  EC8A  F009         	call	_EscribeLCD_c
   674                           
   675                           ;Lab5.c: 91: _delay((unsigned long)((500)*(8000000/4000.0)));
   676   000BD4  0E06               	movlw	6
   677   000BD6  6E18               	movwf	(??_main+1)^0,c
   678   000BD8  0E13               	movlw	19
   679   000BDA  6E17               	movwf	??_main^0,c
   680   000BDC  0EAE               	movlw	174
   681   000BDE                     u1177:
   682   000BDE  2EE8               	decfsz	wreg,f,c
   683   000BE0  D7FE               	bra	u1177
   684   000BE2  2E17               	decfsz	??_main^0,f,c
   685   000BE4  D7FC               	bra	u1177
   686   000BE6  2E18               	decfsz	(??_main+1)^0,f,c
   687   000BE8  D7FA               	bra	u1177
   688                           
   689                           ;Lab5.c: 92: EscribeLCD_c('.');
   690   000BEA  0E2E               	movlw	46
   691   000BEC  EC8A  F009         	call	_EscribeLCD_c
   692                           
   693                           ;Lab5.c: 93: _delay((unsigned long)((500)*(8000000/4000.0)));
   694   000BF0  0E06               	movlw	6
   695   000BF2  6E18               	movwf	(??_main+1)^0,c
   696   000BF4  0E13               	movlw	19
   697   000BF6  6E17               	movwf	??_main^0,c
   698   000BF8  0EAE               	movlw	174
   699   000BFA                     u1187:
   700   000BFA  2EE8               	decfsz	wreg,f,c
   701   000BFC  D7FE               	bra	u1187
   702   000BFE  2E17               	decfsz	??_main^0,f,c
   703   000C00  D7FC               	bra	u1187
   704   000C02  2E18               	decfsz	(??_main+1)^0,f,c
   705   000C04  D7FA               	bra	u1187
   706                           
   707                           ;Lab5.c: 94: BorraLCD();
   708   000C06  EC95  F009         	call	_BorraLCD	;wreg free
   709                           
   710                           ;Lab5.c: 95: _delay((unsigned long)((500)*(8000000/4000.0)));
   711   000C0A  0E06               	movlw	6
   712   000C0C  6E18               	movwf	(??_main+1)^0,c
   713   000C0E  0E13               	movlw	19
   714   000C10  6E17               	movwf	??_main^0,c
   715   000C12  0EAE               	movlw	174
   716   000C14                     u1197:
   717   000C14  2EE8               	decfsz	wreg,f,c
   718   000C16  D7FE               	bra	u1197
   719   000C18  2E17               	decfsz	??_main^0,f,c
   720   000C1A  D7FC               	bra	u1197
   721   000C1C  2E18               	decfsz	(??_main+1)^0,f,c
   722   000C1E  D7FA               	bra	u1197
   723                           
   724                           ;Lab5.c: 97: MensajeLCD_Var("Temp:");
   725   000C20  0E18               	movlw	low STR_3
   726   000C22  6E08               	movwf	MensajeLCD_Var@a^0,c
   727   000C24  EC3E  F008         	call	_MensajeLCD_Var	;wreg free
   728                           
   729                           ;Lab5.c: 98: _delay((unsigned long)((500)*(8000000/4000.0)));
   730   000C28  0E06               	movlw	6
   731   000C2A  6E18               	movwf	(??_main+1)^0,c
   732   000C2C  0E13               	movlw	19
   733   000C2E  6E17               	movwf	??_main^0,c
   734   000C30  0EAE               	movlw	174
   735   000C32                     u1207:
   736   000C32  2EE8               	decfsz	wreg,f,c
   737   000C34  D7FE               	bra	u1207
   738   000C36  2E17               	decfsz	??_main^0,f,c
   739   000C38  D7FC               	bra	u1207
   740   000C3A  2E18               	decfsz	(??_main+1)^0,f,c
   741   000C3C  D7FA               	bra	u1207
   742                           
   743                           ;Lab5.c: 99: DireccionaLCD(0xC0);
   744   000C3E  0EC0               	movlw	192
   745   000C40  EC7F  F009         	call	_DireccionaLCD
   746                           
   747                           ;Lab5.c: 100: MensajeLCD_Var("Hum:");
   748   000C44  0E1E               	movlw	low STR_4
   749   000C46  6E08               	movwf	MensajeLCD_Var@a^0,c
   750   000C48  EC3E  F008         	call	_MensajeLCD_Var	;wreg free
   751   000C4C                     l205:
   752                           
   753                           ;Lab5.c: 102: _delay((unsigned long)((500)*(8000000/4000.0)));
   754   000C4C  0E06               	movlw	6
   755   000C4E  6E18               	movwf	(??_main+1)^0,c
   756   000C50  0E13               	movlw	19
   757   000C52  6E17               	movwf	??_main^0,c
   758   000C54  0EAE               	movlw	174
   759   000C56                     u1217:
   760   000C56  2EE8               	decfsz	wreg,f,c
   761   000C58  D7FE               	bra	u1217
   762   000C5A  2E17               	decfsz	??_main^0,f,c
   763   000C5C  D7FC               	bra	u1217
   764   000C5E  2E18               	decfsz	(??_main+1)^0,f,c
   765   000C60  D7FA               	bra	u1217
   766                           
   767                           ;Lab5.c: 104: _delay((unsigned long)((500)*(8000000/4000.0)));
   768   000C62  0E06               	movlw	6
   769   000C64  6E18               	movwf	(??_main+1)^0,c
   770   000C66  0E13               	movlw	19
   771   000C68  6E17               	movwf	??_main^0,c
   772   000C6A  0EAE               	movlw	174
   773   000C6C                     u1227:
   774   000C6C  2EE8               	decfsz	wreg,f,c
   775   000C6E  D7FE               	bra	u1227
   776   000C70  2E17               	decfsz	??_main^0,f,c
   777   000C72  D7FC               	bra	u1227
   778   000C74  2E18               	decfsz	(??_main+1)^0,f,c
   779   000C76  D7FA               	bra	u1227
   780                           
   781                           ;Lab5.c: 106: LeerHT11();
   782   000C78  ECC8  F008         	call	_LeerHT11	;wreg free
   783                           
   784                           ;Lab5.c: 107: _delay((unsigned long)((100)*(8000000/4000.0)));
   785   000C7C  0E02               	movlw	2
   786   000C7E  6E18               	movwf	(??_main+1)^0,c
   787   000C80  0E04               	movlw	4
   788   000C82  6E17               	movwf	??_main^0,c
   789   000C84  0EBA               	movlw	186
   790   000C86                     u1237:
   791   000C86  2EE8               	decfsz	wreg,f,c
   792   000C88  D7FE               	bra	u1237
   793   000C8A  2E17               	decfsz	??_main^0,f,c
   794   000C8C  D7FC               	bra	u1237
   795   000C8E  2E18               	decfsz	(??_main+1)^0,f,c
   796   000C90  D7FA               	bra	u1237
   797   000C92  D000               	nop2	
   798                           
   799                           ;Lab5.c: 109: GuardarDatoEnEEPROM(0, Temp);
   800   000C94  0E00               	movlw	0
   801   000C96  6E04               	movwf	(GuardarDatoEnEEPROM@dir+1)^0,c
   802   000C98  0E00               	movlw	0
   803   000C9A  6E03               	movwf	GuardarDatoEnEEPROM@dir^0,c
   804   000C9C  C01F  F005         	movff	_Temp,GuardarDatoEnEEPROM@dato
   805   000CA0  EC4F  F009         	call	_GuardarDatoEnEEPROM	;wreg free
   806                           
   807                           ;Lab5.c: 110: _delay((unsigned long)((100)*(8000000/4000.0)));
   808   000CA4  0E02               	movlw	2
   809   000CA6  6E18               	movwf	(??_main+1)^0,c
   810   000CA8  0E04               	movlw	4
   811   000CAA  6E17               	movwf	??_main^0,c
   812   000CAC  0EBA               	movlw	186
   813   000CAE                     u1247:
   814   000CAE  2EE8               	decfsz	wreg,f,c
   815   000CB0  D7FE               	bra	u1247
   816   000CB2  2E17               	decfsz	??_main^0,f,c
   817   000CB4  D7FC               	bra	u1247
   818   000CB6  2E18               	decfsz	(??_main+1)^0,f,c
   819   000CB8  D7FA               	bra	u1247
   820   000CBA  D000               	nop2	
   821                           
   822                           ;Lab5.c: 111: ColorRGB(Temp);
   823   000CBC  C01F  F003         	movff	_Temp,ColorRGB@val
   824   000CC0  6A04               	clrf	(ColorRGB@val+1)^0,c
   825   000CC2  EC99  F006         	call	_ColorRGB	;wreg free
   826                           
   827                           ;Lab5.c: 112: _delay((unsigned long)((100)*(8000000/4000.0)));
   828   000CC6  0E02               	movlw	2
   829   000CC8  6E18               	movwf	(??_main+1)^0,c
   830   000CCA  0E04               	movlw	4
   831   000CCC  6E17               	movwf	??_main^0,c
   832   000CCE  0EBA               	movlw	186
   833   000CD0                     u1257:
   834   000CD0  2EE8               	decfsz	wreg,f,c
   835   000CD2  D7FE               	bra	u1257
   836   000CD4  2E17               	decfsz	??_main^0,f,c
   837   000CD6  D7FC               	bra	u1257
   838   000CD8  2E18               	decfsz	(??_main+1)^0,f,c
   839   000CDA  D7FA               	bra	u1257
   840   000CDC  D000               	nop2	
   841                           
   842                           ;Lab5.c: 114: if(!RC4) TransmitirDatos(RB1, RB2);
   843   000CDE  B882               	btfsc	3970,4,c	;volatile
   844   000CE0  D011               	goto	l2063
   845   000CE2  A281               	btfss	3969,1,c	;volatile
   846   000CE4  D002               	goto	u1070
   847   000CE6  0E01               	movlw	1
   848   000CE8  D001               	goto	u1080
   849   000CEA                     u1070:
   850   000CEA  0E00               	movlw	0
   851   000CEC                     u1080:
   852   000CEC  6E0B               	movwf	TransmitirDatos@Ent1^0,c
   853   000CEE  6A0C               	clrf	(TransmitirDatos@Ent1+1)^0,c
   854   000CF0  A481               	btfss	3969,2,c	;volatile
   855   000CF2  D002               	goto	u1090
   856   000CF4  0E01               	movlw	1
   857   000CF6  D001               	goto	u1100
   858   000CF8                     u1090:
   859   000CF8  0E00               	movlw	0
   860   000CFA                     u1100:
   861   000CFA  6E0D               	movwf	TransmitirDatos@Ent2^0,c
   862   000CFC  6A0E               	clrf	(TransmitirDatos@Ent2+1)^0,c
   863   000CFE  EC12  F004         	call	_TransmitirDatos	;wreg free
   864   000D02  D00A               	goto	l2065
   865   000D04                     l2063:
   866                           
   867                           ;Lab5.c: 115: else TransmitirDatos(A, B);
   868   000D04  C01B  F00B         	movff	_A,TransmitirDatos@Ent1
   869   000D08  C01C  F00C         	movff	_A+1,TransmitirDatos@Ent1+1
   870   000D0C  C019  F00D         	movff	_B,TransmitirDatos@Ent2
   871   000D10  C01A  F00E         	movff	_B+1,TransmitirDatos@Ent2+1
   872   000D14  EC12  F004         	call	_TransmitirDatos	;wreg free
   873   000D18                     l2065:
   874                           
   875                           ;Lab5.c: 116: Conversion(0);
   876   000D18  0E00               	movlw	0
   877   000D1A  EC9F  F009         	call	_Conversion
   878                           
   879                           ;Lab5.c: 117: RB0 = (ADRES <= 511) ? 0 : 1;
   880   000D1E  0E00               	movlw	0
   881   000D20  5CC3               	subwf	195,w,c	;volatile
   882   000D22  0E02               	movlw	2
   883   000D24  58C4               	subwfb	196,w,c	;volatile
   884   000D26  A0D8               	btfss	status,0,c
   885   000D28  D002               	goto	u1110
   886   000D2A  8081               	bsf	3969,0,c	;volatile
   887   000D2C  D78F               	goto	l205
   888   000D2E                     u1110:
   889   000D2E  9081               	bcf	3969,0,c	;volatile
   890   000D30  D78D               	goto	l205
   891   000D32                     __end_of_main:
   892                           	callstack 0
   893                           
   894 ;; *************** function _leerDatoEnEEPROM *****************
   895 ;; Defined at:
   896 ;;		line 296 in file "Lab5.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  dir             2    2[COMRAM] unsigned int 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      unsigned char 
   903 ;; Registers used:
   904 ;;		wreg, status,2
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   910 ;;      Params:         2       0       0       0       0       0       0       0       0
   911 ;;      Locals:         0       0       0       0       0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0       0       0       0       0
   913 ;;      Totals:         2       0       0       0       0       0       0       0       0
   914 ;;Total ram usage:        2 bytes
   915 ;; Hardware stack levels used: 1
   916 ;; Hardware stack levels required when called: 2
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text1
   925   001352                     __ptext1:
   926                           	callstack 0
   927   001352                     _leerDatoEnEEPROM:
   928                           	callstack 28
   929                           
   930                           ;Lab5.c: 297: EEADR = dir;
   931                           
   932                           ;incstack = 0
   933   001352  C003  FFA9         	movff	leerDatoEnEEPROM@dir,4009	;volatile
   934                           
   935                           ;Lab5.c: 298: EEPGD = 0;
   936   001356  9EA6               	bcf	4006,7,c	;volsfr
   937                           
   938                           ;Lab5.c: 299: CFGS = 0;
   939   001358  9CA6               	bcf	4006,6,c	;volsfr
   940                           
   941                           ;Lab5.c: 300: RD = 1;
   942   00135A  80A6               	bsf	4006,0,c	;volsfr
   943                           
   944                           ;Lab5.c: 302: return EEDATA;
   945   00135C  50A8               	movf	168,w,c	;volatile
   946   00135E  0012               	return		;funcret
   947   001360                     __end_of_leerDatoEnEEPROM:
   948                           	callstack 0
   949                           
   950 ;; *************** function _TransmitirDatos *****************
   951 ;; Defined at:
   952 ;;		line 169 in file "Lab5.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  Ent1            2   10[COMRAM] unsigned int 
   955 ;;  Ent2            2   12[COMRAM] unsigned int 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  TempC           2   20[COMRAM] unsigned int 
   958 ;;  Simb            2   18[COMRAM] unsigned int 
   959 ;;  n               2   16[COMRAM] unsigned int 
   960 ;;  HumC            2    0        unsigned int 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   970 ;;      Params:         4       0       0       0       0       0       0       0       0
   971 ;;      Locals:         6       0       0       0       0       0       0       0       0
   972 ;;      Temps:          2       0       0       0       0       0       0       0       0
   973 ;;      Totals:        12       0       0       0       0       0       0       0       0
   974 ;;Total ram usage:       12 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; Hardware stack levels required when called: 5
   977 ;; This function calls:
   978 ;;		_DireccionaLCD
   979 ;;		_EscribeLCD_c
   980 ;;		_Transmitir
   981 ;;		___awdiv
   982 ;;		___lbdiv
   983 ;;		___lbmod
   984 ;;		___lwdiv
   985 ;;		___lwmod
   986 ;;		___wmul
   987 ;; This function is called by:
   988 ;;		_main
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text2
   993   000824                     __ptext2:
   994                           	callstack 0
   995   000824                     _TransmitirDatos:
   996                           	callstack 25
   997                           
   998                           ;Lab5.c: 170: unsigned int n = Ent1 * 10 + Ent2, TempC = Temp, HumC = Hum;
   999                           
  1000                           ;incstack = 0
  1001   000824  C00B  F003         	movff	TransmitirDatos@Ent1,___wmul@multiplier
  1002   000828  C00C  F004         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
  1003   00082C  0E00               	movlw	0
  1004   00082E  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  1005   000830  0E0A               	movlw	10
  1006   000832  6E05               	movwf	___wmul@multiplicand^0,c
  1007   000834  EC3C  F009         	call	___wmul	;wreg free
  1008   000838  500D               	movf	TransmitirDatos@Ent2^0,w,c
  1009   00083A  2403               	addwf	?___wmul^0,w,c
  1010   00083C  6E11               	movwf	TransmitirDatos@n^0,c
  1011   00083E  500E               	movf	(TransmitirDatos@Ent2+1)^0,w,c
  1012   000840  2004               	addwfc	(?___wmul+1)^0,w,c
  1013   000842  6E12               	movwf	(TransmitirDatos@n+1)^0,c
  1014   000844  C01F  F015         	movff	_Temp,TransmitirDatos@TempC
  1015   000848  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
  1016                           
  1017                           ;Lab5.c: 171: unsigned int Simb = 67;
  1018   00084A  0E00               	movlw	0
  1019   00084C  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
  1020   00084E  0E43               	movlw	67
  1021   000850  6E13               	movwf	TransmitirDatos@Simb^0,c
  1022                           
  1023                           ;Lab5.c: 173: switch (n) {
  1024   000852  D03E               	goto	l1899
  1025   000854                     l251:
  1026                           
  1027                           ;Lab5.c: 175: TempC = Temp;
  1028   000854  C01F  F015         	movff	_Temp,TransmitirDatos@TempC
  1029   000858  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
  1030                           
  1031                           ;Lab5.c: 176: Simb = 67;
  1032   00085A  0E00               	movlw	0
  1033   00085C  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
  1034   00085E  0E43               	movlw	67
  1035   000860  D035               	goto	L3
  1036   000862                     l1885:
  1037                           
  1038                           ;Lab5.c: 179: TempC = Temp + 273;
  1039   000862  0E11               	movlw	17
  1040   000864  241F               	addwf	_Temp^0,w,c
  1041   000866  6E15               	movwf	TransmitirDatos@TempC^0,c
  1042   000868  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
  1043   00086A  0E01               	movlw	1
  1044   00086C  2216               	addwfc	(TransmitirDatos@TempC+1)^0,f,c
  1045                           
  1046                           ;Lab5.c: 180: Simb = 75;
  1047   00086E  0E00               	movlw	0
  1048   000870  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
  1049   000872  0E4B               	movlw	75
  1050   000874  D02B               	goto	L3
  1051   000876                     l1889:
  1052                           
  1053                           ;Lab5.c: 183: TempC = Temp * 9 / 5 + 492;
  1054   000876  501F               	movf	_Temp^0,w,c
  1055   000878  0D09               	mullw	9
  1056   00087A  CFF3 F003          	movff	prodl,___awdiv@dividend
  1057   00087E  CFF4 F004          	movff	prodh,___awdiv@dividend+1
  1058   000882  0E00               	movlw	0
  1059   000884  6E06               	movwf	(___awdiv@divisor+1)^0,c
  1060   000886  0E05               	movlw	5
  1061   000888  6E05               	movwf	___awdiv@divisor^0,c
  1062   00088A  ECA0  F007         	call	___awdiv	;wreg free
  1063   00088E  0EEC               	movlw	236
  1064   000890  2403               	addwf	?___awdiv^0,w,c
  1065   000892  6E15               	movwf	TransmitirDatos@TempC^0,c
  1066   000894  0E01               	movlw	1
  1067   000896  2004               	addwfc	(?___awdiv+1)^0,w,c
  1068   000898  6E16               	movwf	(TransmitirDatos@TempC+1)^0,c
  1069                           
  1070                           ;Lab5.c: 184: Simb = 82;
  1071   00089A  0E00               	movlw	0
  1072   00089C  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
  1073   00089E  0E52               	movlw	82
  1074   0008A0  D015               	goto	L3
  1075   0008A2                     l1893:
  1076                           
  1077                           ;Lab5.c: 187: TempC = Temp * 9 / 5 + 32;
  1078   0008A2  501F               	movf	_Temp^0,w,c
  1079   0008A4  0D09               	mullw	9
  1080   0008A6  CFF3 F003          	movff	prodl,___awdiv@dividend
  1081   0008AA  CFF4 F004          	movff	prodh,___awdiv@dividend+1
  1082   0008AE  0E00               	movlw	0
  1083   0008B0  6E06               	movwf	(___awdiv@divisor+1)^0,c
  1084   0008B2  0E05               	movlw	5
  1085   0008B4  6E05               	movwf	___awdiv@divisor^0,c
  1086   0008B6  ECA0  F007         	call	___awdiv	;wreg free
  1087   0008BA  0E20               	movlw	32
  1088   0008BC  2403               	addwf	?___awdiv^0,w,c
  1089   0008BE  6E15               	movwf	TransmitirDatos@TempC^0,c
  1090   0008C0  0E00               	movlw	0
  1091   0008C2  2004               	addwfc	(?___awdiv+1)^0,w,c
  1092   0008C4  6E16               	movwf	(TransmitirDatos@TempC+1)^0,c
  1093                           
  1094                           ;Lab5.c: 188: Simb = 70;
  1095   0008C6  0E00               	movlw	0
  1096   0008C8  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
  1097   0008CA  0E46               	movlw	70
  1098   0008CC                     L3:
  1099   0008CC  6E13               	movwf	TransmitirDatos@Simb^0,c
  1100                           
  1101                           ;Lab5.c: 189: break;
  1102   0008CE  D015               	goto	l1901
  1103   0008D0                     l1899:
  1104   0008D0  C011  F00F         	movff	TransmitirDatos@n,??_TransmitirDatos
  1105   0008D4  C012  F010         	movff	TransmitirDatos@n+1,??_TransmitirDatos+1
  1106                           
  1107                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1108                           ; Switch size 1, requested type "simple"
  1109                           ; Number of cases is 1, Range of values is 0 to 0
  1110                           ; switch strategies available:
  1111                           ; Name         Instructions Cycles
  1112                           ; simple_byte            4     3 (average)
  1113                           ;	Chosen strategy is simple_byte
  1114   0008D8  5010               	movf	(??_TransmitirDatos+1)^0,w,c
  1115   0008DA  0A00               	xorlw	0	; case 0
  1116   0008DC  A4D8               	btfss	status,2,c
  1117   0008DE  D00D               	goto	l1901
  1118                           
  1119                           ; Switch size 1, requested type "simple"
  1120                           ; Number of cases is 4, Range of values is 0 to 11
  1121                           ; switch strategies available:
  1122                           ; Name         Instructions Cycles
  1123                           ; simple_byte           13     7 (average)
  1124                           ;	Chosen strategy is simple_byte
  1125   0008E0  500F               	movf	??_TransmitirDatos^0,w,c
  1126   0008E2  0A00               	xorlw	0	; case 0
  1127   0008E4  B4D8               	btfsc	status,2,c
  1128   0008E6  D7B6               	goto	l251
  1129   0008E8  0A01               	xorlw	1	; case 1
  1130   0008EA  B4D8               	btfsc	status,2,c
  1131   0008EC  D7BA               	goto	l1885
  1132   0008EE  0A0B               	xorlw	11	; case 10
  1133   0008F0  B4D8               	btfsc	status,2,c
  1134   0008F2  D7C1               	goto	l1889
  1135   0008F4  0A01               	xorlw	1	; case 11
  1136   0008F6  B4D8               	btfsc	status,2,c
  1137   0008F8  D7D4               	goto	l1893
  1138   0008FA                     l1901:
  1139                           
  1140                           ;Lab5.c: 191: Transmitir('T');
  1141   0008FA  0E54               	movlw	84
  1142   0008FC  ECB7  F009         	call	_Transmitir
  1143                           
  1144                           ;Lab5.c: 192: Transmitir('e');
  1145   000900  0E65               	movlw	101
  1146   000902  ECB7  F009         	call	_Transmitir
  1147                           
  1148                           ;Lab5.c: 193: Transmitir('m');
  1149   000906  0E6D               	movlw	109
  1150   000908  ECB7  F009         	call	_Transmitir
  1151                           
  1152                           ;Lab5.c: 194: Transmitir('p');
  1153   00090C  0E70               	movlw	112
  1154   00090E  ECB7  F009         	call	_Transmitir
  1155                           
  1156                           ;Lab5.c: 195: Transmitir(':');
  1157   000912  0E3A               	movlw	58
  1158   000914  ECB7  F009         	call	_Transmitir
  1159                           
  1160                           ;Lab5.c: 196: Transmitir(' ');
  1161   000918  0E20               	movlw	32
  1162   00091A  ECB7  F009         	call	_Transmitir
  1163                           
  1164                           ;Lab5.c: 198: DireccionaLCD(0x85);
  1165   00091E  0E85               	movlw	133
  1166   000920  EC7F  F009         	call	_DireccionaLCD
  1167                           
  1168                           ;Lab5.c: 199: if (TempC / 100 > 0) {
  1169   000924  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1170   000928  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1171   00092C  0E00               	movlw	0
  1172   00092E  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1173   000930  0E64               	movlw	100
  1174   000932  6E05               	movwf	___lwdiv@divisor^0,c
  1175   000934  EC15  F008         	call	___lwdiv	;wreg free
  1176   000938  5003               	movf	?___lwdiv^0,w,c
  1177   00093A  1004               	iorwf	(?___lwdiv+1)^0,w,c
  1178   00093C  B4D8               	btfsc	status,2,c
  1179   00093E  D02A               	goto	l256
  1180                           
  1181                           ;Lab5.c: 200: Transmitir(TempC / 100 + 48);
  1182   000940  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1183   000944  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1184   000948  0E00               	movlw	0
  1185   00094A  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1186   00094C  0E64               	movlw	100
  1187   00094E  6E05               	movwf	___lwdiv@divisor^0,c
  1188   000950  EC15  F008         	call	___lwdiv	;wreg free
  1189   000954  5003               	movf	?___lwdiv^0,w,c
  1190   000956  0F30               	addlw	48
  1191   000958  ECB7  F009         	call	_Transmitir
  1192                           
  1193                           ;Lab5.c: 201: EscribeLCD_c(TempC / 100 + 48);
  1194   00095C  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1195   000960  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1196   000964  0E00               	movlw	0
  1197   000966  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1198   000968  0E64               	movlw	100
  1199   00096A  6E05               	movwf	___lwdiv@divisor^0,c
  1200   00096C  EC15  F008         	call	___lwdiv	;wreg free
  1201   000970  5003               	movf	?___lwdiv^0,w,c
  1202   000972  0F30               	addlw	48
  1203   000974  EC8A  F009         	call	_EscribeLCD_c
  1204                           
  1205                           ;Lab5.c: 202: TempC = TempC % 100;
  1206   000978  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1207   00097C  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1208   000980  0E00               	movlw	0
  1209   000982  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1210   000984  0E64               	movlw	100
  1211   000986  6E05               	movwf	___lwmod@divisor^0,c
  1212   000988  EC8A  F008         	call	___lwmod	;wreg free
  1213   00098C  C003  F015         	movff	?___lwmod,TransmitirDatos@TempC
  1214   000990  C004  F016         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1215   000994                     l256:
  1216                           
  1217                           ;Lab5.c: 203: };Lab5.c: 204: Transmitir(TempC / 10 + 48);
  1218   000994  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1219   000998  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1220   00099C  0E00               	movlw	0
  1221   00099E  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1222   0009A0  0E0A               	movlw	10
  1223   0009A2  6E05               	movwf	___lwdiv@divisor^0,c
  1224   0009A4  EC15  F008         	call	___lwdiv	;wreg free
  1225   0009A8  5003               	movf	?___lwdiv^0,w,c
  1226   0009AA  0F30               	addlw	48
  1227   0009AC  ECB7  F009         	call	_Transmitir
  1228                           
  1229                           ;Lab5.c: 205: Transmitir(TempC % 10 + 48);
  1230   0009B0  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1231   0009B4  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1232   0009B8  0E00               	movlw	0
  1233   0009BA  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1234   0009BC  0E0A               	movlw	10
  1235   0009BE  6E05               	movwf	___lwmod@divisor^0,c
  1236   0009C0  EC8A  F008         	call	___lwmod	;wreg free
  1237   0009C4  5003               	movf	?___lwmod^0,w,c
  1238   0009C6  0F30               	addlw	48
  1239   0009C8  ECB7  F009         	call	_Transmitir
  1240                           
  1241                           ;Lab5.c: 206: Transmitir(Simb);
  1242   0009CC  5013               	movf	TransmitirDatos@Simb^0,w,c
  1243   0009CE  ECB7  F009         	call	_Transmitir
  1244                           
  1245                           ;Lab5.c: 207: Transmitir(' ');
  1246   0009D2  0E20               	movlw	32
  1247   0009D4  ECB7  F009         	call	_Transmitir
  1248                           
  1249                           ;Lab5.c: 208: Transmitir('\n');
  1250   0009D8  0E0A               	movlw	10
  1251   0009DA  ECB7  F009         	call	_Transmitir
  1252                           
  1253                           ;Lab5.c: 209: Transmitir('H');
  1254   0009DE  0E48               	movlw	72
  1255   0009E0  ECB7  F009         	call	_Transmitir
  1256                           
  1257                           ;Lab5.c: 210: Transmitir('u');
  1258   0009E4  0E75               	movlw	117
  1259   0009E6  ECB7  F009         	call	_Transmitir
  1260                           
  1261                           ;Lab5.c: 211: Transmitir('m');
  1262   0009EA  0E6D               	movlw	109
  1263   0009EC  ECB7  F009         	call	_Transmitir
  1264                           
  1265                           ;Lab5.c: 212: Transmitir(':');
  1266   0009F0  0E3A               	movlw	58
  1267   0009F2  ECB7  F009         	call	_Transmitir
  1268                           
  1269                           ;Lab5.c: 213: Transmitir(' ');
  1270   0009F6  0E20               	movlw	32
  1271   0009F8  ECB7  F009         	call	_Transmitir
  1272                           
  1273                           ;Lab5.c: 214: Transmitir(Hum / 10 + 48);
  1274   0009FC  0E0A               	movlw	10
  1275   0009FE  6E03               	movwf	___lbdiv@divisor^0,c
  1276   000A00  501E               	movf	_Hum^0,w,c
  1277   000A02  ECAB  F008         	call	___lbdiv
  1278   000A06  0F30               	addlw	48
  1279   000A08  ECB7  F009         	call	_Transmitir
  1280                           
  1281                           ;Lab5.c: 215: Transmitir(Hum % 10 + 48);
  1282   000A0C  0E0A               	movlw	10
  1283   000A0E  6E03               	movwf	___lbmod@divisor^0,c
  1284   000A10  501E               	movf	_Hum^0,w,c
  1285   000A12  EC13  F009         	call	___lbmod
  1286   000A16  0F30               	addlw	48
  1287   000A18  ECB7  F009         	call	_Transmitir
  1288                           
  1289                           ;Lab5.c: 216: Transmitir(' ');
  1290   000A1C  0E20               	movlw	32
  1291   000A1E  ECB7  F009         	call	_Transmitir
  1292                           
  1293                           ;Lab5.c: 217: Transmitir('%');
  1294   000A22  0E25               	movlw	37
  1295   000A24  ECB7  F009         	call	_Transmitir
  1296                           
  1297                           ;Lab5.c: 218: Transmitir('\n');
  1298   000A28  0E0A               	movlw	10
  1299   000A2A  ECB7  F009         	call	_Transmitir
  1300                           
  1301                           ;Lab5.c: 219: Transmitir(' ');
  1302   000A2E  0E20               	movlw	32
  1303   000A30  ECB7  F009         	call	_Transmitir
  1304                           
  1305                           ;Lab5.c: 221: EscribeLCD_c(TempC / 10 + 48);
  1306   000A34  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1307   000A38  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1308   000A3C  0E00               	movlw	0
  1309   000A3E  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1310   000A40  0E0A               	movlw	10
  1311   000A42  6E05               	movwf	___lwdiv@divisor^0,c
  1312   000A44  EC15  F008         	call	___lwdiv	;wreg free
  1313   000A48  5003               	movf	?___lwdiv^0,w,c
  1314   000A4A  0F30               	addlw	48
  1315   000A4C  EC8A  F009         	call	_EscribeLCD_c
  1316                           
  1317                           ;Lab5.c: 222: EscribeLCD_c(TempC % 10 + 48);
  1318   000A50  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1319   000A54  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1320   000A58  0E00               	movlw	0
  1321   000A5A  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1322   000A5C  0E0A               	movlw	10
  1323   000A5E  6E05               	movwf	___lwmod@divisor^0,c
  1324   000A60  EC8A  F008         	call	___lwmod	;wreg free
  1325   000A64  5003               	movf	?___lwmod^0,w,c
  1326   000A66  0F30               	addlw	48
  1327   000A68  EC8A  F009         	call	_EscribeLCD_c
  1328                           
  1329                           ;Lab5.c: 223: if (Simb==70 | Simb == 67) EscribeLCD_c(223);
  1330   000A6C  0E46               	movlw	70
  1331   000A6E  1813               	xorwf	TransmitirDatos@Simb^0,w,c
  1332   000A70  1014               	iorwf	(TransmitirDatos@Simb+1)^0,w,c
  1333   000A72  B4D8               	btfsc	status,2,c
  1334   000A74  D005               	goto	u1040
  1335   000A76  0E43               	movlw	67
  1336   000A78  1813               	xorwf	TransmitirDatos@Simb^0,w,c
  1337   000A7A  1014               	iorwf	(TransmitirDatos@Simb+1)^0,w,c
  1338   000A7C  A4D8               	btfss	status,2,c
  1339   000A7E  D003               	goto	l257
  1340   000A80                     u1040:
  1341   000A80  0EDF               	movlw	223
  1342   000A82  EC8A  F009         	call	_EscribeLCD_c
  1343   000A86                     l257:
  1344                           
  1345                           ;Lab5.c: 224: EscribeLCD_c(Simb);
  1346   000A86  5013               	movf	TransmitirDatos@Simb^0,w,c
  1347   000A88  EC8A  F009         	call	_EscribeLCD_c
  1348                           
  1349                           ;Lab5.c: 225: EscribeLCD_c(' ');
  1350   000A8C  0E20               	movlw	32
  1351   000A8E  EC8A  F009         	call	_EscribeLCD_c
  1352                           
  1353                           ;Lab5.c: 226: DireccionaLCD(0xC4);
  1354   000A92  0EC4               	movlw	196
  1355   000A94  EC7F  F009         	call	_DireccionaLCD
  1356                           
  1357                           ;Lab5.c: 227: EscribeLCD_c(Hum / 10 + 48);
  1358   000A98  0E0A               	movlw	10
  1359   000A9A  6E03               	movwf	___lbdiv@divisor^0,c
  1360   000A9C  501E               	movf	_Hum^0,w,c
  1361   000A9E  ECAB  F008         	call	___lbdiv
  1362   000AA2  0F30               	addlw	48
  1363   000AA4  EC8A  F009         	call	_EscribeLCD_c
  1364                           
  1365                           ;Lab5.c: 228: EscribeLCD_c(Hum % 10 + 48);
  1366   000AA8  0E0A               	movlw	10
  1367   000AAA  6E03               	movwf	___lbmod@divisor^0,c
  1368   000AAC  501E               	movf	_Hum^0,w,c
  1369   000AAE  EC13  F009         	call	___lbmod
  1370   000AB2  0F30               	addlw	48
  1371   000AB4  EC8A  F009         	call	_EscribeLCD_c
  1372                           
  1373                           ;Lab5.c: 229: EscribeLCD_c('%');
  1374   000AB8  0E25               	movlw	37
  1375   000ABA  EC8A  F009         	call	_EscribeLCD_c
  1376   000ABE  0012               	return		;funcret
  1377   000AC0                     __end_of_TransmitirDatos:
  1378                           	callstack 0
  1379                           
  1380 ;; *************** function ___wmul *****************
  1381 ;; Defined at:
  1382 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  multiplier      2    2[COMRAM] unsigned int 
  1385 ;;  multiplicand    2    4[COMRAM] unsigned int 
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  product         2    6[COMRAM] unsigned int 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  2    2[COMRAM] unsigned int 
  1390 ;; Registers used:
  1391 ;;		wreg, status,2, status,0, prodl, prodh
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1397 ;;      Params:         4       0       0       0       0       0       0       0       0
  1398 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1400 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1401 ;;Total ram usage:        6 bytes
  1402 ;; Hardware stack levels used: 1
  1403 ;; Hardware stack levels required when called: 2
  1404 ;; This function calls:
  1405 ;;		Nothing
  1406 ;; This function is called by:
  1407 ;;		_TransmitirDatos
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           	psect	text3
  1412   001278                     __ptext3:
  1413                           	callstack 0
  1414   001278                     ___wmul:
  1415                           	callstack 27
  1416                           
  1417                           ;incstack = 0
  1418   001278  5003               	movf	___wmul@multiplier^0,w,c
  1419   00127A  0205               	mulwf	___wmul@multiplicand^0,c
  1420   00127C  CFF3 F007          	movff	prodl,___wmul@product
  1421   001280  CFF4 F008          	movff	prodh,___wmul@product+1
  1422   001284  5003               	movf	___wmul@multiplier^0,w,c
  1423   001286  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  1424   001288  50F3               	movf	243,w,c
  1425   00128A  2608               	addwf	(___wmul@product+1)^0,f,c
  1426   00128C  5004               	movf	(___wmul@multiplier+1)^0,w,c
  1427   00128E  0205               	mulwf	___wmul@multiplicand^0,c
  1428   001290  50F3               	movf	243,w,c
  1429   001292  2608               	addwf	(___wmul@product+1)^0,f,c
  1430   001294  C007  F003         	movff	___wmul@product,?___wmul
  1431   001298  C008  F004         	movff	___wmul@product+1,?___wmul+1
  1432   00129C  0012               	return		;funcret
  1433   00129E                     __end_of___wmul:
  1434                           	callstack 0
  1435                           
  1436 ;; *************** function ___lwmod *****************
  1437 ;; Defined at:
  1438 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  dividend        2    2[COMRAM] unsigned int 
  1441 ;;  divisor         2    4[COMRAM] unsigned int 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  counter         1    6[COMRAM] unsigned char 
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  2    2[COMRAM] unsigned int 
  1446 ;; Registers used:
  1447 ;;		wreg, status,2, status,0
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1453 ;;      Params:         4       0       0       0       0       0       0       0       0
  1454 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1455 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1456 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1457 ;;Total ram usage:        5 bytes
  1458 ;; Hardware stack levels used: 1
  1459 ;; Hardware stack levels required when called: 2
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_TransmitirDatos
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text4
  1468   001114                     __ptext4:
  1469                           	callstack 0
  1470   001114                     ___lwmod:
  1471                           	callstack 27
  1472                           
  1473                           ;incstack = 0
  1474   001114  5005               	movf	___lwmod@divisor^0,w,c
  1475   001116  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  1476   001118  B4D8               	btfsc	status,2,c
  1477   00111A  D018               	goto	l799
  1478   00111C  0E01               	movlw	1
  1479   00111E  6E07               	movwf	___lwmod@counter^0,c
  1480   001120  D004               	goto	l1795
  1481   001122                     l1793:
  1482   001122  90D8               	bcf	status,0,c
  1483   001124  3605               	rlcf	___lwmod@divisor^0,f,c
  1484   001126  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  1485   001128  2A07               	incf	___lwmod@counter^0,f,c
  1486   00112A                     l1795:
  1487   00112A  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  1488   00112C  D7FA               	goto	l1793
  1489   00112E                     u830:
  1490   00112E  5005               	movf	___lwmod@divisor^0,w,c
  1491   001130  5C03               	subwf	___lwmod@dividend^0,w,c
  1492   001132  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1493   001134  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  1494   001136  A0D8               	btfss	status,0,c
  1495   001138  D004               	goto	l1801
  1496   00113A  5005               	movf	___lwmod@divisor^0,w,c
  1497   00113C  5E03               	subwf	___lwmod@dividend^0,f,c
  1498   00113E  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1499   001140  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  1500   001142                     l1801:
  1501   001142  90D8               	bcf	status,0,c
  1502   001144  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  1503   001146  3205               	rrcf	___lwmod@divisor^0,f,c
  1504   001148  2E07               	decfsz	___lwmod@counter^0,f,c
  1505   00114A  D7F1               	goto	u830
  1506   00114C                     l799:
  1507   00114C  C003  F003         	movff	___lwmod@dividend,?___lwmod
  1508   001150  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  1509   001154  0012               	return		;funcret
  1510   001156                     __end_of___lwmod:
  1511                           	callstack 0
  1512                           
  1513 ;; *************** function ___lwdiv *****************
  1514 ;; Defined at:
  1515 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  dividend        2    2[COMRAM] unsigned int 
  1518 ;;  divisor         2    4[COMRAM] unsigned int 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  quotient        2    6[COMRAM] unsigned int 
  1521 ;;  counter         1    8[COMRAM] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  2    2[COMRAM] unsigned int 
  1524 ;; Registers used:
  1525 ;;		wreg, status,2, status,0
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1531 ;;      Params:         4       0       0       0       0       0       0       0       0
  1532 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1533 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1534 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1535 ;;Total ram usage:        7 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; Hardware stack levels required when called: 2
  1538 ;; This function calls:
  1539 ;;		Nothing
  1540 ;; This function is called by:
  1541 ;;		_TransmitirDatos
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           	psect	text5
  1546   00102A                     __ptext5:
  1547                           	callstack 0
  1548   00102A                     ___lwdiv:
  1549                           	callstack 27
  1550                           
  1551                           ;incstack = 0
  1552   00102A  0E00               	movlw	0
  1553   00102C  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  1554   00102E  0E00               	movlw	0
  1555   001030  6E07               	movwf	___lwdiv@quotient^0,c
  1556   001032  5005               	movf	___lwdiv@divisor^0,w,c
  1557   001034  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1558   001036  B4D8               	btfsc	status,2,c
  1559   001038  D01C               	goto	l789
  1560   00103A  0E01               	movlw	1
  1561   00103C  6E09               	movwf	___lwdiv@counter^0,c
  1562   00103E  D004               	goto	l1775
  1563   001040                     l1773:
  1564   001040  90D8               	bcf	status,0,c
  1565   001042  3605               	rlcf	___lwdiv@divisor^0,f,c
  1566   001044  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1567   001046  2A09               	incf	___lwdiv@counter^0,f,c
  1568   001048                     l1775:
  1569   001048  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  1570   00104A  D7FA               	goto	l1773
  1571   00104C                     u800:
  1572   00104C  90D8               	bcf	status,0,c
  1573   00104E  3607               	rlcf	___lwdiv@quotient^0,f,c
  1574   001050  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1575   001052  5005               	movf	___lwdiv@divisor^0,w,c
  1576   001054  5C03               	subwf	___lwdiv@dividend^0,w,c
  1577   001056  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1578   001058  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1579   00105A  A0D8               	btfss	status,0,c
  1580   00105C  D005               	goto	l1785
  1581   00105E  5005               	movf	___lwdiv@divisor^0,w,c
  1582   001060  5E03               	subwf	___lwdiv@dividend^0,f,c
  1583   001062  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1584   001064  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1585   001066  8007               	bsf	___lwdiv@quotient^0,0,c
  1586   001068                     l1785:
  1587   001068  90D8               	bcf	status,0,c
  1588   00106A  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1589   00106C  3205               	rrcf	___lwdiv@divisor^0,f,c
  1590   00106E  2E09               	decfsz	___lwdiv@counter^0,f,c
  1591   001070  D7ED               	goto	u800
  1592   001072                     l789:
  1593   001072  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  1594   001076  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1595   00107A  0012               	return		;funcret
  1596   00107C                     __end_of___lwdiv:
  1597                           	callstack 0
  1598                           
  1599 ;; *************** function ___lbmod *****************
  1600 ;; Defined at:
  1601 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  dividend        1    wreg     unsigned char 
  1604 ;;  divisor         1    2[COMRAM] unsigned char 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  dividend        1    3[COMRAM] unsigned char 
  1607 ;;  rem             1    5[COMRAM] unsigned char 
  1608 ;;  counter         1    4[COMRAM] unsigned char 
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      unsigned char 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1618 ;;      Params:         1       0       0       0       0       0       0       0       0
  1619 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1620 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1621 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1622 ;;Total ram usage:        4 bytes
  1623 ;; Hardware stack levels used: 1
  1624 ;; Hardware stack levels required when called: 2
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;;		_TransmitirDatos
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text6
  1634   001226                     __ptext6:
  1635                           	callstack 0
  1636   001226                     ___lbmod:
  1637                           	callstack 28
  1638                           
  1639                           ;incstack = 0
  1640                           ;___lbmod@dividend stored from wreg
  1641   001226  6E04               	movwf	___lbmod@dividend^0,c
  1642   001228  0E08               	movlw	8
  1643   00122A  6E05               	movwf	___lbmod@counter^0,c
  1644   00122C  0E00               	movlw	0
  1645   00122E  6E06               	movwf	___lbmod@rem^0,c
  1646   001230                     l1753:
  1647   001230  90D8               	bcf	status,0,c
  1648   001232  3404               	rlcf	___lbmod@dividend^0,w,c
  1649   001234  3406               	rlcf	___lbmod@rem^0,w,c
  1650   001236  6E06               	movwf	___lbmod@rem^0,c
  1651   001238  90D8               	bcf	status,0,c
  1652   00123A  3604               	rlcf	___lbmod@dividend^0,f,c
  1653   00123C  5003               	movf	___lbmod@divisor^0,w,c
  1654   00123E  5C06               	subwf	___lbmod@rem^0,w,c
  1655   001240  A0D8               	btfss	status,0,c
  1656   001242  D002               	goto	l1761
  1657   001244  5003               	movf	___lbmod@divisor^0,w,c
  1658   001246  5E06               	subwf	___lbmod@rem^0,f,c
  1659   001248                     l1761:
  1660   001248  2E05               	decfsz	___lbmod@counter^0,f,c
  1661   00124A  D7F2               	goto	l1753
  1662   00124C  5006               	movf	___lbmod@rem^0,w,c
  1663   00124E  0012               	return		;funcret
  1664   001250                     __end_of___lbmod:
  1665                           	callstack 0
  1666                           
  1667 ;; *************** function ___lbdiv *****************
  1668 ;; Defined at:
  1669 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  dividend        1    wreg     unsigned char 
  1672 ;;  divisor         1    2[COMRAM] unsigned char 
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  dividend        1    3[COMRAM] unsigned char 
  1675 ;;  quotient        1    5[COMRAM] unsigned char 
  1676 ;;  counter         1    4[COMRAM] unsigned char 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      unsigned char 
  1679 ;; Registers used:
  1680 ;;		wreg, status,2, status,0
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1686 ;;      Params:         1       0       0       0       0       0       0       0       0
  1687 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1689 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1690 ;;Total ram usage:        4 bytes
  1691 ;; Hardware stack levels used: 1
  1692 ;; Hardware stack levels required when called: 2
  1693 ;; This function calls:
  1694 ;;		Nothing
  1695 ;; This function is called by:
  1696 ;;		_main
  1697 ;;		_TransmitirDatos
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text7
  1702   001156                     __ptext7:
  1703                           	callstack 0
  1704   001156                     ___lbdiv:
  1705                           	callstack 28
  1706                           
  1707                           ;incstack = 0
  1708                           ;___lbdiv@dividend stored from wreg
  1709   001156  6E04               	movwf	___lbdiv@dividend^0,c
  1710   001158  0E00               	movlw	0
  1711   00115A  6E06               	movwf	___lbdiv@quotient^0,c
  1712   00115C  5003               	movf	___lbdiv@divisor^0,w,c
  1713   00115E  B4D8               	btfsc	status,2,c
  1714   001160  D015               	goto	l1747
  1715   001162  0E01               	movlw	1
  1716   001164  6E05               	movwf	___lbdiv@counter^0,c
  1717   001166  D003               	goto	l1735
  1718   001168                     l1731:
  1719   001168  90D8               	bcf	status,0,c
  1720   00116A  3603               	rlcf	___lbdiv@divisor^0,f,c
  1721   00116C  2A05               	incf	___lbdiv@counter^0,f,c
  1722   00116E                     l1735:
  1723   00116E  AE03               	btfss	___lbdiv@divisor^0,7,c
  1724   001170  D7FB               	goto	l1731
  1725   001172                     u760:
  1726   001172  90D8               	bcf	status,0,c
  1727   001174  3606               	rlcf	___lbdiv@quotient^0,f,c
  1728   001176  5003               	movf	___lbdiv@divisor^0,w,c
  1729   001178  5C04               	subwf	___lbdiv@dividend^0,w,c
  1730   00117A  A0D8               	btfss	status,0,c
  1731   00117C  D003               	goto	l1743
  1732   00117E  5003               	movf	___lbdiv@divisor^0,w,c
  1733   001180  5E04               	subwf	___lbdiv@dividend^0,f,c
  1734   001182  8006               	bsf	___lbdiv@quotient^0,0,c
  1735   001184                     l1743:
  1736   001184  90D8               	bcf	status,0,c
  1737   001186  3203               	rrcf	___lbdiv@divisor^0,f,c
  1738   001188  2E05               	decfsz	___lbdiv@counter^0,f,c
  1739   00118A  D7F3               	goto	u760
  1740   00118C                     l1747:
  1741   00118C  5006               	movf	___lbdiv@quotient^0,w,c
  1742   00118E  0012               	return		;funcret
  1743   001190                     __end_of___lbdiv:
  1744                           	callstack 0
  1745                           
  1746 ;; *************** function ___awdiv *****************
  1747 ;; Defined at:
  1748 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;  dividend        2    2[COMRAM] int 
  1751 ;;  divisor         2    4[COMRAM] int 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  quotient        2    8[COMRAM] int 
  1754 ;;  sign            1    7[COMRAM] unsigned char 
  1755 ;;  counter         1    6[COMRAM] unsigned char 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  2    2[COMRAM] int 
  1758 ;; Registers used:
  1759 ;;		wreg, status,2, status,0
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1765 ;;      Params:         4       0       0       0       0       0       0       0       0
  1766 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1768 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1769 ;;Total ram usage:        8 bytes
  1770 ;; Hardware stack levels used: 1
  1771 ;; Hardware stack levels required when called: 2
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		_TransmitirDatos
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text8
  1780   000F40                     __ptext8:
  1781                           	callstack 0
  1782   000F40                     ___awdiv:
  1783                           	callstack 27
  1784                           
  1785                           ;incstack = 0
  1786   000F40  0E00               	movlw	0
  1787   000F42  6E08               	movwf	___awdiv@sign^0,c
  1788   000F44  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1789   000F46  D006               	goto	l1689
  1790   000F48  6C05               	negf	___awdiv@divisor^0,c
  1791   000F4A  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  1792   000F4C  B0D8               	btfsc	status,0,c
  1793   000F4E  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  1794   000F50  0E01               	movlw	1
  1795   000F52  6E08               	movwf	___awdiv@sign^0,c
  1796   000F54                     l1689:
  1797   000F54  AE04               	btfss	(___awdiv@dividend+1)^0,7,c
  1798   000F56  D006               	goto	l1695
  1799   000F58  6C03               	negf	___awdiv@dividend^0,c
  1800   000F5A  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  1801   000F5C  B0D8               	btfsc	status,0,c
  1802   000F5E  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  1803   000F60  0E01               	movlw	1
  1804   000F62  1A08               	xorwf	___awdiv@sign^0,f,c
  1805   000F64                     l1695:
  1806   000F64  0E00               	movlw	0
  1807   000F66  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  1808   000F68  0E00               	movlw	0
  1809   000F6A  6E09               	movwf	___awdiv@quotient^0,c
  1810   000F6C  5005               	movf	___awdiv@divisor^0,w,c
  1811   000F6E  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  1812   000F70  B4D8               	btfsc	status,2,c
  1813   000F72  D01C               	goto	l1717
  1814   000F74  0E01               	movlw	1
  1815   000F76  6E07               	movwf	___awdiv@counter^0,c
  1816   000F78  D004               	goto	l1703
  1817   000F7A                     l1701:
  1818   000F7A  90D8               	bcf	status,0,c
  1819   000F7C  3605               	rlcf	___awdiv@divisor^0,f,c
  1820   000F7E  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  1821   000F80  2A07               	incf	___awdiv@counter^0,f,c
  1822   000F82                     l1703:
  1823   000F82  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1824   000F84  D7FA               	goto	l1701
  1825   000F86                     u720:
  1826   000F86  90D8               	bcf	status,0,c
  1827   000F88  3609               	rlcf	___awdiv@quotient^0,f,c
  1828   000F8A  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  1829   000F8C  5005               	movf	___awdiv@divisor^0,w,c
  1830   000F8E  5C03               	subwf	___awdiv@dividend^0,w,c
  1831   000F90  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1832   000F92  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  1833   000F94  A0D8               	btfss	status,0,c
  1834   000F96  D005               	goto	l1713
  1835   000F98  5005               	movf	___awdiv@divisor^0,w,c
  1836   000F9A  5E03               	subwf	___awdiv@dividend^0,f,c
  1837   000F9C  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1838   000F9E  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  1839   000FA0  8009               	bsf	___awdiv@quotient^0,0,c
  1840   000FA2                     l1713:
  1841   000FA2  90D8               	bcf	status,0,c
  1842   000FA4  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  1843   000FA6  3205               	rrcf	___awdiv@divisor^0,f,c
  1844   000FA8  2E07               	decfsz	___awdiv@counter^0,f,c
  1845   000FAA  D7ED               	goto	u720
  1846   000FAC                     l1717:
  1847   000FAC  5008               	movf	___awdiv@sign^0,w,c
  1848   000FAE  B4D8               	btfsc	status,2,c
  1849   000FB0  D004               	goto	l1721
  1850   000FB2  6C09               	negf	___awdiv@quotient^0,c
  1851   000FB4  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  1852   000FB6  B0D8               	btfsc	status,0,c
  1853   000FB8  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  1854   000FBA                     l1721:
  1855   000FBA  C009  F003         	movff	___awdiv@quotient,?___awdiv
  1856   000FBE  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  1857   000FC2  0012               	return		;funcret
  1858   000FC4                     __end_of___awdiv:
  1859                           	callstack 0
  1860                           
  1861 ;; *************** function _Transmitir *****************
  1862 ;; Defined at:
  1863 ;;		line 159 in file "Lab5.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  BufferT         1    wreg     unsigned char 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  BufferT         1    2[COMRAM] unsigned char 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1877 ;;      Params:         0       0       0       0       0       0       0       0       0
  1878 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1879 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1880 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1881 ;;Total ram usage:        1 bytes
  1882 ;; Hardware stack levels used: 1
  1883 ;; Hardware stack levels required when called: 2
  1884 ;; This function calls:
  1885 ;;		Nothing
  1886 ;; This function is called by:
  1887 ;;		_TransmitirDatos
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text9
  1892   00136E                     __ptext9:
  1893                           	callstack 0
  1894   00136E                     _Transmitir:
  1895                           	callstack 27
  1896                           
  1897                           ;incstack = 0
  1898                           ;Transmitir@BufferT stored from wreg
  1899   00136E  6E03               	movwf	Transmitir@BufferT^0,c
  1900   001370                     
  1901                           ;Lab5.c: 160: while (TRMT == 0);
  1902   001370  A2AC               	btfss	4012,1,c	;volatile
  1903   001372  D7FE               	goto	l1161
  1904                           
  1905                           ;Lab5.c: 161: TXREG = BufferT;
  1906   001374  C003  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1907   001378  0012               	return		;funcret
  1908   00137A                     __end_of_Transmitir:
  1909                           	callstack 0
  1910                           
  1911 ;; *************** function _DireccionaLCD *****************
  1912 ;; Defined at:
  1913 ;;		line 229 in file "LibLCDXC8.h"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  a               1    wreg     unsigned char 
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;  a               1    6[COMRAM] unsigned char 
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, status,2, status,0, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1927 ;;      Params:         0       0       0       0       0       0       0       0       0
  1928 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1930 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1931 ;;Total ram usage:        1 bytes
  1932 ;; Hardware stack levels used: 1
  1933 ;; Hardware stack levels required when called: 4
  1934 ;; This function calls:
  1935 ;;		_EnviaDato
  1936 ;;		_HabilitaLCD
  1937 ;;		_RetardoLCD
  1938 ;; This function is called by:
  1939 ;;		_main
  1940 ;;		_TransmitirDatos
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text10
  1945   0012FE                     __ptext10:
  1946                           	callstack 0
  1947   0012FE                     _DireccionaLCD:
  1948                           	callstack 25
  1949                           
  1950                           ;incstack = 0
  1951                           ;DireccionaLCD@a stored from wreg
  1952   0012FE  6E07               	movwf	DireccionaLCD@a^0,c
  1953                           
  1954                           ;LibLCDXC8.h: 232: LATE0=0;
  1955   001300  908D               	bcf	3981,0,c	;volatile
  1956                           
  1957                           ;LibLCDXC8.h: 233: EnviaDato(a);
  1958   001302  5007               	movf	DireccionaLCD@a^0,w,c
  1959   001304  EC67  F008         	call	_EnviaDato
  1960                           
  1961                           ;LibLCDXC8.h: 234: HabilitaLCD();
  1962   001308  ECB0  F009         	call	_HabilitaLCD	;wreg free
  1963                           
  1964                           ;LibLCDXC8.h: 235: RetardoLCD(4);
  1965   00130C  0E04               	movlw	4
  1966   00130E  ECE2  F007         	call	_RetardoLCD
  1967   001312  0012               	return		;funcret
  1968   001314                     __end_of_DireccionaLCD:
  1969                           	callstack 0
  1970                           
  1971 ;; *************** function _MensajeLCD_Var *****************
  1972 ;; Defined at:
  1973 ;;		line 217 in file "LibLCDXC8.h"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  a               1    7[COMRAM] PTR unsigned char 
  1976 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  i               2    9[COMRAM] int 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1988 ;;      Params:         1       0       0       0       0       0       0       0       0
  1989 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1990 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1991 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1992 ;;Total ram usage:        4 bytes
  1993 ;; Hardware stack levels used: 1
  1994 ;; Hardware stack levels required when called: 5
  1995 ;; This function calls:
  1996 ;;		_EscribeLCD_c
  1997 ;;		_strlen
  1998 ;; This function is called by:
  1999 ;;		_main
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text11
  2004   00107C                     __ptext11:
  2005                           	callstack 0
  2006   00107C                     _MensajeLCD_Var:
  2007                           	callstack 25
  2008                           
  2009                           ;LibLCDXC8.h: 221: for(int i = 0; i<strlen(a); i++){
  2010                           
  2011                           ;incstack = 0
  2012   00107C  0E00               	movlw	0
  2013   00107E  6E0B               	movwf	(MensajeLCD_Var@i+1)^0,c
  2014   001080  0E00               	movlw	0
  2015   001082  6E0A               	movwf	MensajeLCD_Var@i^0,c
  2016   001084  D019               	goto	l1815
  2017   001086                     l1807:
  2018                           
  2019                           ;LibLCDXC8.h: 222: if(a[i] == (0)){
  2020   001086  5008               	movf	MensajeLCD_Var@a^0,w,c
  2021   001088  240A               	addwf	MensajeLCD_Var@i^0,w,c
  2022   00108A  6E09               	movwf	??_MensajeLCD_Var^0,c
  2023   00108C  C009  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  2024   001090                     	if	1	;There is more than 1 active tblptr byte
  2025   001090  0E08               	movlw	high __smallconst
  2026   001092  6EF7               	movwf	tblptrh,c
  2027   001094                     	endif
  2028   001094                     	if	0	;tblptru may be non-zero
  2029   001094                     	endif
  2030   001094                     	if	0	;tblptru may be non-zero
  2031   001094                     	endif
  2032   001094  0008               	tblrd		*
  2033   001096  50F5               	movf	tablat,w,c
  2034   001098  0900               	iorlw	0
  2035   00109A  B4D8               	btfsc	status,2,c
  2036   00109C  0012               	return	
  2037                           
  2038                           ;LibLCDXC8.h: 224: };LibLCDXC8.h: 225: EscribeLCD_c(a[i]);
  2039   00109E  5008               	movf	MensajeLCD_Var@a^0,w,c
  2040   0010A0  240A               	addwf	MensajeLCD_Var@i^0,w,c
  2041   0010A2  6E09               	movwf	??_MensajeLCD_Var^0,c
  2042   0010A4  C009  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  2043   0010A8                     	if	1	;There is more than 1 active tblptr byte
  2044   0010A8  0E08               	movlw	high __smallconst
  2045   0010AA  6EF7               	movwf	tblptrh,c
  2046   0010AC                     	endif
  2047   0010AC                     	if	0	;tblptru may be non-zero
  2048   0010AC                     	endif
  2049   0010AC                     	if	0	;tblptru may be non-zero
  2050   0010AC                     	endif
  2051   0010AC  0008               	tblrd		*
  2052   0010AE  50F5               	movf	tablat,w,c
  2053   0010B0  EC8A  F009         	call	_EscribeLCD_c
  2054   0010B4  4A0A               	infsnz	MensajeLCD_Var@i^0,f,c
  2055   0010B6  2A0B               	incf	(MensajeLCD_Var@i+1)^0,f,c
  2056   0010B8                     l1815:
  2057   0010B8  C008  F003         	movff	MensajeLCD_Var@a,strlen@s
  2058   0010BC  EC28  F009         	call	_strlen	;wreg free
  2059   0010C0  5003               	movf	?_strlen^0,w,c
  2060   0010C2  5C0A               	subwf	MensajeLCD_Var@i^0,w,c
  2061   0010C4  5004               	movf	(?_strlen+1)^0,w,c
  2062   0010C6  580B               	subwfb	(MensajeLCD_Var@i+1)^0,w,c
  2063   0010C8  B0D8               	btfsc	status,0,c
  2064   0010CA  0012               	return	
  2065   0010CC  D7DC               	goto	l1807
  2066   0010CE                     __end_of_MensajeLCD_Var:
  2067                           	callstack 0
  2068                           
  2069 ;; *************** function _strlen *****************
  2070 ;; Defined at:
  2071 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;  s               1    2[COMRAM] PTR const unsigned char 
  2074 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  cp              1    4[COMRAM] PTR const unsigned char 
  2077 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  2    2[COMRAM] unsigned int 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2087 ;;      Params:         2       0       0       0       0       0       0       0       0
  2088 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2090 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2091 ;;Total ram usage:        3 bytes
  2092 ;; Hardware stack levels used: 1
  2093 ;; Hardware stack levels required when called: 2
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_MensajeLCD_Var
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text12
  2102   001250                     __ptext12:
  2103                           	callstack 0
  2104   001250                     _strlen:
  2105                           	callstack 27
  2106                           
  2107                           ;incstack = 0
  2108   001250  C003  F005         	movff	strlen@s,strlen@cp
  2109   001254  D001               	goto	l1669
  2110   001256                     l1667:
  2111   001256  2A05               	incf	strlen@cp^0,f,c
  2112   001258                     l1669:
  2113   001258  C005  FFF6         	movff	strlen@cp,tblptrl
  2114   00125C                     	if	1	;There is more than 1 active tblptr byte
  2115   00125C  0E08               	movlw	high __smallconst
  2116   00125E  6EF7               	movwf	tblptrh,c
  2117   001260                     	endif
  2118   001260                     	if	0	;tblptru may be non-zero
  2119   001260                     	endif
  2120   001260                     	if	0	;tblptru may be non-zero
  2121   001260                     	endif
  2122   001260  0008               	tblrd		*
  2123   001262  50F5               	movf	tablat,w,c
  2124   001264  0900               	iorlw	0
  2125   001266  A4D8               	btfss	status,2,c
  2126   001268  D7F6               	goto	l1667
  2127   00126A  5003               	movf	strlen@s^0,w,c
  2128   00126C  5C05               	subwf	strlen@cp^0,w,c
  2129   00126E  6E03               	movwf	?_strlen^0,c
  2130   001270  6A04               	clrf	(?_strlen+1)^0,c
  2131   001272  BE03               	btfsc	?_strlen^0,7,c
  2132   001274  0604               	decf	(?_strlen+1)^0,f,c
  2133   001276  0012               	return		;funcret
  2134   001278                     __end_of_strlen:
  2135                           	callstack 0
  2136                           
  2137 ;; *************** function _EscribeLCD_c *****************
  2138 ;; Defined at:
  2139 ;;		line 119 in file "LibLCDXC8.h"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  a               1    wreg     unsigned char 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  a               1    6[COMRAM] unsigned char 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2153 ;;      Params:         0       0       0       0       0       0       0       0       0
  2154 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2156 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2157 ;;Total ram usage:        1 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 4
  2160 ;; This function calls:
  2161 ;;		_EnviaDato
  2162 ;;		_HabilitaLCD
  2163 ;;		_RetardoLCD
  2164 ;; This function is called by:
  2165 ;;		_MensajeLCD_Var
  2166 ;;		_main
  2167 ;;		_TransmitirDatos
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           	psect	text13
  2172   001314                     __ptext13:
  2173                           	callstack 0
  2174   001314                     _EscribeLCD_c:
  2175                           	callstack 25
  2176                           
  2177                           ;incstack = 0
  2178                           ;EscribeLCD_c@a stored from wreg
  2179   001314  6E07               	movwf	EscribeLCD_c@a^0,c
  2180                           
  2181                           ;LibLCDXC8.h: 123: LATE0=1;
  2182   001316  808D               	bsf	3981,0,c	;volatile
  2183                           
  2184                           ;LibLCDXC8.h: 124: EnviaDato(a);
  2185   001318  5007               	movf	EscribeLCD_c@a^0,w,c
  2186   00131A  EC67  F008         	call	_EnviaDato
  2187                           
  2188                           ;LibLCDXC8.h: 125: HabilitaLCD();
  2189   00131E  ECB0  F009         	call	_HabilitaLCD	;wreg free
  2190                           
  2191                           ;LibLCDXC8.h: 126: RetardoLCD(4);
  2192   001322  0E04               	movlw	4
  2193   001324  ECE2  F007         	call	_RetardoLCD
  2194   001328  0012               	return		;funcret
  2195   00132A                     __end_of_EscribeLCD_c:
  2196                           	callstack 0
  2197                           
  2198 ;; *************** function _LeerHT11 *****************
  2199 ;; Defined at:
  2200 ;;		line 121 in file "Lab5.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2214 ;;      Params:         0       0       0       0       0       0       0       0       0
  2215 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2216 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2217 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2218 ;;Total ram usage:        1 bytes
  2219 ;; Hardware stack levels used: 1
  2220 ;; Hardware stack levels required when called: 4
  2221 ;; This function calls:
  2222 ;;		_LeerByte
  2223 ;; This function is called by:
  2224 ;;		_main
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           	psect	text14
  2229   001190                     __ptext14:
  2230                           	callstack 0
  2231   001190                     _LeerHT11:
  2232                           	callstack 26
  2233                           
  2234                           ;Lab5.c: 123: TRISC2 = 0;
  2235                           
  2236                           ;incstack = 0
  2237   001190  9494               	bcf	3988,2,c	;volatile
  2238                           
  2239                           ;Lab5.c: 124: _delay((unsigned long)((18)*(8000000/4000.0)));
  2240   001192  0E2F               	movlw	47
  2241   001194  6E07               	movwf	??_LeerHT11^0,c
  2242   001196  0EC0               	movlw	192
  2243   001198                     u1267:
  2244   001198  2EE8               	decfsz	wreg,f,c
  2245   00119A  D7FE               	bra	u1267
  2246   00119C  2E07               	decfsz	??_LeerHT11^0,f,c
  2247   00119E  D7FC               	bra	u1267
  2248                           
  2249                           ;Lab5.c: 125: TRISC2 = 1;
  2250   0011A0  8494               	bsf	3988,2,c	;volatile
  2251   0011A2                     l213:
  2252   0011A2  B482               	btfsc	3970,2,c	;volatile
  2253   0011A4  D7FE               	goto	l213
  2254                           
  2255                           ;Lab5.c: 128: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2256   0011A6  0E50               	movlw	80
  2257   0011A8                     u1277:
  2258   0011A8  2EE8               	decfsz	wreg,f,c
  2259   0011AA  D7FE               	bra	u1277
  2260   0011AC                     l216:
  2261   0011AC  B482               	btfsc	3970,2,c	;volatile
  2262   0011AE  D7FE               	goto	l216
  2263                           
  2264                           ;Lab5.c: 131: Hum = LeerByte();
  2265   0011B0  EC62  F009         	call	_LeerByte	;wreg free
  2266   0011B4  6E1E               	movwf	_Hum^0,c
  2267                           
  2268                           ;Lab5.c: 132: LeerByte();
  2269   0011B6  EC62  F009         	call	_LeerByte	;wreg free
  2270                           
  2271                           ;Lab5.c: 133: Temp = LeerByte();
  2272   0011BA  EC62  F009         	call	_LeerByte	;wreg free
  2273   0011BE  6E1F               	movwf	_Temp^0,c
  2274                           
  2275                           ;Lab5.c: 134: LeerByte();
  2276   0011C0  EC62  F009         	call	_LeerByte	;wreg free
  2277                           
  2278                           ;Lab5.c: 135: LeerByte();
  2279   0011C4  EC62  F009         	call	_LeerByte	;wreg free
  2280   0011C8  0012               	return		;funcret
  2281   0011CA                     __end_of_LeerHT11:
  2282                           	callstack 0
  2283                           
  2284 ;; *************** function _LeerByte *****************
  2285 ;; Defined at:
  2286 ;;		line 138 in file "Lab5.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;		None
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  i               1    5[COMRAM] unsigned char 
  2291 ;;  res             1    4[COMRAM] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      unsigned char 
  2294 ;; Registers used:
  2295 ;;		wreg, status,2, status,0, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2301 ;;      Params:         0       0       0       0       0       0       0       0       0
  2302 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2303 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2304 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2305 ;;Total ram usage:        3 bytes
  2306 ;; Hardware stack levels used: 1
  2307 ;; Hardware stack levels required when called: 3
  2308 ;; This function calls:
  2309 ;;		_LeerBit
  2310 ;; This function is called by:
  2311 ;;		_LeerHT11
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text15
  2316   0012C4                     __ptext15:
  2317                           	callstack 0
  2318   0012C4                     _LeerByte:
  2319                           	callstack 26
  2320                           
  2321                           ;Lab5.c: 139: unsigned char res = 0, i;
  2322                           
  2323                           ;incstack = 0
  2324   0012C4  0E00               	movlw	0
  2325   0012C6  6E05               	movwf	LeerByte@res^0,c
  2326                           
  2327                           ;Lab5.c: 140: for (i = 8; i > 0; i--) {
  2328   0012C8  0E08               	movlw	8
  2329   0012CA  6E06               	movwf	LeerByte@i^0,c
  2330   0012CC                     l1151:
  2331                           
  2332                           ;Lab5.c: 141: res = (res << 1) | LeerBit();
  2333   0012CC  ECE5  F008         	call	_LeerBit	;wreg free
  2334   0012D0  6E04               	movwf	??_LeerByte^0,c
  2335   0012D2  5005               	movf	LeerByte@res^0,w,c
  2336   0012D4  2405               	addwf	LeerByte@res^0,w,c
  2337   0012D6  1004               	iorwf	??_LeerByte^0,w,c
  2338   0012D8  6E05               	movwf	LeerByte@res^0,c
  2339   0012DA  0606               	decf	LeerByte@i^0,f,c
  2340   0012DC  5006               	movf	LeerByte@i^0,w,c
  2341   0012DE  A4D8               	btfss	status,2,c
  2342   0012E0  D7F5               	goto	l1151
  2343                           
  2344                           ;Lab5.c: 142: };Lab5.c: 143: return res;
  2345   0012E2  5005               	movf	LeerByte@res^0,w,c
  2346   0012E4  0012               	return		;funcret
  2347   0012E6                     __end_of_LeerByte:
  2348                           	callstack 0
  2349                           
  2350 ;; *************** function _LeerBit *****************
  2351 ;; Defined at:
  2352 ;;		line 146 in file "Lab5.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;		None
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  res             1    2[COMRAM] unsigned char 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      unsigned char 
  2359 ;; Registers used:
  2360 ;;		wreg, status,2
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2366 ;;      Params:         0       0       0       0       0       0       0       0       0
  2367 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2369 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2370 ;;Total ram usage:        1 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; Hardware stack levels required when called: 2
  2373 ;; This function calls:
  2374 ;;		Nothing
  2375 ;; This function is called by:
  2376 ;;		_LeerByte
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           	psect	text16
  2381   0011CA                     __ptext16:
  2382                           	callstack 0
  2383   0011CA                     _LeerBit:
  2384                           	callstack 26
  2385                           
  2386                           ;Lab5.c: 147: unsigned char res = 0;
  2387                           
  2388                           ;incstack = 0
  2389   0011CA  0E00               	movlw	0
  2390   0011CC  6E03               	movwf	LeerBit@res^0,c
  2391   0011CE                     l227:
  2392   0011CE  A482               	btfss	3970,2,c	;volatile
  2393   0011D0  D7FE               	goto	l227
  2394                           
  2395                           ;Lab5.c: 149: _delay((unsigned long)((13)*(8000000/4000000.0)));
  2396   0011D2  0E08               	movlw	8
  2397   0011D4                     u1287:
  2398   0011D4  2EE8               	decfsz	wreg,f,c
  2399   0011D6  D7FE               	bra	u1287
  2400   0011D8  D000               	nop2	
  2401                           
  2402                           ;Lab5.c: 150: if (RC2 == 1) res = 0;
  2403   0011DA  A482               	btfss	3970,2,c	;volatile
  2404   0011DC  D002               	goto	l1103
  2405   0011DE  0E00               	movlw	0
  2406   0011E0  6E03               	movwf	LeerBit@res^0,c
  2407   0011E2                     l1103:
  2408                           
  2409                           ;Lab5.c: 151: _delay((unsigned long)((22)*(8000000/4000000.0)));
  2410   0011E2  0E0E               	movlw	14
  2411   0011E4                     u1297:
  2412   0011E4  2EE8               	decfsz	wreg,f,c
  2413   0011E6  D7FE               	bra	u1297
  2414   0011E8  D000               	nop2	
  2415                           
  2416                           ;Lab5.c: 152: if (RC2 == 1) {
  2417   0011EA  A482               	btfss	3970,2,c	;volatile
  2418   0011EC  D004               	goto	u60
  2419                           
  2420                           ;Lab5.c: 153: res = 1;
  2421   0011EE  0E01               	movlw	1
  2422   0011F0  6E03               	movwf	LeerBit@res^0,c
  2423   0011F2                     l232:
  2424   0011F2  B482               	btfsc	3970,2,c	;volatile
  2425   0011F4  D7FE               	goto	l232
  2426   0011F6                     u60:
  2427                           
  2428                           ;Lab5.c: 155: };Lab5.c: 156: return res;
  2429   0011F6  5003               	movf	LeerBit@res^0,w,c
  2430   0011F8  0012               	return		;funcret
  2431   0011FA                     __end_of_LeerBit:
  2432                           	callstack 0
  2433                           
  2434 ;; *************** function _InicializaLCD *****************
  2435 ;; Defined at:
  2436 ;;		line 64 in file "LibLCDXC8.h"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;		None
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2450 ;;      Params:         0       0       0       0       0       0       0       0       0
  2451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2453 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2454 ;;Total ram usage:        0 bytes
  2455 ;; Hardware stack levels used: 1
  2456 ;; Hardware stack levels required when called: 5
  2457 ;; This function calls:
  2458 ;;		_BorraLCD
  2459 ;;		_EnviaDato
  2460 ;;		_HabilitaLCD
  2461 ;;		_RetardoLCD
  2462 ;; This function is called by:
  2463 ;;		_main
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text17
  2468   000E1A                     __ptext17:
  2469                           	callstack 0
  2470   000E1A                     _InicializaLCD:
  2471                           	callstack 25
  2472                           
  2473                           ;LibLCDXC8.h: 66: LATE0=0;
  2474                           
  2475                           ;incstack = 0
  2476   000E1A  908D               	bcf	3981,0,c	;volatile
  2477                           
  2478                           ;LibLCDXC8.h: 67: if(interfaz==4)
  2479   000E1C  0E04               	movlw	4
  2480   000E1E  1820               	xorwf	_interfaz^0,w,c
  2481   000E20  A4D8               	btfss	status,2,c
  2482   000E22  D004               	goto	l1305
  2483                           
  2484                           ;LibLCDXC8.h: 68: LATD=(LATD & 0b00001111) | 0x30;
  2485   000E24  508C               	movf	140,w,c	;volatile
  2486   000E26  0B0F               	andlw	15
  2487   000E28  0930               	iorlw	48
  2488   000E2A  D001               	goto	L4
  2489   000E2C                     l1305:
  2490                           
  2491                           ;LibLCDXC8.h: 69: else;LibLCDXC8.h: 70: LATD=0x3F;
  2492   000E2C  0E3F               	movlw	63
  2493   000E2E                     L4:
  2494   000E2E  6E8C               	movwf	140,c	;volatile
  2495                           
  2496                           ;LibLCDXC8.h: 71: HabilitaLCD();
  2497   000E30  ECB0  F009         	call	_HabilitaLCD	;wreg free
  2498                           
  2499                           ;LibLCDXC8.h: 72: RetardoLCD(1);
  2500   000E34  0E01               	movlw	1
  2501   000E36  ECE2  F007         	call	_RetardoLCD
  2502                           
  2503                           ;LibLCDXC8.h: 73: if(interfaz==4)
  2504   000E3A  0E04               	movlw	4
  2505   000E3C  1820               	xorwf	_interfaz^0,w,c
  2506   000E3E  A4D8               	btfss	status,2,c
  2507   000E40  D004               	goto	l1315
  2508                           
  2509                           ;LibLCDXC8.h: 74: LATD=(LATD & 0b00001111) | 0x30;
  2510   000E42  508C               	movf	140,w,c	;volatile
  2511   000E44  0B0F               	andlw	15
  2512   000E46  0930               	iorlw	48
  2513   000E48  D001               	goto	L5
  2514   000E4A                     l1315:
  2515                           
  2516                           ;LibLCDXC8.h: 75: else;LibLCDXC8.h: 76: LATD=0x3F;
  2517   000E4A  0E3F               	movlw	63
  2518   000E4C                     L5:
  2519   000E4C  6E8C               	movwf	140,c	;volatile
  2520                           
  2521                           ;LibLCDXC8.h: 77: HabilitaLCD();
  2522   000E4E  ECB0  F009         	call	_HabilitaLCD	;wreg free
  2523                           
  2524                           ;LibLCDXC8.h: 78: RetardoLCD(3);
  2525   000E52  0E03               	movlw	3
  2526   000E54  ECE2  F007         	call	_RetardoLCD
  2527                           
  2528                           ;LibLCDXC8.h: 79: if(interfaz==4)
  2529   000E58  0E04               	movlw	4
  2530   000E5A  1820               	xorwf	_interfaz^0,w,c
  2531   000E5C  A4D8               	btfss	status,2,c
  2532   000E5E  D004               	goto	l1325
  2533                           
  2534                           ;LibLCDXC8.h: 80: LATD=(LATD & 0b00001111) | 0x30;
  2535   000E60  508C               	movf	140,w,c	;volatile
  2536   000E62  0B0F               	andlw	15
  2537   000E64  0930               	iorlw	48
  2538   000E66  D001               	goto	L6
  2539   000E68                     l1325:
  2540                           
  2541                           ;LibLCDXC8.h: 81: else;LibLCDXC8.h: 82: LATD=0x3F;
  2542   000E68  0E3F               	movlw	63
  2543   000E6A                     L6:
  2544   000E6A  6E8C               	movwf	140,c	;volatile
  2545                           
  2546                           ;LibLCDXC8.h: 83: HabilitaLCD();
  2547   000E6C  ECB0  F009         	call	_HabilitaLCD	;wreg free
  2548                           
  2549                           ;LibLCDXC8.h: 84: RetardoLCD(4);
  2550   000E70  0E04               	movlw	4
  2551   000E72  ECE2  F007         	call	_RetardoLCD
  2552                           
  2553                           ;LibLCDXC8.h: 85: if(interfaz==4){
  2554   000E76  0E04               	movlw	4
  2555   000E78  1820               	xorwf	_interfaz^0,w,c
  2556   000E7A  A4D8               	btfss	status,2,c
  2557   000E7C  D011               	goto	l1345
  2558                           
  2559                           ;LibLCDXC8.h: 86: LATD=(LATD & 0b00001111) | 0x20;
  2560   000E7E  508C               	movf	140,w,c	;volatile
  2561   000E80  0B0F               	andlw	15
  2562   000E82  0920               	iorlw	32
  2563   000E84  6E8C               	movwf	140,c	;volatile
  2564                           
  2565                           ;LibLCDXC8.h: 87: HabilitaLCD();
  2566   000E86  ECB0  F009         	call	_HabilitaLCD	;wreg free
  2567                           
  2568                           ;LibLCDXC8.h: 88: RetardoLCD(4);
  2569   000E8A  0E04               	movlw	4
  2570   000E8C  ECE2  F007         	call	_RetardoLCD
  2571                           
  2572                           ;LibLCDXC8.h: 89: EnviaDato(0x2F);
  2573   000E90  0E2F               	movlw	47
  2574   000E92  EC67  F008         	call	_EnviaDato
  2575                           
  2576                           ;LibLCDXC8.h: 90: HabilitaLCD();
  2577   000E96  ECB0  F009         	call	_HabilitaLCD	;wreg free
  2578                           
  2579                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  2580   000E9A  0E04               	movlw	4
  2581   000E9C  ECE2  F007         	call	_RetardoLCD
  2582   000EA0                     l1345:
  2583                           
  2584                           ;LibLCDXC8.h: 92: };LibLCDXC8.h: 93: BorraLCD();
  2585   000EA0  EC95  F009         	call	_BorraLCD	;wreg free
  2586                           
  2587                           ;LibLCDXC8.h: 94: EnviaDato(0xF);
  2588   000EA4  0E0F               	movlw	15
  2589   000EA6  EC67  F008         	call	_EnviaDato
  2590                           
  2591                           ;LibLCDXC8.h: 95: HabilitaLCD();
  2592   000EAA  ECB0  F009         	call	_HabilitaLCD	;wreg free
  2593                           
  2594                           ;LibLCDXC8.h: 96: RetardoLCD(4);
  2595   000EAE  0E04               	movlw	4
  2596   000EB0  ECE2  F007         	call	_RetardoLCD
  2597   000EB4  0012               	return		;funcret
  2598   000EB6                     __end_of_InicializaLCD:
  2599                           	callstack 0
  2600                           
  2601 ;; *************** function _BorraLCD *****************
  2602 ;; Defined at:
  2603 ;;		line 105 in file "LibLCDXC8.h"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;		None
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2617 ;;      Params:         0       0       0       0       0       0       0       0       0
  2618 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2619 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2620 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2621 ;;Total ram usage:        0 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 4
  2624 ;; This function calls:
  2625 ;;		_EnviaDato
  2626 ;;		_HabilitaLCD
  2627 ;;		_RetardoLCD
  2628 ;; This function is called by:
  2629 ;;		_InicializaLCD
  2630 ;;		_main
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text18
  2635   00132A                     __ptext18:
  2636                           	callstack 0
  2637   00132A                     _BorraLCD:
  2638                           	callstack 25
  2639                           
  2640                           ;LibLCDXC8.h: 107: LATE0=0;
  2641                           
  2642                           ;incstack = 0
  2643   00132A  908D               	bcf	3981,0,c	;volatile
  2644                           
  2645                           ;LibLCDXC8.h: 108: EnviaDato(0x01);
  2646   00132C  0E01               	movlw	1
  2647   00132E  EC67  F008         	call	_EnviaDato
  2648                           
  2649                           ;LibLCDXC8.h: 109: HabilitaLCD();
  2650   001332  ECB0  F009         	call	_HabilitaLCD	;wreg free
  2651                           
  2652                           ;LibLCDXC8.h: 110: RetardoLCD(2);
  2653   001336  0E02               	movlw	2
  2654   001338  ECE2  F007         	call	_RetardoLCD
  2655   00133C  0012               	return		;funcret
  2656   00133E                     __end_of_BorraLCD:
  2657                           	callstack 0
  2658                           
  2659 ;; *************** function _EnviaDato *****************
  2660 ;; Defined at:
  2661 ;;		line 54 in file "LibLCDXC8.h"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  a               1    wreg     unsigned char 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  a               1    5[COMRAM] unsigned char 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      void 
  2668 ;; Registers used:
  2669 ;;		wreg, status,2, status,0, cstack
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2675 ;;      Params:         0       0       0       0       0       0       0       0       0
  2676 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2677 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2678 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2679 ;;Total ram usage:        2 bytes
  2680 ;; Hardware stack levels used: 1
  2681 ;; Hardware stack levels required when called: 3
  2682 ;; This function calls:
  2683 ;;		_HabilitaLCD
  2684 ;;		_RetardoLCD
  2685 ;; This function is called by:
  2686 ;;		_InicializaLCD
  2687 ;;		_BorraLCD
  2688 ;;		_EscribeLCD_c
  2689 ;;		_DireccionaLCD
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text19
  2694   0010CE                     __ptext19:
  2695                           	callstack 0
  2696   0010CE                     _EnviaDato:
  2697                           	callstack 25
  2698                           
  2699                           ;incstack = 0
  2700                           ;EnviaDato@a stored from wreg
  2701   0010CE  6E06               	movwf	EnviaDato@a^0,c
  2702                           
  2703                           ;LibLCDXC8.h: 55: if(interfaz==4){
  2704   0010D0  0E04               	movlw	4
  2705   0010D2  1820               	xorwf	_interfaz^0,w,c
  2706   0010D4  A4D8               	btfss	status,2,c
  2707   0010D6  D017               	goto	l1091
  2708                           
  2709                           ;LibLCDXC8.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2710   0010D8  C006  F005         	movff	EnviaDato@a,??_EnviaDato
  2711   0010DC  0EF0               	movlw	240
  2712   0010DE  1605               	andwf	??_EnviaDato^0,f,c
  2713   0010E0  508C               	movf	140,w,c	;volatile
  2714   0010E2  0B0F               	andlw	15
  2715   0010E4  1005               	iorwf	??_EnviaDato^0,w,c
  2716   0010E6  6E8C               	movwf	140,c	;volatile
  2717                           
  2718                           ;LibLCDXC8.h: 57: HabilitaLCD();
  2719   0010E8  ECB0  F009         	call	_HabilitaLCD	;wreg free
  2720                           
  2721                           ;LibLCDXC8.h: 58: RetardoLCD(1);
  2722   0010EC  0E01               	movlw	1
  2723   0010EE  ECE2  F007         	call	_RetardoLCD
  2724                           
  2725                           ;LibLCDXC8.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  2726   0010F2  C006  F005         	movff	EnviaDato@a,??_EnviaDato
  2727   0010F6  3A05               	swapf	??_EnviaDato^0,f,c
  2728   0010F8  0EF0               	movlw	240
  2729   0010FA  1605               	andwf	??_EnviaDato^0,f,c
  2730   0010FC  508C               	movf	140,w,c	;volatile
  2731   0010FE  0B0F               	andlw	15
  2732   001100  1005               	iorwf	??_EnviaDato^0,w,c
  2733   001102  6E8C               	movwf	140,c	;volatile
  2734                           
  2735                           ;LibLCDXC8.h: 60: }else if(interfaz==8){
  2736   001104  0012               	return	
  2737   001106                     l1091:
  2738   001106  0E08               	movlw	8
  2739   001108  1820               	xorwf	_interfaz^0,w,c
  2740   00110A  A4D8               	btfss	status,2,c
  2741   00110C  0012               	return	
  2742                           
  2743                           ;LibLCDXC8.h: 61: LATD=a;
  2744   00110E  C006  FF8C         	movff	EnviaDato@a,3980	;volatile
  2745   001112  0012               	return		;funcret
  2746   001114                     __end_of_EnviaDato:
  2747                           	callstack 0
  2748                           
  2749 ;; *************** function _RetardoLCD *****************
  2750 ;; Defined at:
  2751 ;;		line 265 in file "LibLCDXC8.h"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  a               1    wreg     unsigned char 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  a               1    3[COMRAM] unsigned char 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, status,2, status,0
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2765 ;;      Params:         0       0       0       0       0       0       0       0       0
  2766 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2767 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2768 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2769 ;;Total ram usage:        2 bytes
  2770 ;; Hardware stack levels used: 1
  2771 ;; Hardware stack levels required when called: 2
  2772 ;; This function calls:
  2773 ;;		Nothing
  2774 ;; This function is called by:
  2775 ;;		_EnviaDato
  2776 ;;		_InicializaLCD
  2777 ;;		_BorraLCD
  2778 ;;		_EscribeLCD_c
  2779 ;;		_DireccionaLCD
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text20
  2784   000FC4                     __ptext20:
  2785                           	callstack 0
  2786   000FC4                     _RetardoLCD:
  2787                           	callstack 26
  2788                           
  2789                           ;incstack = 0
  2790                           ;RetardoLCD@a stored from wreg
  2791   000FC4  6E04               	movwf	RetardoLCD@a^0,c
  2792                           
  2793                           ;LibLCDXC8.h: 266: switch(a){
  2794   000FC6  D023               	goto	l1079
  2795   000FC8                     l1069:
  2796   000FC8  0E62               	movlw	98
  2797   000FCA  6E03               	movwf	??_RetardoLCD^0,c
  2798   000FCC  0E66               	movlw	102
  2799   000FCE                     u1307:
  2800   000FCE  2EE8               	decfsz	wreg,f,c
  2801   000FD0  D7FE               	bra	u1307
  2802   000FD2  2E03               	decfsz	??_RetardoLCD^0,f,c
  2803   000FD4  D7FC               	bra	u1307
  2804                           
  2805                           ;LibLCDXC8.h: 269: break;
  2806   000FD6  0012               	return	
  2807   000FD8                     l1071:
  2808   000FD8  0E07               	movlw	7
  2809   000FDA  6E03               	movwf	??_RetardoLCD^0,c
  2810   000FDC  0E7D               	movlw	125
  2811   000FDE                     u1317:
  2812   000FDE  2EE8               	decfsz	wreg,f,c
  2813   000FE0  D7FE               	bra	u1317
  2814   000FE2  2E03               	decfsz	??_RetardoLCD^0,f,c
  2815   000FE4  D7FC               	bra	u1317
  2816   000FE6  F000               	nop	
  2817                           
  2818                           ;LibLCDXC8.h: 271: _delay((unsigned long)((640)*(20000000/4000000.0)));
  2819   000FE8  0E05               	movlw	5
  2820   000FEA  6E03               	movwf	??_RetardoLCD^0,c
  2821   000FEC  0E26               	movlw	38
  2822   000FEE                     u1327:
  2823   000FEE  2EE8               	decfsz	wreg,f,c
  2824   000FF0  D7FE               	bra	u1327
  2825   000FF2  2E03               	decfsz	??_RetardoLCD^0,f,c
  2826   000FF4  D7FC               	bra	u1327
  2827   000FF6  D000               	nop2	
  2828                           
  2829                           ;LibLCDXC8.h: 273: break;
  2830   000FF8  0012               	return	
  2831   000FFA                     l1073:
  2832   000FFA  0EA6               	movlw	166
  2833   000FFC                     u1337:
  2834   000FFC  2EE8               	decfsz	wreg,f,c
  2835   000FFE  D7FE               	bra	u1337
  2836   001000  D000               	nop2	
  2837                           
  2838                           ;LibLCDXC8.h: 276: break;
  2839   001002  0012               	return	
  2840   001004                     l1075:
  2841   001004  0E42               	movlw	66
  2842   001006                     u1347:
  2843   001006  2EE8               	decfsz	wreg,f,c
  2844   001008  D7FE               	bra	u1347
  2845   00100A  D000               	nop2	
  2846                           
  2847                           ;LibLCDXC8.h: 279: break;
  2848   00100C  0012               	return	
  2849   00100E                     l1079:
  2850   00100E  5004               	movf	RetardoLCD@a^0,w,c
  2851                           
  2852                           ; Switch size 1, requested type "simple"
  2853                           ; Number of cases is 4, Range of values is 1 to 4
  2854                           ; switch strategies available:
  2855                           ; Name         Instructions Cycles
  2856                           ; simple_byte           13     7 (average)
  2857                           ;	Chosen strategy is simple_byte
  2858   001010  0A01               	xorlw	1	; case 1
  2859   001012  B4D8               	btfsc	status,2,c
  2860   001014  D7D9               	goto	l1069
  2861   001016  0A03               	xorlw	3	; case 2
  2862   001018  B4D8               	btfsc	status,2,c
  2863   00101A  D7DE               	goto	l1071
  2864   00101C  0A01               	xorlw	1	; case 3
  2865   00101E  B4D8               	btfsc	status,2,c
  2866   001020  D7EC               	goto	l1073
  2867   001022  0A07               	xorlw	7	; case 4
  2868   001024  A4D8               	btfss	status,2,c
  2869   001026  0012               	return	
  2870   001028  D7ED               	goto	l1075
  2871   00102A                     __end_of_RetardoLCD:
  2872                           	callstack 0
  2873                           
  2874 ;; *************** function _HabilitaLCD *****************
  2875 ;; Defined at:
  2876 ;;		line 98 in file "LibLCDXC8.h"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;		None
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;		None
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      void 
  2883 ;; Registers used:
  2884 ;;		wreg
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2890 ;;      Params:         0       0       0       0       0       0       0       0       0
  2891 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2892 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2893 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2894 ;;Total ram usage:        0 bytes
  2895 ;; Hardware stack levels used: 1
  2896 ;; Hardware stack levels required when called: 2
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		_EnviaDato
  2901 ;;		_InicializaLCD
  2902 ;;		_BorraLCD
  2903 ;;		_EscribeLCD_c
  2904 ;;		_DireccionaLCD
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text21
  2909   001360                     __ptext21:
  2910                           	callstack 0
  2911   001360                     _HabilitaLCD:
  2912                           	callstack 26
  2913                           
  2914                           ;LibLCDXC8.h: 100: LATE1=1;
  2915                           
  2916                           ;incstack = 0
  2917   001360  828D               	bsf	3981,1,c	;volatile
  2918                           
  2919                           ;LibLCDXC8.h: 101: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2920   001362  0E42               	movlw	66
  2921   001364                     u1357:
  2922   001364  2EE8               	decfsz	wreg,f,c
  2923   001366  D7FE               	bra	u1357
  2924   001368  D000               	nop2	
  2925                           
  2926                           ;LibLCDXC8.h: 103: LATE1=0;
  2927   00136A  928D               	bcf	3981,1,c	;volatile
  2928   00136C  0012               	return		;funcret
  2929   00136E                     __end_of_HabilitaLCD:
  2930                           	callstack 0
  2931                           
  2932 ;; *************** function _GuardarDatoEnEEPROM *****************
  2933 ;; Defined at:
  2934 ;;		line 276 in file "Lab5.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  dir             2    2[COMRAM] unsigned int 
  2937 ;;  dato            1    4[COMRAM] unsigned char 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;		None
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2949 ;;      Params:         3       0       0       0       0       0       0       0       0
  2950 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2951 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2952 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2953 ;;Total ram usage:        3 bytes
  2954 ;; Hardware stack levels used: 1
  2955 ;; Hardware stack levels required when called: 2
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_main
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text22
  2964   00129E                     __ptext22:
  2965                           	callstack 0
  2966   00129E                     _GuardarDatoEnEEPROM:
  2967                           	callstack 28
  2968                           
  2969                           ;Lab5.c: 277: EEADR = dir;
  2970                           
  2971                           ;incstack = 0
  2972   00129E  C003  FFA9         	movff	GuardarDatoEnEEPROM@dir,4009	;volatile
  2973                           
  2974                           ;Lab5.c: 278: EEDATA = dato;
  2975   0012A2  C005  FFA8         	movff	GuardarDatoEnEEPROM@dato,4008	;volatile
  2976                           
  2977                           ;Lab5.c: 280: EEPGD = 0;
  2978   0012A6  9EA6               	bcf	4006,7,c	;volsfr
  2979                           
  2980                           ;Lab5.c: 281: CFGS = 0;
  2981   0012A8  9CA6               	bcf	4006,6,c	;volsfr
  2982                           
  2983                           ;Lab5.c: 282: WREN = 1;
  2984   0012AA  84A6               	bsf	4006,2,c	;volsfr
  2985                           
  2986                           ;Lab5.c: 284: GIE = 0;
  2987   0012AC  9EF2               	bcf	4082,7,c	;volatile
  2988                           
  2989                           ;Lab5.c: 286: EECON2 = 0x55;
  2990   0012AE  0E55               	movlw	85
  2991   0012B0  6EA7               	movwf	167,c	;volsfr
  2992                           
  2993                           ;Lab5.c: 287: EECON2 = 0xAA;
  2994   0012B2  0EAA               	movlw	170
  2995   0012B4  6EA7               	movwf	167,c	;volsfr
  2996                           
  2997                           ;Lab5.c: 288: WR = 1;
  2998   0012B6  82A6               	bsf	4006,1,c	;volsfr
  2999                           
  3000                           ;Lab5.c: 289: GIE = 1;
  3001   0012B8  8EF2               	bsf	4082,7,c	;volatile
  3002   0012BA                     l287:
  3003   0012BA  A8A1               	btfss	4001,4,c	;volatile
  3004   0012BC  D7FE               	goto	l287
  3005                           
  3006                           ;Lab5.c: 291: EEIF = 0;
  3007   0012BE  98A1               	bcf	4001,4,c	;volatile
  3008                           
  3009                           ;Lab5.c: 292: WREN = 0;
  3010   0012C0  94A6               	bcf	4006,2,c	;volsfr
  3011   0012C2  0012               	return		;funcret
  3012   0012C4                     __end_of_GuardarDatoEnEEPROM:
  3013                           	callstack 0
  3014                           
  3015 ;; *************** function _Conversion *****************
  3016 ;; Defined at:
  3017 ;;		line 269 in file "Lab5.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;  canal           1    wreg     unsigned char 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  canal           1    2[COMRAM] unsigned char 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  2   80[None  ] unsigned int 
  3024 ;; Registers used:
  3025 ;;		wreg, status,2, status,0
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3031 ;;      Params:         0       0       0       0       0       0       0       0       0
  3032 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3033 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3034 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3035 ;;Total ram usage:        1 bytes
  3036 ;; Hardware stack levels used: 1
  3037 ;; Hardware stack levels required when called: 2
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		_main
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text23
  3046   00133E                     __ptext23:
  3047                           	callstack 0
  3048   00133E                     _Conversion:
  3049                           	callstack 28
  3050                           
  3051                           ;incstack = 0
  3052                           ;Conversion@canal stored from wreg
  3053   00133E  6E03               	movwf	Conversion@canal^0,c
  3054                           
  3055                           ;Lab5.c: 270: ADCON0 = 0b00000001 | (canal << 2);
  3056   001340  4403               	rlncf	Conversion@canal^0,w,c
  3057   001342  46E8               	rlncf	wreg,f,c
  3058   001344  0BFC               	andlw	252
  3059   001346  0901               	iorlw	1
  3060   001348  6EC2               	movwf	194,c	;volatile
  3061                           
  3062                           ;Lab5.c: 271: GO = 1;
  3063   00134A  82C2               	bsf	4034,1,c	;volatile
  3064   00134C                     l281:
  3065   00134C  A2C2               	btfss	4034,1,c	;volatile
  3066   00134E  0012               	return	
  3067   001350  D7FD               	goto	l281
  3068   001352                     __end_of_Conversion:
  3069                           	callstack 0
  3070                           
  3071 ;; *************** function _ConfiguraLCD *****************
  3072 ;; Defined at:
  3073 ;;		line 50 in file "LibLCDXC8.h"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  a               1    wreg     unsigned char 
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;  a               1    2[COMRAM] unsigned char 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      void 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2, status,0
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3087 ;;      Params:         0       0       0       0       0       0       0       0       0
  3088 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3090 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3091 ;;Total ram usage:        1 bytes
  3092 ;; Hardware stack levels used: 1
  3093 ;; Hardware stack levels required when called: 2
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_main
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           	psect	text24
  3102   0012E6                     __ptext24:
  3103                           	callstack 0
  3104   0012E6                     _ConfiguraLCD:
  3105                           	callstack 28
  3106                           
  3107                           ;incstack = 0
  3108                           ;ConfiguraLCD@a stored from wreg
  3109   0012E6  6E03               	movwf	ConfiguraLCD@a^0,c
  3110                           
  3111                           ;LibLCDXC8.h: 51: if(a==4 | a ==8)
  3112   0012E8  0E04               	movlw	4
  3113   0012EA  1803               	xorwf	ConfiguraLCD@a^0,w,c
  3114   0012EC  B4D8               	btfsc	status,2,c
  3115   0012EE  D004               	goto	u270
  3116   0012F0  0E08               	movlw	8
  3117   0012F2  1803               	xorwf	ConfiguraLCD@a^0,w,c
  3118   0012F4  A4D8               	btfss	status,2,c
  3119   0012F6  0012               	return	
  3120   0012F8                     u270:
  3121                           
  3122                           ;LibLCDXC8.h: 52: interfaz=a;
  3123   0012F8  C003  F020         	movff	ConfiguraLCD@a,_interfaz
  3124   0012FC  0012               	return		;funcret
  3125   0012FE                     __end_of_ConfiguraLCD:
  3126                           	callstack 0
  3127                           
  3128 ;; *************** function _ColorRGB *****************
  3129 ;; Defined at:
  3130 ;;		line 233 in file "Lab5.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  val             2    2[COMRAM] unsigned int 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      void 
  3137 ;; Registers used:
  3138 ;;		wreg, status,2, status,0
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3144 ;;      Params:         2       0       0       0       0       0       0       0       0
  3145 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3147 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3148 ;;Total ram usage:        2 bytes
  3149 ;; Hardware stack levels used: 1
  3150 ;; Hardware stack levels required when called: 2
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_main
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text25
  3159   000D32                     __ptext25:
  3160                           	callstack 0
  3161   000D32                     _ColorRGB:
  3162                           	callstack 28
  3163                           
  3164                           ;Lab5.c: 234: if (val < 22) {
  3165                           
  3166                           ;incstack = 0
  3167   000D32  5004               	movf	(ColorRGB@val+1)^0,w,c
  3168   000D34  E108               	bnz	l1835
  3169   000D36  0E16               	movlw	22
  3170   000D38  5C03               	subwf	ColorRGB@val^0,w,c
  3171   000D3A  B0D8               	btfsc	status,0,c
  3172   000D3C  D004               	goto	l1835
  3173                           
  3174                           ;Lab5.c: 235: RB5 = 0;
  3175   000D3E  9A81               	bcf	3969,5,c	;volatile
  3176                           
  3177                           ;Lab5.c: 236: RB6 = 0;
  3178   000D40  9C81               	bcf	3969,6,c	;volatile
  3179                           
  3180                           ;Lab5.c: 237: RB7 = 0;
  3181   000D42  9E81               	bcf	3969,7,c	;volatile
  3182                           
  3183                           ;Lab5.c: 238: } else if (val >= 22 && val < 25) {
  3184   000D44  0012               	return	
  3185   000D46                     l1835:
  3186   000D46  5004               	movf	(ColorRGB@val+1)^0,w,c
  3187   000D48  E104               	bnz	u890
  3188   000D4A  0E16               	movlw	22
  3189   000D4C  5C03               	subwf	ColorRGB@val^0,w,c
  3190   000D4E  A0D8               	btfss	status,0,c
  3191   000D50  D00A               	goto	l1841
  3192   000D52                     u890:
  3193   000D52  5004               	movf	(ColorRGB@val+1)^0,w,c
  3194   000D54  E108               	bnz	l1841
  3195   000D56  0E19               	movlw	25
  3196   000D58  5C03               	subwf	ColorRGB@val^0,w,c
  3197   000D5A  B0D8               	btfsc	status,0,c
  3198   000D5C  D004               	goto	l1841
  3199                           
  3200                           ;Lab5.c: 239: RB5 = 1;
  3201   000D5E  8A81               	bsf	3969,5,c	;volatile
  3202                           
  3203                           ;Lab5.c: 240: RB6 = 0;
  3204   000D60  9C81               	bcf	3969,6,c	;volatile
  3205                           
  3206                           ;Lab5.c: 241: RB7 = 1;
  3207   000D62  8E81               	bsf	3969,7,c	;volatile
  3208                           
  3209                           ;Lab5.c: 242: } else if (val >= 25 && val < 28) {
  3210   000D64  0012               	return	
  3211   000D66                     l1841:
  3212   000D66  5004               	movf	(ColorRGB@val+1)^0,w,c
  3213   000D68  E104               	bnz	u910
  3214   000D6A  0E19               	movlw	25
  3215   000D6C  5C03               	subwf	ColorRGB@val^0,w,c
  3216   000D6E  A0D8               	btfss	status,0,c
  3217   000D70  D00A               	goto	l1847
  3218   000D72                     u910:
  3219   000D72  5004               	movf	(ColorRGB@val+1)^0,w,c
  3220   000D74  E108               	bnz	l1847
  3221   000D76  0E1C               	movlw	28
  3222   000D78  5C03               	subwf	ColorRGB@val^0,w,c
  3223   000D7A  B0D8               	btfsc	status,0,c
  3224   000D7C  D004               	goto	l1847
  3225                           
  3226                           ;Lab5.c: 243: RB5 = 1;
  3227   000D7E  8A81               	bsf	3969,5,c	;volatile
  3228                           
  3229                           ;Lab5.c: 244: RB6 = 0;
  3230   000D80  9C81               	bcf	3969,6,c	;volatile
  3231                           
  3232                           ;Lab5.c: 245: RB7 = 0;
  3233   000D82  9E81               	bcf	3969,7,c	;volatile
  3234                           
  3235                           ;Lab5.c: 246: } else if (val >= 28 && val < 31) {
  3236   000D84  0012               	return	
  3237   000D86                     l1847:
  3238   000D86  5004               	movf	(ColorRGB@val+1)^0,w,c
  3239   000D88  E104               	bnz	u930
  3240   000D8A  0E1C               	movlw	28
  3241   000D8C  5C03               	subwf	ColorRGB@val^0,w,c
  3242   000D8E  A0D8               	btfss	status,0,c
  3243   000D90  D00A               	goto	l1853
  3244   000D92                     u930:
  3245   000D92  5004               	movf	(ColorRGB@val+1)^0,w,c
  3246   000D94  E108               	bnz	l1853
  3247   000D96  0E1F               	movlw	31
  3248   000D98  5C03               	subwf	ColorRGB@val^0,w,c
  3249   000D9A  B0D8               	btfsc	status,0,c
  3250   000D9C  D004               	goto	l1853
  3251                           
  3252                           ;Lab5.c: 247: RB5 = 1;
  3253   000D9E  8A81               	bsf	3969,5,c	;volatile
  3254                           
  3255                           ;Lab5.c: 248: RB6 = 1;
  3256   000DA0  8C81               	bsf	3969,6,c	;volatile
  3257                           
  3258                           ;Lab5.c: 249: RB7 = 0;
  3259   000DA2  9E81               	bcf	3969,7,c	;volatile
  3260                           
  3261                           ;Lab5.c: 250: } else if (val >= 31 && val < 34) {
  3262   000DA4  0012               	return	
  3263   000DA6                     l1853:
  3264   000DA6  5004               	movf	(ColorRGB@val+1)^0,w,c
  3265   000DA8  E104               	bnz	u950
  3266   000DAA  0E1F               	movlw	31
  3267   000DAC  5C03               	subwf	ColorRGB@val^0,w,c
  3268   000DAE  A0D8               	btfss	status,0,c
  3269   000DB0  D00A               	goto	l1859
  3270   000DB2                     u950:
  3271   000DB2  5004               	movf	(ColorRGB@val+1)^0,w,c
  3272   000DB4  E108               	bnz	l1859
  3273   000DB6  0E22               	movlw	34
  3274   000DB8  5C03               	subwf	ColorRGB@val^0,w,c
  3275   000DBA  B0D8               	btfsc	status,0,c
  3276   000DBC  D004               	goto	l1859
  3277                           
  3278                           ;Lab5.c: 251: RB5 = 0;
  3279   000DBE  9A81               	bcf	3969,5,c	;volatile
  3280                           
  3281                           ;Lab5.c: 252: RB6 = 1;
  3282   000DC0  8C81               	bsf	3969,6,c	;volatile
  3283                           
  3284                           ;Lab5.c: 253: RB7 = 0;
  3285   000DC2  9E81               	bcf	3969,7,c	;volatile
  3286                           
  3287                           ;Lab5.c: 254: } else if (val >= 34 && val < 37) {
  3288   000DC4  0012               	return	
  3289   000DC6                     l1859:
  3290   000DC6  5004               	movf	(ColorRGB@val+1)^0,w,c
  3291   000DC8  E104               	bnz	u970
  3292   000DCA  0E22               	movlw	34
  3293   000DCC  5C03               	subwf	ColorRGB@val^0,w,c
  3294   000DCE  A0D8               	btfss	status,0,c
  3295   000DD0  D00A               	goto	l1865
  3296   000DD2                     u970:
  3297   000DD2  5004               	movf	(ColorRGB@val+1)^0,w,c
  3298   000DD4  E108               	bnz	l1865
  3299   000DD6  0E25               	movlw	37
  3300   000DD8  5C03               	subwf	ColorRGB@val^0,w,c
  3301   000DDA  B0D8               	btfsc	status,0,c
  3302   000DDC  D004               	goto	l1865
  3303                           
  3304                           ;Lab5.c: 255: RB5 = 0;
  3305   000DDE  9A81               	bcf	3969,5,c	;volatile
  3306                           
  3307                           ;Lab5.c: 256: RB6 = 1;
  3308   000DE0  8C81               	bsf	3969,6,c	;volatile
  3309                           
  3310                           ;Lab5.c: 257: RB7 = 1;
  3311   000DE2  8E81               	bsf	3969,7,c	;volatile
  3312                           
  3313                           ;Lab5.c: 258: } else if (val >= 37 && val < 42) {
  3314   000DE4  0012               	return	
  3315   000DE6                     l1865:
  3316   000DE6  5004               	movf	(ColorRGB@val+1)^0,w,c
  3317   000DE8  E104               	bnz	u990
  3318   000DEA  0E25               	movlw	37
  3319   000DEC  5C03               	subwf	ColorRGB@val^0,w,c
  3320   000DEE  A0D8               	btfss	status,0,c
  3321   000DF0  D00A               	goto	l1871
  3322   000DF2                     u990:
  3323   000DF2  5004               	movf	(ColorRGB@val+1)^0,w,c
  3324   000DF4  E108               	bnz	l1871
  3325   000DF6  0E2A               	movlw	42
  3326   000DF8  5C03               	subwf	ColorRGB@val^0,w,c
  3327   000DFA  B0D8               	btfsc	status,0,c
  3328   000DFC  D004               	goto	l1871
  3329                           
  3330                           ;Lab5.c: 259: RB5 = 0;
  3331   000DFE  9A81               	bcf	3969,5,c	;volatile
  3332                           
  3333                           ;Lab5.c: 260: RB6 = 0;
  3334   000E00  9C81               	bcf	3969,6,c	;volatile
  3335                           
  3336                           ;Lab5.c: 261: RB7 = 1;
  3337   000E02  8E81               	bsf	3969,7,c	;volatile
  3338                           
  3339                           ;Lab5.c: 262: } else if (val >= 42) {
  3340   000E04  0012               	return	
  3341   000E06                     l1871:
  3342   000E06  5004               	movf	(ColorRGB@val+1)^0,w,c
  3343   000E08  E104               	bnz	u1010
  3344   000E0A  0E2A               	movlw	42
  3345   000E0C  5C03               	subwf	ColorRGB@val^0,w,c
  3346   000E0E  A0D8               	btfss	status,0,c
  3347   000E10  0012               	return	
  3348   000E12                     u1010:
  3349                           
  3350                           ;Lab5.c: 263: RB5 = 1;
  3351   000E12  8A81               	bsf	3969,5,c	;volatile
  3352                           
  3353                           ;Lab5.c: 264: RB6 = 1;
  3354   000E14  8C81               	bsf	3969,6,c	;volatile
  3355                           
  3356                           ;Lab5.c: 265: RB7 = 1;
  3357   000E16  8E81               	bsf	3969,7,c	;volatile
  3358   000E18  0012               	return	
  3359   000E1A                     __end_of_ColorRGB:
  3360                           	callstack 0
  3361                           
  3362 ;; *************** function _ISR *****************
  3363 ;; Defined at:
  3364 ;;		line 305 in file "Lab5.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg, status,2, status,0, cstack
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3378 ;;      Params:         0       0       0       0       0       0       0       0       0
  3379 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3380 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3381 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3382 ;;Total ram usage:        2 bytes
  3383 ;; Hardware stack levels used: 1
  3384 ;; Hardware stack levels required when called: 1
  3385 ;; This function calls:
  3386 ;;		_Recibir
  3387 ;; This function is called by:
  3388 ;;		Interrupt level 2
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	intcode
  3393   000008                     __pintcode:
  3394                           	callstack 0
  3395   000008                     _ISR:
  3396                           	callstack 25
  3397                           
  3398                           ;incstack = 0
  3399   000008  8221               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3400   00000A  ED5B  F007         	call	int_func,f	;refresh shadow registers
  3401                           
  3402                           	psect	intcode_body
  3403   000EB6                     __pintcode_body:
  3404                           	callstack 25
  3405   000EB6                     int_func:
  3406                           	callstack 25
  3407   000EB6  0006               	pop		; remove dummy address from shadow register refresh
  3408                           
  3409                           ;Lab5.c: 306: if(TMR0IF){
  3410   000EB8  A4F2               	btfss	4082,2,c	;volatile
  3411   000EBA  D00A               	goto	i2l1643
  3412                           
  3413                           ;Lab5.c: 307: TMR0IF=0;
  3414   000EBC  94F2               	bcf	4082,2,c	;volatile
  3415                           
  3416                           ;Lab5.c: 308: RE2 = !RE2;
  3417   000EBE  B484               	btfsc	3972,2,c	;volatile
  3418   000EC0  D002               	goto	i2u65_40
  3419   000EC2  8484               	bsf	3972,2,c	;volatile
  3420   000EC4  D001               	goto	i2u66_45
  3421   000EC6                     i2u65_40:
  3422   000EC6  9484               	bcf	3972,2,c	;volatile
  3423   000EC8                     i2u66_45:
  3424                           
  3425                           ;Lab5.c: 309: TMR0 = 3036;
  3426   000EC8  0E0B               	movlw	11
  3427   000ECA  6ED7               	movwf	215,c	;volatile
  3428   000ECC  0EDC               	movlw	220
  3429   000ECE  6ED6               	movwf	214,c	;volatile
  3430   000ED0                     i2l1643:
  3431                           
  3432                           ;Lab5.c: 311: };Lab5.c: 312: if(RCIF){
  3433   000ED0  BA9E               	btfsc	3998,5,c	;volatile
  3434   000ED2  D01A               	goto	i2l1657
  3435   000ED4  D033               	goto	i2l307
  3436   000ED6                     i2l1647:
  3437                           
  3438                           ;Lab5.c: 315: A=0;
  3439   000ED6  0E00               	movlw	0
  3440   000ED8  6E1C               	movwf	(_A+1)^0,c
  3441   000EDA  0E00               	movlw	0
  3442   000EDC  6E1B               	movwf	_A^0,c
  3443                           
  3444                           ;Lab5.c: 316: B=0;
  3445   000EDE  0E00               	movlw	0
  3446   000EE0  6E1A               	movwf	(_B+1)^0,c
  3447   000EE2  0E00               	movlw	0
  3448   000EE4  D00F               	goto	L9
  3449   000EE6                     i2l1649:
  3450                           
  3451                           ;Lab5.c: 319: A=0;
  3452   000EE6  0E00               	movlw	0
  3453   000EE8  6E1C               	movwf	(_A+1)^0,c
  3454   000EEA  0E00               	movlw	0
  3455   000EEC  D007               	goto	L11
  3456   000EEE                     i2l1651:
  3457                           
  3458                           ;Lab5.c: 323: A=1;
  3459   000EEE  0E00               	movlw	0
  3460   000EF0  6E1C               	movwf	(_A+1)^0,c
  3461   000EF2  0E01               	movlw	1
  3462   000EF4  D7F3               	goto	L10
  3463   000EF6                     i2l1653:
  3464                           
  3465                           ;Lab5.c: 327: A=1;
  3466   000EF6  0E00               	movlw	0
  3467   000EF8  6E1C               	movwf	(_A+1)^0,c
  3468   000EFA  0E01               	movlw	1
  3469   000EFC                     L11:
  3470   000EFC  6E1B               	movwf	_A^0,c
  3471                           
  3472                           ;Lab5.c: 328: B=1;
  3473   000EFE  0E00               	movlw	0
  3474   000F00  6E1A               	movwf	(_B+1)^0,c
  3475   000F02  0E01               	movlw	1
  3476   000F04                     L9:
  3477   000F04  6E19               	movwf	_B^0,c
  3478                           
  3479                           ;Lab5.c: 329: break;
  3480   000F06  D00E               	goto	i2l1659
  3481   000F08                     i2l1657:
  3482   000F08  ECBD  F009         	call	_Recibir	;wreg free
  3483                           
  3484                           ; Switch size 1, requested type "simple"
  3485                           ; Number of cases is 4, Range of values is 67 to 82
  3486                           ; switch strategies available:
  3487                           ; Name         Instructions Cycles
  3488                           ; simple_byte           13     7 (average)
  3489                           ;	Chosen strategy is simple_byte
  3490   000F0C  0A43               	xorlw	67	; case 67
  3491   000F0E  B4D8               	btfsc	status,2,c
  3492   000F10  D7E2               	goto	i2l1647
  3493   000F12  0A05               	xorlw	5	; case 70
  3494   000F14  B4D8               	btfsc	status,2,c
  3495   000F16  D7EF               	goto	i2l1653
  3496   000F18  0A0D               	xorlw	13	; case 75
  3497   000F1A  B4D8               	btfsc	status,2,c
  3498   000F1C  D7E4               	goto	i2l1649
  3499   000F1E  0A19               	xorlw	25	; case 82
  3500   000F20  B4D8               	btfsc	status,2,c
  3501   000F22  D7E5               	goto	i2l1651
  3502   000F24                     i2l1659:
  3503                           
  3504                           ;Lab5.c: 333: _delay((unsigned long)((100)*(8000000/4000.0)));
  3505   000F24  0E02               	movlw	2
  3506   000F26  6E02               	movwf	(??_ISR+1)^0,c
  3507   000F28  0E04               	movlw	4
  3508   000F2A  6E01               	movwf	??_ISR^0,c
  3509   000F2C  0EBA               	movlw	186
  3510   000F2E                     i2u136_47:
  3511   000F2E  2EE8               	decfsz	wreg,f,c
  3512   000F30  D7FE               	bra	i2u136_47
  3513   000F32  2E01               	decfsz	??_ISR^0,f,c
  3514   000F34  D7FC               	bra	i2u136_47
  3515   000F36  2E02               	decfsz	(??_ISR+1)^0,f,c
  3516   000F38  D7FA               	bra	i2u136_47
  3517   000F3A  D000               	nop2	
  3518   000F3C                     i2l307:
  3519   000F3C  9221               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3520   000F3E  0011               	retfie		f
  3521   000F40                     __end_of_ISR:
  3522                           	callstack 0
  3523                           
  3524 ;; *************** function _Recibir *****************
  3525 ;; Defined at:
  3526 ;;		line 164 in file "Lab5.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;		None
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;		None
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      unsigned char 
  3533 ;; Registers used:
  3534 ;;		wreg, status,2
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3540 ;;      Params:         0       0       0       0       0       0       0       0       0
  3541 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3543 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3544 ;;Total ram usage:        0 bytes
  3545 ;; Hardware stack levels used: 1
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_ISR
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text27
  3554   00137A                     __ptext27:
  3555                           	callstack 0
  3556   00137A                     _Recibir:
  3557                           	callstack 25
  3558                           
  3559                           ;Lab5.c: 165: while(RCIF==0);
  3560                           
  3561                           ;incstack = 0
  3562   00137A  AA9E               	btfss	3998,5,c	;volatile
  3563   00137C  D7FE               	goto	__ptext27
  3564                           
  3565                           ;Lab5.c: 166: return RCREG;
  3566   00137E  50AE               	movf	174,w,c	;volatile
  3567   001380  0012               	return		;funcret
  3568   001382                     __end_of_Recibir:
  3569                           	callstack 0
  3570                           
  3571                           	psect	rparam
  3572   000000                     
  3573                           	psect	temp
  3574   000021                     btemp:
  3575                           	callstack 0
  3576   000021                     	ds	1
  3577   000000                     int$flags	set	btemp
  3578   000000                     wtemp8	set	btemp+1
  3579   000000                     ttemp5	set	btemp+1
  3580   000000                     ttemp6	set	btemp+4
  3581   000000                     ttemp7	set	btemp+8
  3582                           
  3583                           	psect	idloc
  3584                           
  3585                           ;Config register IDLOC0 @ 0x200000
  3586                           ;	unspecified, using default values
  3587   200000                     	org	2097152
  3588   200000  FF                 	db	255
  3589                           
  3590                           ;Config register IDLOC1 @ 0x200001
  3591                           ;	unspecified, using default values
  3592   200001                     	org	2097153
  3593   200001  FF                 	db	255
  3594                           
  3595                           ;Config register IDLOC2 @ 0x200002
  3596                           ;	unspecified, using default values
  3597   200002                     	org	2097154
  3598   200002  FF                 	db	255
  3599                           
  3600                           ;Config register IDLOC3 @ 0x200003
  3601                           ;	unspecified, using default values
  3602   200003                     	org	2097155
  3603   200003  FF                 	db	255
  3604                           
  3605                           ;Config register IDLOC4 @ 0x200004
  3606                           ;	unspecified, using default values
  3607   200004                     	org	2097156
  3608   200004  FF                 	db	255
  3609                           
  3610                           ;Config register IDLOC5 @ 0x200005
  3611                           ;	unspecified, using default values
  3612   200005                     	org	2097157
  3613   200005  FF                 	db	255
  3614                           
  3615                           ;Config register IDLOC6 @ 0x200006
  3616                           ;	unspecified, using default values
  3617   200006                     	org	2097158
  3618   200006  FF                 	db	255
  3619                           
  3620                           ;Config register IDLOC7 @ 0x200007
  3621                           ;	unspecified, using default values
  3622   200007                     	org	2097159
  3623   200007  FF                 	db	255
  3624                           
  3625                           	psect	config
  3626                           
  3627                           ;Config register CONFIG1L @ 0x300000
  3628                           ;	unspecified, using default values
  3629                           ;	PLL Prescaler Selection bits
  3630                           ;	PLLDIV = 0x0, unprogrammed default
  3631                           ;	System Clock Postscaler Selection bits
  3632                           ;	CPUDIV = 0x0, unprogrammed default
  3633                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3634                           ;	USBDIV = 0x0, unprogrammed default
  3635   300000                     	org	3145728
  3636   300000  00                 	db	0
  3637                           
  3638                           ;Config register CONFIG1H @ 0x300001
  3639                           ;	Oscillator Selection bits
  3640                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3641                           ;	Fail-Safe Clock Monitor Enable bit
  3642                           ;	FCMEN = 0x0, unprogrammed default
  3643                           ;	Internal/External Oscillator Switchover bit
  3644                           ;	IESO = 0x0, unprogrammed default
  3645   300001                     	org	3145729
  3646   300001  09                 	db	9
  3647                           
  3648                           ;Config register CONFIG2L @ 0x300002
  3649                           ;	unspecified, using default values
  3650                           ;	Power-up Timer Enable bit
  3651                           ;	PWRT = 0x1, unprogrammed default
  3652                           ;	Brown-out Reset Enable bits
  3653                           ;	BOR = 0x3, unprogrammed default
  3654                           ;	Brown-out Reset Voltage bits
  3655                           ;	BORV = 0x3, unprogrammed default
  3656                           ;	USB Voltage Regulator Enable bit
  3657                           ;	VREGEN = 0x0, unprogrammed default
  3658   300002                     	org	3145730
  3659   300002  1F                 	db	31
  3660                           
  3661                           ;Config register CONFIG2H @ 0x300003
  3662                           ;	Watchdog Timer Enable bit
  3663                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3664                           ;	Watchdog Timer Postscale Select bits
  3665                           ;	WDTPS = 0xF, unprogrammed default
  3666   300003                     	org	3145731
  3667   300003  1E                 	db	30
  3668                           
  3669                           ; Padding undefined space
  3670   300004                     	org	3145732
  3671   300004  FF                 	db	255
  3672                           
  3673                           ;Config register CONFIG3H @ 0x300005
  3674                           ;	CCP2 MUX bit
  3675                           ;	CCP2MX = 0x1, unprogrammed default
  3676                           ;	PORTB A/D Enable bit
  3677                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3678                           ;	Low-Power Timer 1 Oscillator Enable bit
  3679                           ;	LPT1OSC = 0x0, unprogrammed default
  3680                           ;	MCLR Pin Enable bit
  3681                           ;	MCLRE = 0x1, unprogrammed default
  3682   300005                     	org	3145733
  3683   300005  81                 	db	129
  3684                           
  3685                           ;Config register CONFIG4L @ 0x300006
  3686                           ;	Stack Full/Underflow Reset Enable bit
  3687                           ;	STVREN = 0x1, unprogrammed default
  3688                           ;	Single-Supply ICSP Enable bit
  3689                           ;	LVP = OFF, Single-Supply ICSP disabled
  3690                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3691                           ;	ICPRT = 0x0, unprogrammed default
  3692                           ;	Extended Instruction Set Enable bit
  3693                           ;	XINST = 0x0, unprogrammed default
  3694                           ;	Background Debugger Enable bit
  3695                           ;	DEBUG = 0x1, unprogrammed default
  3696   300006                     	org	3145734
  3697   300006  81                 	db	129
  3698                           
  3699                           ; Padding undefined space
  3700   300007                     	org	3145735
  3701   300007  FF                 	db	255
  3702                           
  3703                           ;Config register CONFIG5L @ 0x300008
  3704                           ;	unspecified, using default values
  3705                           ;	Code Protection bit
  3706                           ;	CP0 = 0x1, unprogrammed default
  3707                           ;	Code Protection bit
  3708                           ;	CP1 = 0x1, unprogrammed default
  3709                           ;	Code Protection bit
  3710                           ;	CP2 = 0x1, unprogrammed default
  3711                           ;	Code Protection bit
  3712                           ;	CP3 = 0x1, unprogrammed default
  3713   300008                     	org	3145736
  3714   300008  0F                 	db	15
  3715                           
  3716                           ;Config register CONFIG5H @ 0x300009
  3717                           ;	unspecified, using default values
  3718                           ;	Boot Block Code Protection bit
  3719                           ;	CPB = 0x1, unprogrammed default
  3720                           ;	Data EEPROM Code Protection bit
  3721                           ;	CPD = 0x1, unprogrammed default
  3722   300009                     	org	3145737
  3723   300009  C0                 	db	192
  3724                           
  3725                           ;Config register CONFIG6L @ 0x30000A
  3726                           ;	unspecified, using default values
  3727                           ;	Write Protection bit
  3728                           ;	WRT0 = 0x1, unprogrammed default
  3729                           ;	Write Protection bit
  3730                           ;	WRT1 = 0x1, unprogrammed default
  3731                           ;	Write Protection bit
  3732                           ;	WRT2 = 0x1, unprogrammed default
  3733                           ;	Write Protection bit
  3734                           ;	WRT3 = 0x1, unprogrammed default
  3735   30000A                     	org	3145738
  3736   30000A  0F                 	db	15
  3737                           
  3738                           ;Config register CONFIG6H @ 0x30000B
  3739                           ;	unspecified, using default values
  3740                           ;	Configuration Register Write Protection bit
  3741                           ;	WRTC = 0x1, unprogrammed default
  3742                           ;	Boot Block Write Protection bit
  3743                           ;	WRTB = 0x1, unprogrammed default
  3744                           ;	Data EEPROM Write Protection bit
  3745                           ;	WRTD = 0x1, unprogrammed default
  3746   30000B                     	org	3145739
  3747   30000B  E0                 	db	224
  3748                           
  3749                           ;Config register CONFIG7L @ 0x30000C
  3750                           ;	unspecified, using default values
  3751                           ;	Table Read Protection bit
  3752                           ;	EBTR0 = 0x1, unprogrammed default
  3753                           ;	Table Read Protection bit
  3754                           ;	EBTR1 = 0x1, unprogrammed default
  3755                           ;	Table Read Protection bit
  3756                           ;	EBTR2 = 0x1, unprogrammed default
  3757                           ;	Table Read Protection bit
  3758                           ;	EBTR3 = 0x1, unprogrammed default
  3759   30000C                     	org	3145740
  3760   30000C  0F                 	db	15
  3761                           
  3762                           ;Config register CONFIG7H @ 0x30000D
  3763                           ;	unspecified, using default values
  3764                           ;	Boot Block Table Read Protection bit
  3765                           ;	EBTRB = 0x1, unprogrammed default
  3766   30000D                     	org	3145741
  3767   30000D  40                 	db	64
  3768                           tosu	equ	0xFFF
  3769                           tosh	equ	0xFFE
  3770                           tosl	equ	0xFFD
  3771                           stkptr	equ	0xFFC
  3772                           pclatu	equ	0xFFB
  3773                           pclath	equ	0xFFA
  3774                           pcl	equ	0xFF9
  3775                           tblptru	equ	0xFF8
  3776                           tblptrh	equ	0xFF7
  3777                           tblptrl	equ	0xFF6
  3778                           tablat	equ	0xFF5
  3779                           prodh	equ	0xFF4
  3780                           prodl	equ	0xFF3
  3781                           indf0	equ	0xFEF
  3782                           postinc0	equ	0xFEE
  3783                           postdec0	equ	0xFED
  3784                           preinc0	equ	0xFEC
  3785                           plusw0	equ	0xFEB
  3786                           fsr0h	equ	0xFEA
  3787                           fsr0l	equ	0xFE9
  3788                           wreg	equ	0xFE8
  3789                           indf1	equ	0xFE7
  3790                           postinc1	equ	0xFE6
  3791                           postdec1	equ	0xFE5
  3792                           preinc1	equ	0xFE4
  3793                           plusw1	equ	0xFE3
  3794                           fsr1h	equ	0xFE2
  3795                           fsr1l	equ	0xFE1
  3796                           bsr	equ	0xFE0
  3797                           indf2	equ	0xFDF
  3798                           postinc2	equ	0xFDE
  3799                           postdec2	equ	0xFDD
  3800                           preinc2	equ	0xFDC
  3801                           plusw2	equ	0xFDB
  3802                           fsr2h	equ	0xFDA
  3803                           fsr2l	equ	0xFD9
  3804                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        1
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     24      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->___awdiv
    _DireccionaLCD->_EnviaDato
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6760
                                             22 COMRAM     2     2      0
                           _BorraLCD
                           _ColorRGB
                       _ConfiguraLCD
                         _Conversion
                      _DireccionaLCD
                       _EscribeLCD_c
                _GuardarDatoEnEEPROM
                      _InicializaLCD
                           _LeerHT11
                     _MensajeLCD_Var
                    _TransmitirDatos
                            ___lbdiv
                            ___lbmod
                   _leerDatoEnEEPROM
 ---------------------------------------------------------------------------------
 (1) _leerDatoEnEEPROM                                     2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     14    10      4    4071
                                             10 COMRAM    12     8      4
                      _DireccionaLCD
                       _EscribeLCD_c
                         _Transmitir
                            ___awdiv
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     387
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     390
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                              6 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       4     3      1     694
                                              7 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              6 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             1     1      0      75
                                              6 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0      75
                                              3 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0      60
                                              4 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GuardarDatoEnEEPROM                                  3     0      3     196
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Conversion                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     0      2     384
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMRAM     2     2      0
                            _Recibir
 ---------------------------------------------------------------------------------
 (6) _Recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _ConfiguraLCD
   _Conversion
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _GuardarDatoEnEEPROM
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Var
     _EscribeLCD_c
     _strlen
   _TransmitirDatos
     _DireccionaLCD
     _EscribeLCD_c
     _Transmitir
     ___awdiv
     ___lbdiv
     ___lbmod
     ___lwdiv
     ___lwmod
     ___wmul
   ___lbdiv
   ___lbmod
   _leerDatoEnEEPROM

 _ISR (ROOT)
   _Recibir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     18      20       1       34.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRlhhl       11      0       0      33        0.0%
BITBIGSFRhlhhh       E      0       0      23        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRll          D      0       0      35        0.0%
BITBIGSFRhlhlh       8      0       0      25        0.0%
BITBIGSFRhllhl       7      0       0      29        0.0%
BITBIGSFRhlhhl       7      0       0      24        0.0%
BITBIGSFRlhhhh       6      0       0      31        0.0%
BITBIGSFRhllhhl      4      0       0      27        0.0%
BITBIGSFRhllll       4      0       0      30        0.0%
BITBIGSFRhllhhl      2      0       0      28        0.0%
BITBIGSFRhllhhh      1      0       0      26        0.0%
BITBIGSFRlhhhl       1      0       0      32        0.0%
BITBIGSFRlhl         1      0       0      34        0.0%
BITBIGSFRhhll        1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      36        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat May 27 21:22:04 2023

                          _A 001B                            _B 0019            Transmitir@BufferT 0003  
                         _GO 007E11                           _RD 007D30                           u60 11F6  
                         _WR 007D31                 ___awdiv@sign 0008                   EnviaDato@a 0006  
        ___wmul@multiplicand 0005                          l213 11A2                          l205 0C4C  
              _InicializaLCD 0E1A                          l232 11F2                          l216 11AC  
                        l227 11CE                          l251 0854                          l256 0994  
                        l281 134C                          l257 0A86                          l287 12BA  
                        l789 1072                          l799 114C                          _GIE 007F97  
                        _RB0 007C08                          _RB1 007C09                          _RB2 007C0A  
                        _RC2 007C12                          _RB5 007C0D                          _RC4 007C14  
                        _RB6 007C0E                          _RB7 007C0F                          _RE2 007C22  
                        u270 12F8                          _ISR 0008                          u720 0F86  
                        u800 104C                          u910 0D72                          u830 112E  
                        u760 1172                          u930 0D92                          u950 0DB2  
                        u970 0DD2                          u890 0D52                          u990 0DF2  
                        _Hum 001E             TransmitirDatos@n 0011                          wreg 000FE8  
                       ?_ISR 0001                         l1103 11E2                         l1071 0FD8  
                       l1151 12CC                         l1073 0FFA                         l1305 0E2C  
                       l1161 1370                         l2025 0B94                         l1075 1004  
                       l1091 1106                         l1315 0E4A                         l1069 0FC8  
                       l1325 0E68                         l1079 100E                         l2063 0D04  
                       l1345 0EA0                         l2065 0D18                         l1701 0F7A  
                       l1703 0F82                         l1721 0FBA                         l1713 0FA2  
                       l1801 1142                         l1731 1168                         l1717 0FAC  
                       l1901 08FA                         l1807 1086                         l1815 10B8  
                       l1743 1184                         l1735 116E                         l1841 0D66  
                       l1761 1248                         l1753 1230                         l1835 0D46  
                       l1667 1256                         l1747 118C                         l1853 0DA6  
                       l1669 1258                         l1773 1040                         l1871 0E06  
                       l1847 0D86                         l1695 0F64                         l1775 1048  
                       l1865 0DE6                         l1689 0F54                         l1785 1068  
                       l1793 1122                         l1859 0DC6                         l1795 112A  
                       l1893 08A2                         l1885 0862                         l1889 0876  
                       l1899 08D0                         _CFGS 007D36                         _EEIF 007D0C  
                       STR_1 0801                         STR_2 080E                         STR_3 0818  
                       STR_4 081E                         u1010 0E12                         u1100 0CFA  
                       u1110 0D2E                         u1040 0A80                         u1070 0CEA  
                       u1207 0C32                         u1080 0CEC                         u1217 0C56  
                       u1137 0AD0                         u1090 0CF8                         u1307 0FCE  
                       u1227 0C6C                         u1147 0B82                         u1317 0FDE  
                       u1237 0C86                         u1157 0BA6                         u1327 0FEE  
                       u1247 0CAE                         u1167 0BC2                         _LATD 000F8C  
                       u1337 0FFC                         u1257 0CD0                         u1177 0BDE  
                       u1347 1006                         u1267 1198                         u1187 0BFA  
                       u1357 1364                         u1277 11A8                         u1197 0C14  
                       u1287 11D4                         u1297 11E4                         _RCIF 007CF5  
                       _RBPU 007F8F                         _TMR0 000FD6                         _TRMT 007D61  
                       _WREN 007D32               ??_EscribeLCD_c 0007                         _Temp 001F  
        _GuardarDatoEnEEPROM 129E                         _main 0AC0                         btemp 0021  
                       prodh 000FF4                         prodl 000FF3                         start 000E  
            __end_of_LeerBit 11FA                 ___param_bank 000000                        ??_ISR 0001  
            __end_of_Recibir 1382         ?_GuardarDatoEnEEPROM 0003               ?_InicializaLCD 0001  
                      ?_main 0001              __end_of___awdiv 0FC4              __end_of___lbdiv 1190  
                      _ADRES 000FC3                        _EEADR 000FA9                EscribeLCD_c@a 0007  
            __end_of___lbmod 1250                        _EEPGD 007D37                        _T0CON 000FD5  
            ___awdiv@divisor 0005                        _LATC2 007C5A                        _LATE0 007C68  
                      _LATE1 007C69              __end_of___lwdiv 107C              __end_of___lwmod 1156  
                      i2l307 0F3C              ___awdiv@counter 0007                        _RCREG 000FAE  
                      _RCSTA 000FAB                        _SPBRG 000FAF                        _USBEN 007B6B  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                        _TXREG 000FAD                        _TXSTA 000FAC  
     GuardarDatoEnEEPROM@dir 0003                        tablat 000FF5                   _Conversion 133E  
                _HabilitaLCD 1360                        ttemp5 0022                        ttemp6 0025  
                      ttemp7 0029                        status 000FD8                        wtemp8 0022  
            ___lbdiv@divisor 0003              ___lbdiv@counter 0005             __end_of_BorraLCD 133E  
           __end_of_LeerHT11 11CA             __end_of_ColorRGB 0E1A              __initialization 11FA  
           __end_of_LeerByte 12E6                 __end_of_main 0D32     __end_of_leerDatoEnEEPROM 1360  
      ??_GuardarDatoEnEEPROM 0006                       ??_main 0017         __end_of_ConfiguraLCD 12FE  
              __activetblptr 000002                   _TempEEPROM 001D                       _ADCON0 000FC2  
                     _ADCON1 000FC1                       _ADCON2 000FC0                       _EEDATA 000FA8  
             DireccionaLCD@a 0007                       _EECON2 000FA7             ___awdiv@dividend 0003  
                     i2l1651 0EEE                       i2l1643 0ED0                       i2l1653 0EF6  
                     i2l1647 0ED6                       i2l1649 0EE6                       i2l1657 0F08  
                     i2l1659 0F24                       _OSCCON 000FD3                       _TMR0IE 007F95  
                     _TMR0IF 007F92                       _TMR0ON 007EAF                       _TRISA0 007C90  
                     _TRISC2 007CA2                    ??_LeerBit 0003        __end_of_DireccionaLCD 1314  
                     _UTRDIS 007B7B                   _RetardoLCD 0FC4                    ??_Recibir 0001  
        TransmitirDatos@Ent1 000B          TransmitirDatos@Ent2 000D          TransmitirDatos@Simb 0013  
                     ___wmul 1278                    ??___awdiv 0007                    ??___lbdiv 0004  
                  ??___lbmod 0004                    ??___lwdiv 0007                    ??___lwmod 0007  
            ??_InicializaLCD 0007                       clear_0 1212             ___awdiv@quotient 0009  
    GuardarDatoEnEEPROM@dato 0005                       isa$std 000001         __end_of_EscribeLCD_c 132A  
                     _strlen 1250                 __pdataCOMRAM 0020                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
                 _Transmitir 136E             ___lbdiv@dividend 0004                  ?_Conversion 0001  
            ___lbmod@divisor 0003                   __accesstop 0060      __end_of__initialization 1218  
            ___lbmod@counter 0005                ___rparam_used 000001               __pcstackCOMRAM 0001  
          __end_of_EnviaDato 1114             ___lbdiv@quotient 0006                    ?_BorraLCD 0001  
                  ?_LeerHT11 0001                    ?_ColorRGB 0003               _MensajeLCD_Var 107C  
                  ?_LeerByte 0001              MensajeLCD_Var@a 0008              MensajeLCD_Var@i 000A  
                ?_RetardoLCD 0001                  RetardoLCD@a 0004                      ?___wmul 0003  
                    _BAUDCON 000FB8                      ?_strlen 0003       __end_of_MensajeLCD_Var 10CE  
                    i2u65_40 0EC6                      i2u66_45 0EC8                   ??_BorraLCD 0007  
                 ??_LeerHT11 0007                   ??_ColorRGB 0005                  ?_Transmitir 0001  
                 ??_LeerByte 0004                 ?_HabilitaLCD 0001                      _LeerBit 11CA  
               _ConfiguraLCD 12E6                      _Recibir 137A                      __Hparam 0000  
                    __Lparam 0000         TransmitirDatos@TempC 0015                      ___awdiv 0F40  
                    ___lbdiv 1156                      ___lbmod 1226                      ___lwdiv 102A  
                    ___lwmod 1114            ?_leerDatoEnEEPROM 0003                 __psmallconst 0800  
                    __pcinit 11FA                      __ramtop 0800                      __ptext0 0AC0  
                    __ptext1 1352                      __ptext2 0824                      __ptext3 1278  
                    __ptext4 1114                      __ptext5 102A                      __ptext6 1226  
         ??_leerDatoEnEEPROM 0005                      __ptext7 1156                      __ptext8 0F40  
                    __ptext9 136E              ?_MensajeLCD_Var 0008               __pintcode_body 0EB6  
       end_of_initialization 1218              Conversion@canal 0003                __Lmediumconst 0000  
                    int_func 0EB6                 _EscribeLCD_c 1314  __end_of_GuardarDatoEnEEPROM 12C4  
          ??_TransmitirDatos 000F                      postinc0 000FEE                      strlen@s 0003  
           ___lbmod@dividend 0004                    LeerByte@i 0006                 ??_Conversion 0003  
                ___lbmod@rem 0006               __end_of___wmul 129E                __pidataCOMRAM 1382  
      __end_of_InicializaLCD 0EB6           __end_of_Conversion 1352                    _EnviaDato 10CE  
             __end_of_strlen 1278          start_initialization 11FA                  __end_of_ISR 0F40  
               ??_RetardoLCD 0003                     ??___wmul 0007                     ??_strlen 0005  
                 ?_EnviaDato 0001                  __pbssCOMRAM 0019           __end_of_RetardoLCD 102A  
               ??_Transmitir 0003                     ?_LeerBit 0001                _DireccionaLCD 12FE  
                   ?_Recibir 0001             ___lwdiv@dividend 0003                    __pintcode 0008  
                   ?___awdiv 0003                     ?___lbdiv 0003                     ?___lbmod 0003  
                   ?___lwdiv 0003                     ?___lwmod 0003           __end_of_Transmitir 137A  
           ??_MensajeLCD_Var 0009                  __smallconst 0800             ___lwdiv@quotient 0007  
            _TransmitirDatos 0824               ___wmul@product 0007               ?_DireccionaLCD 0001  
                   i2u136_47 0F2E            ___wmul@multiplier 0003                  ??_EnviaDato 0005  
                   _BorraLCD 132A                     _LeerHT11 1190                     _ColorRGB 0D32  
                   _LeerByte 12C4          leerDatoEnEEPROM@dir 0003                     __Hrparam 0000  
                   __Lrparam 0000                ConfiguraLCD@a 0003      __end_of_TransmitirDatos 0AC0  
            ___lwdiv@divisor 0005              ___lwdiv@counter 0009                     __ptext10 12FE  
                   __ptext11 107C                     __ptext20 0FC4                     __ptext12 1250  
                   __ptext21 1360                     __ptext13 1314                     __ptext22 129E  
                   __ptext14 1190                     __ptext23 133E                     __ptext15 12C4  
                   __ptext24 12E6                     __ptext16 11CA                     __ptext25 0D32  
                   __ptext17 0E1A                     __ptext18 132A                     __ptext27 137A  
                   __ptext19 10CE              ??_DireccionaLCD 0007                     _interfaz 0020  
                   isa$xinst 000000                     int$flags 0021             _leerDatoEnEEPROM 1352  
                   intlevel2 0000                ??_HabilitaLCD 0003             ___lwmod@dividend 0003  
              ?_ConfiguraLCD 0001                  ColorRGB@val 0003              ___lwmod@divisor 0005  
                   strlen@cp 0005              ___lwmod@counter 0007             ?_TransmitirDatos 000B  
             ??_ConfiguraLCD 0003                ?_EscribeLCD_c 0001                   LeerBit@res 0003  
        __end_of_HabilitaLCD 136E                  LeerByte@res 0005  
