

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue May 23 19:27:11 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43   000000                     
    44                           ; Version 2.40
    45                           ; Generated 04/07/2022 GMT
    46                           ; 
    47                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000000                     
    80                           	psect	idataCOMRAM
    81   0012AA                     __pidataCOMRAM:
    82                           	callstack 0
    83                           
    84                           ;initializer for _interfaz
    85   0012AA  08                 	db	8
    86   000000                     _EECON2	set	4007
    87   000000                     _RCREG	set	4014
    88   000000                     _TXREG	set	4013
    89   000000                     _TRISC	set	3988
    90   000000                     _TRISD	set	3989
    91   000000                     _SPBRG	set	4015
    92   000000                     _BAUDCON	set	4024
    93   000000                     _RC0	set	31760
    94   000000                     _RD	set	32048
    95   000000                     _WR	set	32049
    96   000000                     _WREN	set	32050
    97   000000                     _CFGS	set	32054
    98   000000                     _GO	set	32273
    99   000000                     _RB5	set	31757
   100   000000                     _RB6	set	31758
   101   000000                     _RB7	set	31759
   102   000000                     _TRMT	set	32097
   103   000000                     _RC2	set	31762
   104   000000                     _TRISC2	set	31906
   105   000000                     _RC5	set	31765
   106   000000                     _RC4	set	31764
   107   000000                     _TMR0ON	set	32431
   108   000000                     _GIE	set	32663
   109   000000                     _TMR0IE	set	32661
   110   000000                     _LATE1	set	31849
   111   000000                     _LATD	set	3980
   112   000000                     _USBEN	set	31595
   113   000000                     _TRISA	set	3986
   114   000000                     _TRISB	set	3987
   115   000000                     _RCSTA	set	4011
   116   000000                     _TXSTA	set	4012
   117   000000                     _OSCCON	set	4051
   118   000000                     _LATE0	set	31848
   119   000000                     _T0CON	set	4053
   120   000000                     _RBPU	set	32655
   121   000000                     _ADCON2	set	4032
   122   000000                     _ADCON1	set	4033
   123   000000                     _ADCON0	set	4034
   124   000000                     _ADRES	set	4035
   125   000000                     _RCIF	set	31989
   126   000000                     _UTRDIS	set	31611
   127   000000                     _RB0	set	31752
   128   000000                     _RC1	set	31761
   129   000000                     _LATC2	set	31834
   130   000000                     _TMR0IF	set	32658
   131   000000                     _TMR0	set	4054
   132   000000                     _EEDATA	set	4008
   133   000000                     _EEADR	set	4009
   134   000000                     _EEIF	set	32012
   135   000000                     _EEPGD	set	32055
   136                           
   137                           	psect	smallconst
   138   000800                     __psmallconst:
   139                           	callstack 0
   140   000800  00                 	db	0
   141   000801                     STR_3:
   142   000801  54                 	db	84	;'T'
   143   000802  65                 	db	101	;'e'
   144   000803  6D                 	db	109	;'m'
   145   000804  70                 	db	112	;'p'
   146   000805  65                 	db	101	;'e'
   147   000806  72                 	db	114	;'r'
   148   000807  61                 	db	97	;'a'
   149   000808  74                 	db	116	;'t'
   150   000809  75                 	db	117	;'u'
   151   00080A  72                 	db	114	;'r'
   152   00080B  61                 	db	97	;'a'
   153   00080C  3A                 	db	58	;':'
   154   00080D  00                 	db	0
   155   00080E                     STR_1:
   156   00080E  55                 	db	85	;'U'
   157   00080F  6C                 	db	108	;'l'
   158   000810  74                 	db	116	;'t'
   159   000811  69                 	db	105	;'i'
   160   000812  6D                 	db	109	;'m'
   161   000813  61                 	db	97	;'a'
   162   000814  20                 	db	32
   163   000815  74                 	db	116	;'t'
   164   000816  65                 	db	101	;'e'
   165   000817  6D                 	db	109	;'m'
   166   000818  70                 	db	112	;'p'
   167   000819  3A                 	db	58	;':'
   168   00081A  00                 	db	0
   169   00081B                     STR_2:
   170   00081B  49                 	db	73	;'I'
   171   00081C  6E                 	db	110	;'n'
   172   00081D  69                 	db	105	;'i'
   173   00081E  63                 	db	99	;'c'
   174   00081F  69                 	db	105	;'i'
   175   000820  61                 	db	97	;'a'
   176   000821  6E                 	db	110	;'n'
   177   000822  64                 	db	100	;'d'
   178   000823  6F                 	db	111	;'o'
   179   000824  00                 	db	0
   180   000825                     STR_4:
   181   000825  48                 	db	72	;'H'
   182   000826  75                 	db	117	;'u'
   183   000827  6D                 	db	109	;'m'
   184   000828  65                 	db	101	;'e'
   185   000829  64                 	db	100	;'d'
   186   00082A  61                 	db	97	;'a'
   187   00082B  64                 	db	100	;'d'
   188   00082C  3A                 	db	58	;':'
   189   00082D  00                 	db	0
   190   00082E  00                 	db	0	; dummy byte at the end
   191   000000                     
   192                           ; #config settings
   193                           
   194                           	psect	cinit
   195   001144                     __pcinit:
   196                           	callstack 0
   197   001144                     start_initialization:
   198                           	callstack 0
   199   001144                     __initialization:
   200                           	callstack 0
   201                           
   202                           ; Initialize objects allocated to COMRAM (1 bytes)
   203                           ; load TBLPTR registers with __pidataCOMRAM
   204   001144  0EAA               	movlw	low __pidataCOMRAM
   205   001146  6EF6               	movwf	tblptrl,c
   206   001148  0E12               	movlw	high __pidataCOMRAM
   207   00114A  6EF7               	movwf	tblptrh,c
   208   00114C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   209   00114E  6EF8               	movwf	tblptru,c
   210   001150  0009               	tblrd		*+	;fetch initializer
   211   001152  CFF5 F022          	movff	tablat,__pdataCOMRAM
   212                           
   213                           ; Clear objects allocated to COMRAM (8 bytes)
   214   001156  EE00  F01A         	lfsr	0,__pbssCOMRAM
   215   00115A  0E08               	movlw	8
   216   00115C                     clear_0:
   217   00115C  6AEE               	clrf	postinc0,c
   218   00115E  06E8               	decf	wreg,f,c
   219   001160  E1FD               	bnz	clear_0
   220   001162                     end_of_initialization:
   221                           	callstack 0
   222   001162                     __end_of__initialization:
   223                           	callstack 0
   224   001162  9023               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   225   001164  9223               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   226   001166  0E00               	movlw	low (__Lmediumconst shr (0+16))
   227   001168  6EF8               	movwf	tblptru,c
   228   00116A  0100               	movlb	0
   229   00116C  EF60  F005         	goto	_main	;jump to C main() function
   230                           
   231                           	psect	bssCOMRAM
   232   00001A                     __pbssCOMRAM:
   233                           	callstack 0
   234   00001A                     _B:
   235                           	callstack 0
   236   00001A                     	ds	2
   237   00001C                     _A:
   238                           	callstack 0
   239   00001C                     	ds	2
   240   00001E                     _Temperatura_EEPROM:
   241                           	callstack 0
   242   00001E                     	ds	1
   243   00001F                     _Che:
   244                           	callstack 0
   245   00001F                     	ds	1
   246   000020                     _Humedad:
   247                           	callstack 0
   248   000020                     	ds	1
   249   000021                     _Temperatura:
   250                           	callstack 0
   251   000021                     	ds	1
   252                           
   253                           	psect	dataCOMRAM
   254   000022                     __pdataCOMRAM:
   255                           	callstack 0
   256   000022                     _interfaz:
   257                           	callstack 0
   258   000022                     	ds	1
   259                           
   260                           	psect	cstackCOMRAM
   261   000001                     __pcstackCOMRAM:
   262                           	callstack 0
   263   000001                     ??_ISR:
   264   000001                     
   265                           ; 2 bytes @ 0x0
   266   000001                     	ds	2
   267   000003                     ??_RetardoLCD:
   268   000003                     ??_LeerDHT11:
   269   000003                     ?_strlen:
   270                           	callstack 0
   271   000003                     ?___wmul:
   272                           	callstack 0
   273   000003                     ?___awdiv:
   274                           	callstack 0
   275   000003                     ?___lwdiv:
   276                           	callstack 0
   277   000003                     ?___lwmod:
   278                           	callstack 0
   279   000003                     ConfiguraLCD@a:
   280                           	callstack 0
   281   000003                     Transmitir@BufferT:
   282                           	callstack 0
   283   000003                     Conversion@canal:
   284                           	callstack 0
   285   000003                     ___lbdiv@divisor:
   286                           	callstack 0
   287   000003                     ___lbmod@divisor:
   288                           	callstack 0
   289   000003                     strlen@s:
   290                           	callstack 0
   291   000003                     ColorRGB@val:
   292                           	callstack 0
   293   000003                     SaveData_EEPROM@dir:
   294                           	callstack 0
   295   000003                     ReadData_EEPROM@dir:
   296                           	callstack 0
   297   000003                     ___wmul@multiplier:
   298                           	callstack 0
   299   000003                     ___awdiv@dividend:
   300                           	callstack 0
   301   000003                     ___lwdiv@dividend:
   302                           	callstack 0
   303   000003                     ___lwmod@dividend:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x2
   307   000003                     	ds	1
   308   000004                     RetardoLCD@a:
   309                           	callstack 0
   310   000004                     LeerDHT11@contr:
   311                           	callstack 0
   312   000004                     ___lbdiv@dividend:
   313                           	callstack 0
   314   000004                     ___lbmod@dividend:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0x3
   318   000004                     	ds	1
   319   000005                     ??_EnviaDato:
   320   000005                     SaveData_EEPROM@dato:
   321                           	callstack 0
   322   000005                     ___lbdiv@counter:
   323                           	callstack 0
   324   000005                     ___lbmod@counter:
   325                           	callstack 0
   326   000005                     strlen@cp:
   327                           	callstack 0
   328   000005                     ___wmul@multiplicand:
   329                           	callstack 0
   330   000005                     ___awdiv@divisor:
   331                           	callstack 0
   332   000005                     ___lwdiv@divisor:
   333                           	callstack 0
   334   000005                     ___lwmod@divisor:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x4
   338   000005                     	ds	1
   339   000006                     EnviaDato@a:
   340                           	callstack 0
   341   000006                     ___lbdiv@quotient:
   342                           	callstack 0
   343   000006                     ___lbmod@rem:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x5
   347   000006                     	ds	1
   348   000007                     EscribeLCD_c@a:
   349                           	callstack 0
   350   000007                     DireccionaLCD@a:
   351                           	callstack 0
   352   000007                     ___awdiv@counter:
   353                           	callstack 0
   354   000007                     ___lwmod@counter:
   355                           	callstack 0
   356   000007                     ___wmul@product:
   357                           	callstack 0
   358   000007                     ___lwdiv@quotient:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x6
   362   000007                     	ds	1
   363   000008                     MensajeLCD_Var@a:
   364                           	callstack 0
   365   000008                     ___awdiv@sign:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x7
   369   000008                     	ds	1
   370   000009                     ??_MensajeLCD_Var:
   371   000009                     ___lwdiv@counter:
   372                           	callstack 0
   373   000009                     ___awdiv@quotient:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x8
   377   000009                     	ds	1
   378   00000A                     MensajeLCD_Var@i:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x9
   382   00000A                     	ds	2
   383   00000C                     TransmitirDatos@Ent1:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0xB
   387   00000C                     	ds	2
   388   00000E                     TransmitirDatos@Ent2:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0xD
   392   00000E                     	ds	2
   393   000010                     ??_TransmitirDatos:
   394                           
   395                           ; 1 bytes @ 0xF
   396   000010                     	ds	2
   397   000012                     TransmitirDatos@n:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x11
   401   000012                     	ds	2
   402   000014                     TransmitirDatos@Simb:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x13
   406   000014                     	ds	2
   407   000016                     TransmitirDatos@TemperaturaC:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x15
   411   000016                     	ds	2
   412   000018                     ??_main:
   413                           
   414                           ; 1 bytes @ 0x17
   415   000018                     	ds	2
   416                           
   417 ;;
   418 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   419 ;;
   420 ;; *************** function _main *****************
   421 ;; Defined at:
   422 ;;		line 36 in file "Lab5.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   436 ;;      Params:         0       0       0       0       0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0       0       0       0       0
   438 ;;      Temps:          2       0       0       0       0       0       0       0       0
   439 ;;      Totals:         2       0       0       0       0       0       0       0       0
   440 ;;Total ram usage:        2 bytes
   441 ;; Hardware stack levels required when called: 7
   442 ;; This function calls:
   443 ;;		_BorraLCD
   444 ;;		_ColorRGB
   445 ;;		_ConfiguraLCD
   446 ;;		_Conversion
   447 ;;		_DireccionaLCD
   448 ;;		_EscribeLCD_c
   449 ;;		_InicializaLCD
   450 ;;		_LeerDHT11
   451 ;;		_MensajeLCD_Var
   452 ;;		_ReadData_EEPROM
   453 ;;		_SaveData_EEPROM
   454 ;;		_TransmitirDatos
   455 ;;		___lbdiv
   456 ;;		___lbmod
   457 ;; This function is called by:
   458 ;;		Startup code after reset
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text0
   463   000AC0                     __ptext0:
   464                           	callstack 0
   465   000AC0                     _main:
   466                           	callstack 24
   467                           
   468                           ;Lab5.c: 39: OSCCON = 0b01110000;
   469                           
   470                           ;incstack = 0
   471   000AC0  0E70               	movlw	112
   472   000AC2  6ED3               	movwf	211,c	;volatile
   473                           
   474                           ;Lab5.c: 40: _delay((unsigned long)((10)*(8000000/4000.0)));
   475   000AC4  0E1A               	movlw	26
   476   000AC6  6E18               	movwf	??_main^0,c
   477   000AC8  0EF8               	movlw	248
   478   000ACA                     u1067:
   479   000ACA  2EE8               	decfsz	wreg,f,c
   480   000ACC  D7FE               	bra	u1067
   481   000ACE  2E18               	decfsz	??_main^0,f,c
   482   000AD0  D7FC               	bra	u1067
   483   000AD2  D000               	nop2	
   484                           
   485                           ;Lab5.c: 41: TXSTA = 0b00100000;
   486   000AD4  0E20               	movlw	32
   487   000AD6  6EAC               	movwf	172,c	;volatile
   488                           
   489                           ;Lab5.c: 42: RCSTA = 0b10010000;
   490   000AD8  0E90               	movlw	144
   491   000ADA  6EAB               	movwf	171,c	;volatile
   492                           
   493                           ;Lab5.c: 43: BAUDCON = 0b00000000;
   494   000ADC  0E00               	movlw	0
   495   000ADE  6EB8               	movwf	184,c	;volatile
   496                           
   497                           ;Lab5.c: 45: SPBRG = 12;
   498   000AE0  0E0C               	movlw	12
   499   000AE2  6EAF               	movwf	175,c	;volatile
   500                           
   501                           ;Lab5.c: 47: ADCON0 = 0b00000001;
   502   000AE4  0E01               	movlw	1
   503   000AE6  6EC2               	movwf	194,c	;volatile
   504                           
   505                           ;Lab5.c: 48: ADCON1 = 13;
   506   000AE8  0E0D               	movlw	13
   507   000AEA  6EC1               	movwf	193,c	;volatile
   508                           
   509                           ;Lab5.c: 49: ADCON2 = 0b10001000;
   510   000AEC  0E88               	movlw	136
   511   000AEE  6EC0               	movwf	192,c	;volatile
   512                           
   513                           ;Lab5.c: 52: TRISB = 0;
   514   000AF0  0E00               	movlw	0
   515   000AF2  6E93               	movwf	147,c	;volatile
   516                           
   517                           ;Lab5.c: 53: TRISD = 0;
   518   000AF4  0E00               	movlw	0
   519   000AF6  6E95               	movwf	149,c	;volatile
   520                           
   521                           ;Lab5.c: 54: TRISA = 0b00000001;
   522   000AF8  0E01               	movlw	1
   523   000AFA  6E92               	movwf	146,c	;volatile
   524                           
   525                           ;Lab5.c: 55: USBEN = 0;
   526   000AFC  966D               	bcf	3949,3,c	;volatile
   527                           
   528                           ;Lab5.c: 56: UTRDIS = 1;
   529   000AFE  866F               	bsf	3951,3,c	;volatile
   530                           
   531                           ;Lab5.c: 57: TRISC = 0b11110110;
   532   000B00  0EF6               	movlw	246
   533   000B02  6E94               	movwf	148,c	;volatile
   534                           
   535                           ;Lab5.c: 58: RBPU = 0;
   536   000B04  9EF1               	bcf	4081,7,c	;volatile
   537                           
   538                           ;Lab5.c: 59: LATC2 = 0;
   539   000B06  948B               	bcf	3979,2,c	;volatile
   540                           
   541                           ;Lab5.c: 60: Temperatura_EEPROM = ReadData_EEPROM(0);
   542   000B08  0E00               	movlw	0
   543   000B0A  6E04               	movwf	(ReadData_EEPROM@dir+1)^0,c
   544   000B0C  0E00               	movlw	0
   545   000B0E  6E03               	movwf	ReadData_EEPROM@dir^0,c
   546   000B10  EC3D  F009         	call	_ReadData_EEPROM	;wreg free
   547   000B14  6E1E               	movwf	_Temperatura_EEPROM^0,c
   548                           
   549                           ;Lab5.c: 62: ConfiguraLCD(4);
   550   000B16  0E04               	movlw	4
   551   000B18  EC07  F009         	call	_ConfiguraLCD
   552                           
   553                           ;Lab5.c: 63: InicializaLCD();
   554   000B1C  ECC5  F006         	call	_InicializaLCD	;wreg free
   555                           
   556                           ;Lab5.c: 66: T0CON=0b10000011;
   557   000B20  0E83               	movlw	131
   558   000B22  6ED5               	movwf	213,c	;volatile
   559                           
   560                           ;Lab5.c: 67: TMR0IF=0;
   561   000B24  94F2               	bcf	4082,2,c	;volatile
   562                           
   563                           ;Lab5.c: 68: TMR0=3036;
   564   000B26  0E0B               	movlw	11
   565   000B28  6ED7               	movwf	215,c	;volatile
   566   000B2A  0EDC               	movlw	220
   567   000B2C  6ED6               	movwf	214,c	;volatile
   568                           
   569                           ;Lab5.c: 69: TMR0IE=1;
   570   000B2E  8AF2               	bsf	4082,5,c	;volatile
   571                           
   572                           ;Lab5.c: 70: GIE=1;
   573   000B30  8EF2               	bsf	4082,7,c	;volatile
   574                           
   575                           ;Lab5.c: 71: TMR0ON=1;
   576   000B32  8ED5               	bsf	4053,7,c	;volatile
   577                           
   578                           ;Lab5.c: 74: BorraLCD();
   579   000B34  EC29  F009         	call	_BorraLCD	;wreg free
   580                           
   581                           ;Lab5.c: 76: if (Temperatura_EEPROM != 0xFF) {
   582   000B38  281E               	incf	_Temperatura_EEPROM^0,w,c
   583   000B3A  B4D8               	btfsc	status,2,c
   584   000B3C  D028               	goto	l2004
   585                           
   586                           ;Lab5.c: 77: MensajeLCD_Var("Ultima temp:");
   587   000B3E  0E0E               	movlw	low STR_1
   588   000B40  6E08               	movwf	MensajeLCD_Var@a^0,c
   589   000B42  ECF6  F007         	call	_MensajeLCD_Var	;wreg free
   590                           
   591                           ;Lab5.c: 78: DireccionaLCD(192);
   592   000B46  0EC0               	movlw	192
   593   000B48  EC1E  F009         	call	_DireccionaLCD
   594                           
   595                           ;Lab5.c: 79: EscribeLCD_c(Temperatura_EEPROM / 10 + 48);
   596   000B4C  0E0A               	movlw	10
   597   000B4E  6E03               	movwf	___lbdiv@divisor^0,c
   598   000B50  501E               	movf	_Temperatura_EEPROM^0,w,c
   599   000B52  EC85  F008         	call	___lbdiv
   600   000B56  0F30               	addlw	48
   601   000B58  EC13  F009         	call	_EscribeLCD_c
   602                           
   603                           ;Lab5.c: 80: EscribeLCD_c(Temperatura_EEPROM % 10 + 48);
   604   000B5C  0E0A               	movlw	10
   605   000B5E  6E03               	movwf	___lbmod@divisor^0,c
   606   000B60  501E               	movf	_Temperatura_EEPROM^0,w,c
   607   000B62  ECB8  F008         	call	___lbmod
   608   000B66  0F30               	addlw	48
   609   000B68  EC13  F009         	call	_EscribeLCD_c
   610                           
   611                           ;Lab5.c: 81: EscribeLCD_c('C');
   612   000B6C  0E43               	movlw	67
   613   000B6E  EC13  F009         	call	_EscribeLCD_c
   614                           
   615                           ;Lab5.c: 82: _delay((unsigned long)((2000)*(8000000/4000.0)));
   616   000B72  0E15               	movlw	21
   617   000B74  6E19               	movwf	(??_main+1)^0,c
   618   000B76  0E4B               	movlw	75
   619   000B78  6E18               	movwf	??_main^0,c
   620   000B7A  0EBE               	movlw	190
   621   000B7C                     u1077:
   622   000B7C  2EE8               	decfsz	wreg,f,c
   623   000B7E  D7FE               	bra	u1077
   624   000B80  2E18               	decfsz	??_main^0,f,c
   625   000B82  D7FC               	bra	u1077
   626   000B84  2E19               	decfsz	(??_main+1)^0,f,c
   627   000B86  D7FA               	bra	u1077
   628   000B88  D000               	nop2	
   629                           
   630                           ;Lab5.c: 83: BorraLCD();
   631   000B8A  EC29  F009         	call	_BorraLCD	;wreg free
   632   000B8E                     l2004:
   633                           
   634                           ;Lab5.c: 84: };Lab5.c: 86: MensajeLCD_Var("Iniciando");
   635   000B8E  0E1B               	movlw	low STR_2
   636   000B90  6E08               	movwf	MensajeLCD_Var@a^0,c
   637   000B92  ECF6  F007         	call	_MensajeLCD_Var	;wreg free
   638                           
   639                           ;Lab5.c: 87: _delay((unsigned long)((500)*(8000000/4000.0)));
   640   000B96  0E06               	movlw	6
   641   000B98  6E19               	movwf	(??_main+1)^0,c
   642   000B9A  0E13               	movlw	19
   643   000B9C  6E18               	movwf	??_main^0,c
   644   000B9E  0EAE               	movlw	174
   645   000BA0                     u1087:
   646   000BA0  2EE8               	decfsz	wreg,f,c
   647   000BA2  D7FE               	bra	u1087
   648   000BA4  2E18               	decfsz	??_main^0,f,c
   649   000BA6  D7FC               	bra	u1087
   650   000BA8  2E19               	decfsz	(??_main+1)^0,f,c
   651   000BAA  D7FA               	bra	u1087
   652                           
   653                           ;Lab5.c: 88: EscribeLCD_c(46);
   654   000BAC  0E2E               	movlw	46
   655   000BAE  EC13  F009         	call	_EscribeLCD_c
   656                           
   657                           ;Lab5.c: 89: _delay((unsigned long)((500)*(8000000/4000.0)));
   658   000BB2  0E06               	movlw	6
   659   000BB4  6E19               	movwf	(??_main+1)^0,c
   660   000BB6  0E13               	movlw	19
   661   000BB8  6E18               	movwf	??_main^0,c
   662   000BBA  0EAE               	movlw	174
   663   000BBC                     u1097:
   664   000BBC  2EE8               	decfsz	wreg,f,c
   665   000BBE  D7FE               	bra	u1097
   666   000BC0  2E18               	decfsz	??_main^0,f,c
   667   000BC2  D7FC               	bra	u1097
   668   000BC4  2E19               	decfsz	(??_main+1)^0,f,c
   669   000BC6  D7FA               	bra	u1097
   670                           
   671                           ;Lab5.c: 90: EscribeLCD_c(46);
   672   000BC8  0E2E               	movlw	46
   673   000BCA  EC13  F009         	call	_EscribeLCD_c
   674                           
   675                           ;Lab5.c: 91: _delay((unsigned long)((500)*(8000000/4000.0)));
   676   000BCE  0E06               	movlw	6
   677   000BD0  6E19               	movwf	(??_main+1)^0,c
   678   000BD2  0E13               	movlw	19
   679   000BD4  6E18               	movwf	??_main^0,c
   680   000BD6  0EAE               	movlw	174
   681   000BD8                     u1107:
   682   000BD8  2EE8               	decfsz	wreg,f,c
   683   000BDA  D7FE               	bra	u1107
   684   000BDC  2E18               	decfsz	??_main^0,f,c
   685   000BDE  D7FC               	bra	u1107
   686   000BE0  2E19               	decfsz	(??_main+1)^0,f,c
   687   000BE2  D7FA               	bra	u1107
   688                           
   689                           ;Lab5.c: 92: EscribeLCD_c(46);
   690   000BE4  0E2E               	movlw	46
   691   000BE6  EC13  F009         	call	_EscribeLCD_c
   692                           
   693                           ;Lab5.c: 93: _delay((unsigned long)((500)*(8000000/4000.0)));
   694   000BEA  0E06               	movlw	6
   695   000BEC  6E19               	movwf	(??_main+1)^0,c
   696   000BEE  0E13               	movlw	19
   697   000BF0  6E18               	movwf	??_main^0,c
   698   000BF2  0EAE               	movlw	174
   699   000BF4                     u1117:
   700   000BF4  2EE8               	decfsz	wreg,f,c
   701   000BF6  D7FE               	bra	u1117
   702   000BF8  2E18               	decfsz	??_main^0,f,c
   703   000BFA  D7FC               	bra	u1117
   704   000BFC  2E19               	decfsz	(??_main+1)^0,f,c
   705   000BFE  D7FA               	bra	u1117
   706                           
   707                           ;Lab5.c: 94: BorraLCD();
   708   000C00  EC29  F009         	call	_BorraLCD	;wreg free
   709   000C04                     l2016:
   710                           
   711                           ;Lab5.c: 98: _delay((unsigned long)((500)*(8000000/4000.0)));
   712   000C04  0E06               	movlw	6
   713   000C06  6E19               	movwf	(??_main+1)^0,c
   714   000C08  0E13               	movlw	19
   715   000C0A  6E18               	movwf	??_main^0,c
   716   000C0C  0EAE               	movlw	174
   717   000C0E                     u1127:
   718   000C0E  2EE8               	decfsz	wreg,f,c
   719   000C10  D7FE               	bra	u1127
   720   000C12  2E18               	decfsz	??_main^0,f,c
   721   000C14  D7FC               	bra	u1127
   722   000C16  2E19               	decfsz	(??_main+1)^0,f,c
   723   000C18  D7FA               	bra	u1127
   724                           
   725                           ;Lab5.c: 100: _delay((unsigned long)((500)*(8000000/4000.0)));
   726   000C1A  0E06               	movlw	6
   727   000C1C  6E19               	movwf	(??_main+1)^0,c
   728   000C1E  0E13               	movlw	19
   729   000C20  6E18               	movwf	??_main^0,c
   730   000C22  0EAE               	movlw	174
   731   000C24                     u1137:
   732   000C24  2EE8               	decfsz	wreg,f,c
   733   000C26  D7FE               	bra	u1137
   734   000C28  2E18               	decfsz	??_main^0,f,c
   735   000C2A  D7FC               	bra	u1137
   736   000C2C  2E19               	decfsz	(??_main+1)^0,f,c
   737   000C2E  D7FA               	bra	u1137
   738                           
   739                           ;Lab5.c: 102: LeerDHT11();
   740   000C30  EC42  F008         	call	_LeerDHT11	;wreg free
   741                           
   742                           ;Lab5.c: 104: SaveData_EEPROM(0, Temperatura);
   743   000C34  0E00               	movlw	0
   744   000C36  6E04               	movwf	(SaveData_EEPROM@dir+1)^0,c
   745   000C38  0E00               	movlw	0
   746   000C3A  6E03               	movwf	SaveData_EEPROM@dir^0,c
   747   000C3C  C021  F005         	movff	_Temperatura,SaveData_EEPROM@dato
   748   000C40  ECF4  F008         	call	_SaveData_EEPROM	;wreg free
   749                           
   750                           ;Lab5.c: 105: ColorRGB(Temperatura);
   751   000C44  C021  F003         	movff	_Temperatura,ColorRGB@val
   752   000C48  6A04               	clrf	(ColorRGB@val+1)^0,c
   753   000C4A  EC51  F006         	call	_ColorRGB	;wreg free
   754                           
   755                           ;Lab5.c: 108: if(!RC1) TransmitirDatos(RC4, RC5);
   756   000C4E  B282               	btfsc	3970,1,c	;volatile
   757   000C50  D011               	goto	l2028
   758   000C52  A882               	btfss	3970,4,c	;volatile
   759   000C54  D002               	goto	u1000
   760   000C56  0E01               	movlw	1
   761   000C58  D001               	goto	u1010
   762   000C5A                     u1000:
   763   000C5A  0E00               	movlw	0
   764   000C5C                     u1010:
   765   000C5C  6E0C               	movwf	TransmitirDatos@Ent1^0,c
   766   000C5E  6A0D               	clrf	(TransmitirDatos@Ent1+1)^0,c
   767   000C60  AA82               	btfss	3970,5,c	;volatile
   768   000C62  D002               	goto	u1020
   769   000C64  0E01               	movlw	1
   770   000C66  D001               	goto	u1030
   771   000C68                     u1020:
   772   000C68  0E00               	movlw	0
   773   000C6A                     u1030:
   774   000C6A  6E0E               	movwf	TransmitirDatos@Ent2^0,c
   775   000C6C  6A0F               	clrf	(TransmitirDatos@Ent2+1)^0,c
   776   000C6E  EC18  F004         	call	_TransmitirDatos	;wreg free
   777   000C72  D00A               	goto	l2030
   778   000C74                     l2028:
   779                           
   780                           ;Lab5.c: 109: else TransmitirDatos(A, B);
   781   000C74  C01C  F00C         	movff	_A,TransmitirDatos@Ent1
   782   000C78  C01D  F00D         	movff	_A+1,TransmitirDatos@Ent1+1
   783   000C7C  C01A  F00E         	movff	_B,TransmitirDatos@Ent2
   784   000C80  C01B  F00F         	movff	_B+1,TransmitirDatos@Ent2+1
   785   000C84  EC18  F004         	call	_TransmitirDatos	;wreg free
   786   000C88                     l2030:
   787                           
   788                           ;Lab5.c: 110: Conversion(0);
   789   000C88  0E00               	movlw	0
   790   000C8A  EC33  F009         	call	_Conversion
   791                           
   792                           ;Lab5.c: 111: RB0 = (ADRES <= 511) ? 0 : 1;
   793   000C8E  0E00               	movlw	0
   794   000C90  5CC3               	subwf	195,w,c	;volatile
   795   000C92  0E02               	movlw	2
   796   000C94  58C4               	subwfb	196,w,c	;volatile
   797   000C96  A0D8               	btfss	status,0,c
   798   000C98  D002               	goto	u1040
   799   000C9A  8081               	bsf	3969,0,c	;volatile
   800   000C9C  D7B3               	goto	l2016
   801   000C9E                     u1040:
   802   000C9E  9081               	bcf	3969,0,c	;volatile
   803   000CA0  D7B1               	goto	l2016
   804   000CA2                     __end_of_main:
   805                           	callstack 0
   806                           
   807 ;; *************** function _TransmitirDatos *****************
   808 ;; Defined at:
   809 ;;		line 178 in file "Lab5.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  Ent1            2   11[COMRAM] unsigned int 
   812 ;;  Ent2            2   13[COMRAM] unsigned int 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  TemperaturaC    2   21[COMRAM] unsigned int 
   815 ;;  Simb            2   19[COMRAM] unsigned int 
   816 ;;  n               2   17[COMRAM] unsigned int 
   817 ;;  HumedadC        2    0        unsigned int 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   827 ;;      Params:         4       0       0       0       0       0       0       0       0
   828 ;;      Locals:         6       0       0       0       0       0       0       0       0
   829 ;;      Temps:          2       0       0       0       0       0       0       0       0
   830 ;;      Totals:        12       0       0       0       0       0       0       0       0
   831 ;;Total ram usage:       12 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; Hardware stack levels required when called: 6
   834 ;; This function calls:
   835 ;;		_BorraLCD
   836 ;;		_DireccionaLCD
   837 ;;		_EscribeLCD_c
   838 ;;		_MensajeLCD_Var
   839 ;;		_Transmitir
   840 ;;		___awdiv
   841 ;;		___lbdiv
   842 ;;		___lbmod
   843 ;;		___lwdiv
   844 ;;		___lwmod
   845 ;;		___wmul
   846 ;; This function is called by:
   847 ;;		_main
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           	psect	text1
   852   000830                     __ptext1:
   853                           	callstack 0
   854   000830                     _TransmitirDatos:
   855                           	callstack 24
   856                           
   857                           ;Lab5.c: 179: unsigned int n = Ent1 * 10 + Ent2, TemperaturaC = Temperatura, HumedadC = 
      +                          Humedad;
   858                           
   859                           ;incstack = 0
   860   000830  C00C  F003         	movff	TransmitirDatos@Ent1,___wmul@multiplier
   861   000834  C00D  F004         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
   862   000838  0E00               	movlw	0
   863   00083A  6E06               	movwf	(___wmul@multiplicand+1)^0,c
   864   00083C  0E0A               	movlw	10
   865   00083E  6E05               	movwf	___wmul@multiplicand^0,c
   866   000840  ECE1  F008         	call	___wmul	;wreg free
   867   000844  500E               	movf	TransmitirDatos@Ent2^0,w,c
   868   000846  2403               	addwf	?___wmul^0,w,c
   869   000848  6E12               	movwf	TransmitirDatos@n^0,c
   870   00084A  500F               	movf	(TransmitirDatos@Ent2+1)^0,w,c
   871   00084C  2004               	addwfc	(?___wmul+1)^0,w,c
   872   00084E  6E13               	movwf	(TransmitirDatos@n+1)^0,c
   873   000850  C021  F016         	movff	_Temperatura,TransmitirDatos@TemperaturaC
   874   000854  6A17               	clrf	(TransmitirDatos@TemperaturaC+1)^0,c
   875                           
   876                           ;Lab5.c: 180: unsigned int Simb = 67;
   877   000856  0E00               	movlw	0
   878   000858  6E15               	movwf	(TransmitirDatos@Simb+1)^0,c
   879   00085A  0E43               	movlw	67
   880   00085C  6E14               	movwf	TransmitirDatos@Simb^0,c
   881                           
   882                           ;Lab5.c: 181: BorraLCD();
   883   00085E  EC29  F009         	call	_BorraLCD	;wreg free
   884                           
   885                           ;Lab5.c: 182: switch (n) {
   886   000862  D03E               	goto	l1874
   887   000864                     l255:
   888                           
   889                           ;Lab5.c: 184: TemperaturaC = Temperatura;
   890   000864  C021  F016         	movff	_Temperatura,TransmitirDatos@TemperaturaC
   891   000868  6A17               	clrf	(TransmitirDatos@TemperaturaC+1)^0,c
   892                           
   893                           ;Lab5.c: 185: Simb = 67;
   894   00086A  0E00               	movlw	0
   895   00086C  6E15               	movwf	(TransmitirDatos@Simb+1)^0,c
   896   00086E  0E43               	movlw	67
   897   000870  D035               	goto	L3
   898   000872                     l1860:
   899                           
   900                           ;Lab5.c: 188: TemperaturaC = Temperatura + 273;
   901   000872  0E11               	movlw	17
   902   000874  2421               	addwf	_Temperatura^0,w,c
   903   000876  6E16               	movwf	TransmitirDatos@TemperaturaC^0,c
   904   000878  6A17               	clrf	(TransmitirDatos@TemperaturaC+1)^0,c
   905   00087A  0E01               	movlw	1
   906   00087C  2217               	addwfc	(TransmitirDatos@TemperaturaC+1)^0,f,c
   907                           
   908                           ;Lab5.c: 189: Simb = 75;
   909   00087E  0E00               	movlw	0
   910   000880  6E15               	movwf	(TransmitirDatos@Simb+1)^0,c
   911   000882  0E4B               	movlw	75
   912   000884  D02B               	goto	L3
   913   000886                     l1864:
   914                           
   915                           ;Lab5.c: 192: TemperaturaC = Temperatura * 9 / 5 + 492;
   916   000886  5021               	movf	_Temperatura^0,w,c
   917   000888  0D09               	mullw	9
   918   00088A  CFF3 F003          	movff	prodl,___awdiv@dividend
   919   00088E  CFF4 F004          	movff	prodh,___awdiv@dividend+1
   920   000892  0E00               	movlw	0
   921   000894  6E06               	movwf	(___awdiv@divisor+1)^0,c
   922   000896  0E05               	movlw	5
   923   000898  6E05               	movwf	___awdiv@divisor^0,c
   924   00089A  EC58  F007         	call	___awdiv	;wreg free
   925   00089E  0EEC               	movlw	236
   926   0008A0  2403               	addwf	?___awdiv^0,w,c
   927   0008A2  6E16               	movwf	TransmitirDatos@TemperaturaC^0,c
   928   0008A4  0E01               	movlw	1
   929   0008A6  2004               	addwfc	(?___awdiv+1)^0,w,c
   930   0008A8  6E17               	movwf	(TransmitirDatos@TemperaturaC+1)^0,c
   931                           
   932                           ;Lab5.c: 193: Simb = 82;
   933   0008AA  0E00               	movlw	0
   934   0008AC  6E15               	movwf	(TransmitirDatos@Simb+1)^0,c
   935   0008AE  0E52               	movlw	82
   936   0008B0  D015               	goto	L3
   937   0008B2                     l1868:
   938                           
   939                           ;Lab5.c: 196: TemperaturaC = Temperatura * 9 / 5 + 32;
   940   0008B2  5021               	movf	_Temperatura^0,w,c
   941   0008B4  0D09               	mullw	9
   942   0008B6  CFF3 F003          	movff	prodl,___awdiv@dividend
   943   0008BA  CFF4 F004          	movff	prodh,___awdiv@dividend+1
   944   0008BE  0E00               	movlw	0
   945   0008C0  6E06               	movwf	(___awdiv@divisor+1)^0,c
   946   0008C2  0E05               	movlw	5
   947   0008C4  6E05               	movwf	___awdiv@divisor^0,c
   948   0008C6  EC58  F007         	call	___awdiv	;wreg free
   949   0008CA  0E20               	movlw	32
   950   0008CC  2403               	addwf	?___awdiv^0,w,c
   951   0008CE  6E16               	movwf	TransmitirDatos@TemperaturaC^0,c
   952   0008D0  0E00               	movlw	0
   953   0008D2  2004               	addwfc	(?___awdiv+1)^0,w,c
   954   0008D4  6E17               	movwf	(TransmitirDatos@TemperaturaC+1)^0,c
   955                           
   956                           ;Lab5.c: 197: Simb = 70;
   957   0008D6  0E00               	movlw	0
   958   0008D8  6E15               	movwf	(TransmitirDatos@Simb+1)^0,c
   959   0008DA  0E46               	movlw	70
   960   0008DC                     L3:
   961   0008DC  6E14               	movwf	TransmitirDatos@Simb^0,c
   962                           
   963                           ;Lab5.c: 198: break;
   964   0008DE  D015               	goto	l1876
   965   0008E0                     l1874:
   966   0008E0  C012  F010         	movff	TransmitirDatos@n,??_TransmitirDatos
   967   0008E4  C013  F011         	movff	TransmitirDatos@n+1,??_TransmitirDatos+1
   968                           
   969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   970                           ; Switch size 1, requested type "simple"
   971                           ; Number of cases is 1, Range of values is 0 to 0
   972                           ; switch strategies available:
   973                           ; Name         Instructions Cycles
   974                           ; simple_byte            4     3 (average)
   975                           ;	Chosen strategy is simple_byte
   976   0008E8  5011               	movf	(??_TransmitirDatos+1)^0,w,c
   977   0008EA  0A00               	xorlw	0	; case 0
   978   0008EC  A4D8               	btfss	status,2,c
   979   0008EE  D00D               	goto	l1876
   980                           
   981                           ; Switch size 1, requested type "simple"
   982                           ; Number of cases is 4, Range of values is 0 to 11
   983                           ; switch strategies available:
   984                           ; Name         Instructions Cycles
   985                           ; simple_byte           13     7 (average)
   986                           ;	Chosen strategy is simple_byte
   987   0008F0  5010               	movf	??_TransmitirDatos^0,w,c
   988   0008F2  0A00               	xorlw	0	; case 0
   989   0008F4  B4D8               	btfsc	status,2,c
   990   0008F6  D7B6               	goto	l255
   991   0008F8  0A01               	xorlw	1	; case 1
   992   0008FA  B4D8               	btfsc	status,2,c
   993   0008FC  D7BA               	goto	l1860
   994   0008FE  0A0B               	xorlw	11	; case 10
   995   000900  B4D8               	btfsc	status,2,c
   996   000902  D7C1               	goto	l1864
   997   000904  0A01               	xorlw	1	; case 11
   998   000906  B4D8               	btfsc	status,2,c
   999   000908  D7D4               	goto	l1868
  1000   00090A                     l1876:
  1001                           
  1002                           ;Lab5.c: 200: Transmitir('T');
  1003   00090A  0E54               	movlw	84
  1004   00090C  EC4B  F009         	call	_Transmitir
  1005                           
  1006                           ;Lab5.c: 201: Transmitir('e');
  1007   000910  0E65               	movlw	101
  1008   000912  EC4B  F009         	call	_Transmitir
  1009                           
  1010                           ;Lab5.c: 202: Transmitir('m');
  1011   000916  0E6D               	movlw	109
  1012   000918  EC4B  F009         	call	_Transmitir
  1013                           
  1014                           ;Lab5.c: 203: Transmitir('p');
  1015   00091C  0E70               	movlw	112
  1016   00091E  EC4B  F009         	call	_Transmitir
  1017                           
  1018                           ;Lab5.c: 204: Transmitir(':');
  1019   000922  0E3A               	movlw	58
  1020   000924  EC4B  F009         	call	_Transmitir
  1021                           
  1022                           ;Lab5.c: 205: Transmitir(' ');
  1023   000928  0E20               	movlw	32
  1024   00092A  EC4B  F009         	call	_Transmitir
  1025                           
  1026                           ;Lab5.c: 207: MensajeLCD_Var("Temperatura:");
  1027   00092E  0E01               	movlw	low STR_3
  1028   000930  6E08               	movwf	MensajeLCD_Var@a^0,c
  1029   000932  ECF6  F007         	call	_MensajeLCD_Var	;wreg free
  1030                           
  1031                           ;Lab5.c: 208: if (TemperaturaC / 100 > 0) {
  1032   000936  C016  F003         	movff	TransmitirDatos@TemperaturaC,___lwdiv@dividend
  1033   00093A  C017  F004         	movff	TransmitirDatos@TemperaturaC+1,___lwdiv@dividend+1
  1034   00093E  0E00               	movlw	0
  1035   000940  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1036   000942  0E64               	movlw	100
  1037   000944  6E05               	movwf	___lwdiv@divisor^0,c
  1038   000946  ECCD  F007         	call	___lwdiv	;wreg free
  1039   00094A  5003               	movf	?___lwdiv^0,w,c
  1040   00094C  1004               	iorwf	(?___lwdiv+1)^0,w,c
  1041   00094E  B4D8               	btfsc	status,2,c
  1042   000950  D02A               	goto	l260
  1043                           
  1044                           ;Lab5.c: 209: Transmitir(TemperaturaC / 100 + 48);
  1045   000952  C016  F003         	movff	TransmitirDatos@TemperaturaC,___lwdiv@dividend
  1046   000956  C017  F004         	movff	TransmitirDatos@TemperaturaC+1,___lwdiv@dividend+1
  1047   00095A  0E00               	movlw	0
  1048   00095C  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1049   00095E  0E64               	movlw	100
  1050   000960  6E05               	movwf	___lwdiv@divisor^0,c
  1051   000962  ECCD  F007         	call	___lwdiv	;wreg free
  1052   000966  5003               	movf	?___lwdiv^0,w,c
  1053   000968  0F30               	addlw	48
  1054   00096A  EC4B  F009         	call	_Transmitir
  1055                           
  1056                           ;Lab5.c: 210: EscribeLCD_c(TemperaturaC / 100 + 48);
  1057   00096E  C016  F003         	movff	TransmitirDatos@TemperaturaC,___lwdiv@dividend
  1058   000972  C017  F004         	movff	TransmitirDatos@TemperaturaC+1,___lwdiv@dividend+1
  1059   000976  0E00               	movlw	0
  1060   000978  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1061   00097A  0E64               	movlw	100
  1062   00097C  6E05               	movwf	___lwdiv@divisor^0,c
  1063   00097E  ECCD  F007         	call	___lwdiv	;wreg free
  1064   000982  5003               	movf	?___lwdiv^0,w,c
  1065   000984  0F30               	addlw	48
  1066   000986  EC13  F009         	call	_EscribeLCD_c
  1067                           
  1068                           ;Lab5.c: 211: TemperaturaC = TemperaturaC % 100;
  1069   00098A  C016  F003         	movff	TransmitirDatos@TemperaturaC,___lwmod@dividend
  1070   00098E  C017  F004         	movff	TransmitirDatos@TemperaturaC+1,___lwmod@dividend+1
  1071   000992  0E00               	movlw	0
  1072   000994  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1073   000996  0E64               	movlw	100
  1074   000998  6E05               	movwf	___lwmod@divisor^0,c
  1075   00099A  EC64  F008         	call	___lwmod	;wreg free
  1076   00099E  C003  F016         	movff	?___lwmod,TransmitirDatos@TemperaturaC
  1077   0009A2  C004  F017         	movff	?___lwmod+1,TransmitirDatos@TemperaturaC+1
  1078   0009A6                     l260:
  1079                           
  1080                           ;Lab5.c: 212: };Lab5.c: 213: Transmitir(TemperaturaC / 10 + 48);
  1081   0009A6  C016  F003         	movff	TransmitirDatos@TemperaturaC,___lwdiv@dividend
  1082   0009AA  C017  F004         	movff	TransmitirDatos@TemperaturaC+1,___lwdiv@dividend+1
  1083   0009AE  0E00               	movlw	0
  1084   0009B0  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1085   0009B2  0E0A               	movlw	10
  1086   0009B4  6E05               	movwf	___lwdiv@divisor^0,c
  1087   0009B6  ECCD  F007         	call	___lwdiv	;wreg free
  1088   0009BA  5003               	movf	?___lwdiv^0,w,c
  1089   0009BC  0F30               	addlw	48
  1090   0009BE  EC4B  F009         	call	_Transmitir
  1091                           
  1092                           ;Lab5.c: 214: Transmitir(TemperaturaC % 10 + 48);
  1093   0009C2  C016  F003         	movff	TransmitirDatos@TemperaturaC,___lwmod@dividend
  1094   0009C6  C017  F004         	movff	TransmitirDatos@TemperaturaC+1,___lwmod@dividend+1
  1095   0009CA  0E00               	movlw	0
  1096   0009CC  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1097   0009CE  0E0A               	movlw	10
  1098   0009D0  6E05               	movwf	___lwmod@divisor^0,c
  1099   0009D2  EC64  F008         	call	___lwmod	;wreg free
  1100   0009D6  5003               	movf	?___lwmod^0,w,c
  1101   0009D8  0F30               	addlw	48
  1102   0009DA  EC4B  F009         	call	_Transmitir
  1103                           
  1104                           ;Lab5.c: 215: Transmitir(167);
  1105   0009DE  0EA7               	movlw	167
  1106   0009E0  EC4B  F009         	call	_Transmitir
  1107                           
  1108                           ;Lab5.c: 216: Transmitir(Simb);
  1109   0009E4  5014               	movf	TransmitirDatos@Simb^0,w,c
  1110   0009E6  EC4B  F009         	call	_Transmitir
  1111                           
  1112                           ;Lab5.c: 217: Transmitir(' ');
  1113   0009EA  0E20               	movlw	32
  1114   0009EC  EC4B  F009         	call	_Transmitir
  1115                           
  1116                           ;Lab5.c: 218: Transmitir('\n');
  1117   0009F0  0E0A               	movlw	10
  1118   0009F2  EC4B  F009         	call	_Transmitir
  1119                           
  1120                           ;Lab5.c: 219: Transmitir('H');
  1121   0009F6  0E48               	movlw	72
  1122   0009F8  EC4B  F009         	call	_Transmitir
  1123                           
  1124                           ;Lab5.c: 220: Transmitir('u');
  1125   0009FC  0E75               	movlw	117
  1126   0009FE  EC4B  F009         	call	_Transmitir
  1127                           
  1128                           ;Lab5.c: 221: Transmitir('m');
  1129   000A02  0E6D               	movlw	109
  1130   000A04  EC4B  F009         	call	_Transmitir
  1131                           
  1132                           ;Lab5.c: 222: Transmitir(':');
  1133   000A08  0E3A               	movlw	58
  1134   000A0A  EC4B  F009         	call	_Transmitir
  1135                           
  1136                           ;Lab5.c: 223: Transmitir(' ');
  1137   000A0E  0E20               	movlw	32
  1138   000A10  EC4B  F009         	call	_Transmitir
  1139                           
  1140                           ;Lab5.c: 224: Transmitir(Humedad / 10 + 48);
  1141   000A14  0E0A               	movlw	10
  1142   000A16  6E03               	movwf	___lbdiv@divisor^0,c
  1143   000A18  5020               	movf	_Humedad^0,w,c
  1144   000A1A  EC85  F008         	call	___lbdiv
  1145   000A1E  0F30               	addlw	48
  1146   000A20  EC4B  F009         	call	_Transmitir
  1147                           
  1148                           ;Lab5.c: 225: Transmitir(Humedad % 10 + 48);
  1149   000A24  0E0A               	movlw	10
  1150   000A26  6E03               	movwf	___lbmod@divisor^0,c
  1151   000A28  5020               	movf	_Humedad^0,w,c
  1152   000A2A  ECB8  F008         	call	___lbmod
  1153   000A2E  0F30               	addlw	48
  1154   000A30  EC4B  F009         	call	_Transmitir
  1155                           
  1156                           ;Lab5.c: 226: Transmitir(' ');
  1157   000A34  0E20               	movlw	32
  1158   000A36  EC4B  F009         	call	_Transmitir
  1159                           
  1160                           ;Lab5.c: 227: Transmitir('%');
  1161   000A3A  0E25               	movlw	37
  1162   000A3C  EC4B  F009         	call	_Transmitir
  1163                           
  1164                           ;Lab5.c: 228: Transmitir('\n');
  1165   000A40  0E0A               	movlw	10
  1166   000A42  EC4B  F009         	call	_Transmitir
  1167                           
  1168                           ;Lab5.c: 229: Transmitir(' ');
  1169   000A46  0E20               	movlw	32
  1170   000A48  EC4B  F009         	call	_Transmitir
  1171                           
  1172                           ;Lab5.c: 237: EscribeLCD_c(TemperaturaC / 10 + 48);
  1173   000A4C  C016  F003         	movff	TransmitirDatos@TemperaturaC,___lwdiv@dividend
  1174   000A50  C017  F004         	movff	TransmitirDatos@TemperaturaC+1,___lwdiv@dividend+1
  1175   000A54  0E00               	movlw	0
  1176   000A56  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1177   000A58  0E0A               	movlw	10
  1178   000A5A  6E05               	movwf	___lwdiv@divisor^0,c
  1179   000A5C  ECCD  F007         	call	___lwdiv	;wreg free
  1180   000A60  5003               	movf	?___lwdiv^0,w,c
  1181   000A62  0F30               	addlw	48
  1182   000A64  EC13  F009         	call	_EscribeLCD_c
  1183                           
  1184                           ;Lab5.c: 238: EscribeLCD_c(TemperaturaC % 10 + 48);
  1185   000A68  C016  F003         	movff	TransmitirDatos@TemperaturaC,___lwmod@dividend
  1186   000A6C  C017  F004         	movff	TransmitirDatos@TemperaturaC+1,___lwmod@dividend+1
  1187   000A70  0E00               	movlw	0
  1188   000A72  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1189   000A74  0E0A               	movlw	10
  1190   000A76  6E05               	movwf	___lwmod@divisor^0,c
  1191   000A78  EC64  F008         	call	___lwmod	;wreg free
  1192   000A7C  5003               	movf	?___lwmod^0,w,c
  1193   000A7E  0F30               	addlw	48
  1194   000A80  EC13  F009         	call	_EscribeLCD_c
  1195                           
  1196                           ;Lab5.c: 239: EscribeLCD_c(Simb);
  1197   000A84  5014               	movf	TransmitirDatos@Simb^0,w,c
  1198   000A86  EC13  F009         	call	_EscribeLCD_c
  1199                           
  1200                           ;Lab5.c: 240: DireccionaLCD(192);
  1201   000A8A  0EC0               	movlw	192
  1202   000A8C  EC1E  F009         	call	_DireccionaLCD
  1203                           
  1204                           ;Lab5.c: 241: MensajeLCD_Var("Humedad:");
  1205   000A90  0E25               	movlw	low STR_4
  1206   000A92  6E08               	movwf	MensajeLCD_Var@a^0,c
  1207   000A94  ECF6  F007         	call	_MensajeLCD_Var	;wreg free
  1208                           
  1209                           ;Lab5.c: 242: EscribeLCD_c(Humedad / 10 + 48);
  1210   000A98  0E0A               	movlw	10
  1211   000A9A  6E03               	movwf	___lbdiv@divisor^0,c
  1212   000A9C  5020               	movf	_Humedad^0,w,c
  1213   000A9E  EC85  F008         	call	___lbdiv
  1214   000AA2  0F30               	addlw	48
  1215   000AA4  EC13  F009         	call	_EscribeLCD_c
  1216                           
  1217                           ;Lab5.c: 243: EscribeLCD_c(Humedad % 10 + 48);
  1218   000AA8  0E0A               	movlw	10
  1219   000AAA  6E03               	movwf	___lbmod@divisor^0,c
  1220   000AAC  5020               	movf	_Humedad^0,w,c
  1221   000AAE  ECB8  F008         	call	___lbmod
  1222   000AB2  0F30               	addlw	48
  1223   000AB4  EC13  F009         	call	_EscribeLCD_c
  1224                           
  1225                           ;Lab5.c: 244: EscribeLCD_c('%');
  1226   000AB8  0E25               	movlw	37
  1227   000ABA  EC13  F009         	call	_EscribeLCD_c
  1228   000ABE  0012               	return		;funcret
  1229   000AC0                     __end_of_TransmitirDatos:
  1230                           	callstack 0
  1231                           
  1232 ;; *************** function ___wmul *****************
  1233 ;; Defined at:
  1234 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  multiplier      2    2[COMRAM] unsigned int 
  1237 ;;  multiplicand    2    4[COMRAM] unsigned int 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  product         2    6[COMRAM] unsigned int 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  2    2[COMRAM] unsigned int 
  1242 ;; Registers used:
  1243 ;;		wreg, status,2, status,0, prodl, prodh
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1249 ;;      Params:         4       0       0       0       0       0       0       0       0
  1250 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1252 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1253 ;;Total ram usage:        6 bytes
  1254 ;; Hardware stack levels used: 1
  1255 ;; Hardware stack levels required when called: 2
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_TransmitirDatos
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text2
  1264   0011C2                     __ptext2:
  1265                           	callstack 0
  1266   0011C2                     ___wmul:
  1267                           	callstack 27
  1268                           
  1269                           ;incstack = 0
  1270   0011C2  5003               	movf	___wmul@multiplier^0,w,c
  1271   0011C4  0205               	mulwf	___wmul@multiplicand^0,c
  1272   0011C6  CFF3 F007          	movff	prodl,___wmul@product
  1273   0011CA  CFF4 F008          	movff	prodh,___wmul@product+1
  1274   0011CE  5003               	movf	___wmul@multiplier^0,w,c
  1275   0011D0  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  1276   0011D2  50F3               	movf	243,w,c
  1277   0011D4  2608               	addwf	(___wmul@product+1)^0,f,c
  1278   0011D6  5004               	movf	(___wmul@multiplier+1)^0,w,c
  1279   0011D8  0205               	mulwf	___wmul@multiplicand^0,c
  1280   0011DA  50F3               	movf	243,w,c
  1281   0011DC  2608               	addwf	(___wmul@product+1)^0,f,c
  1282   0011DE  C007  F003         	movff	___wmul@product,?___wmul
  1283   0011E2  C008  F004         	movff	___wmul@product+1,?___wmul+1
  1284   0011E6  0012               	return		;funcret
  1285   0011E8                     __end_of___wmul:
  1286                           	callstack 0
  1287                           
  1288 ;; *************** function ___lwmod *****************
  1289 ;; Defined at:
  1290 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  dividend        2    2[COMRAM] unsigned int 
  1293 ;;  divisor         2    4[COMRAM] unsigned int 
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;  counter         1    6[COMRAM] unsigned char 
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  2    2[COMRAM] unsigned int 
  1298 ;; Registers used:
  1299 ;;		wreg, status,2, status,0
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1305 ;;      Params:         4       0       0       0       0       0       0       0       0
  1306 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1308 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1309 ;;Total ram usage:        5 bytes
  1310 ;; Hardware stack levels used: 1
  1311 ;; Hardware stack levels required when called: 2
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_TransmitirDatos
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text3
  1320   0010C8                     __ptext3:
  1321                           	callstack 0
  1322   0010C8                     ___lwmod:
  1323                           	callstack 27
  1324                           
  1325                           ;incstack = 0
  1326   0010C8  5005               	movf	___lwmod@divisor^0,w,c
  1327   0010CA  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  1328   0010CC  B4D8               	btfsc	status,2,c
  1329   0010CE  D018               	goto	l800
  1330   0010D0  0E01               	movlw	1
  1331   0010D2  6E07               	movwf	___lwmod@counter^0,c
  1332   0010D4  D004               	goto	l1780
  1333   0010D6                     l1778:
  1334   0010D6  90D8               	bcf	status,0,c
  1335   0010D8  3605               	rlcf	___lwmod@divisor^0,f,c
  1336   0010DA  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  1337   0010DC  2A07               	incf	___lwmod@counter^0,f,c
  1338   0010DE                     l1780:
  1339   0010DE  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  1340   0010E0  D7FA               	goto	l1778
  1341   0010E2                     u800:
  1342   0010E2  5005               	movf	___lwmod@divisor^0,w,c
  1343   0010E4  5C03               	subwf	___lwmod@dividend^0,w,c
  1344   0010E6  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1345   0010E8  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  1346   0010EA  A0D8               	btfss	status,0,c
  1347   0010EC  D004               	goto	l1786
  1348   0010EE  5005               	movf	___lwmod@divisor^0,w,c
  1349   0010F0  5E03               	subwf	___lwmod@dividend^0,f,c
  1350   0010F2  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1351   0010F4  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  1352   0010F6                     l1786:
  1353   0010F6  90D8               	bcf	status,0,c
  1354   0010F8  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  1355   0010FA  3205               	rrcf	___lwmod@divisor^0,f,c
  1356   0010FC  2E07               	decfsz	___lwmod@counter^0,f,c
  1357   0010FE  D7F1               	goto	u800
  1358   001100                     l800:
  1359   001100  C003  F003         	movff	___lwmod@dividend,?___lwmod
  1360   001104  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  1361   001108  0012               	return		;funcret
  1362   00110A                     __end_of___lwmod:
  1363                           	callstack 0
  1364                           
  1365 ;; *************** function ___lwdiv *****************
  1366 ;; Defined at:
  1367 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  dividend        2    2[COMRAM] unsigned int 
  1370 ;;  divisor         2    4[COMRAM] unsigned int 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  quotient        2    6[COMRAM] unsigned int 
  1373 ;;  counter         1    8[COMRAM] unsigned char 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  2    2[COMRAM] unsigned int 
  1376 ;; Registers used:
  1377 ;;		wreg, status,2, status,0
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1383 ;;      Params:         4       0       0       0       0       0       0       0       0
  1384 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1386 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1387 ;;Total ram usage:        7 bytes
  1388 ;; Hardware stack levels used: 1
  1389 ;; Hardware stack levels required when called: 2
  1390 ;; This function calls:
  1391 ;;		Nothing
  1392 ;; This function is called by:
  1393 ;;		_TransmitirDatos
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           	psect	text4
  1398   000F9A                     __ptext4:
  1399                           	callstack 0
  1400   000F9A                     ___lwdiv:
  1401                           	callstack 27
  1402                           
  1403                           ;incstack = 0
  1404   000F9A  0E00               	movlw	0
  1405   000F9C  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  1406   000F9E  0E00               	movlw	0
  1407   000FA0  6E07               	movwf	___lwdiv@quotient^0,c
  1408   000FA2  5005               	movf	___lwdiv@divisor^0,w,c
  1409   000FA4  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1410   000FA6  B4D8               	btfsc	status,2,c
  1411   000FA8  D01C               	goto	l790
  1412   000FAA  0E01               	movlw	1
  1413   000FAC  6E09               	movwf	___lwdiv@counter^0,c
  1414   000FAE  D004               	goto	l1760
  1415   000FB0                     l1758:
  1416   000FB0  90D8               	bcf	status,0,c
  1417   000FB2  3605               	rlcf	___lwdiv@divisor^0,f,c
  1418   000FB4  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1419   000FB6  2A09               	incf	___lwdiv@counter^0,f,c
  1420   000FB8                     l1760:
  1421   000FB8  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  1422   000FBA  D7FA               	goto	l1758
  1423   000FBC                     u770:
  1424   000FBC  90D8               	bcf	status,0,c
  1425   000FBE  3607               	rlcf	___lwdiv@quotient^0,f,c
  1426   000FC0  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1427   000FC2  5005               	movf	___lwdiv@divisor^0,w,c
  1428   000FC4  5C03               	subwf	___lwdiv@dividend^0,w,c
  1429   000FC6  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1430   000FC8  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1431   000FCA  A0D8               	btfss	status,0,c
  1432   000FCC  D005               	goto	l1770
  1433   000FCE  5005               	movf	___lwdiv@divisor^0,w,c
  1434   000FD0  5E03               	subwf	___lwdiv@dividend^0,f,c
  1435   000FD2  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1436   000FD4  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1437   000FD6  8007               	bsf	___lwdiv@quotient^0,0,c
  1438   000FD8                     l1770:
  1439   000FD8  90D8               	bcf	status,0,c
  1440   000FDA  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1441   000FDC  3205               	rrcf	___lwdiv@divisor^0,f,c
  1442   000FDE  2E09               	decfsz	___lwdiv@counter^0,f,c
  1443   000FE0  D7ED               	goto	u770
  1444   000FE2                     l790:
  1445   000FE2  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  1446   000FE6  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1447   000FEA  0012               	return		;funcret
  1448   000FEC                     __end_of___lwdiv:
  1449                           	callstack 0
  1450                           
  1451 ;; *************** function ___lbmod *****************
  1452 ;; Defined at:
  1453 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  dividend        1    wreg     unsigned char 
  1456 ;;  divisor         1    2[COMRAM] unsigned char 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  dividend        1    3[COMRAM] unsigned char 
  1459 ;;  rem             1    5[COMRAM] unsigned char 
  1460 ;;  counter         1    4[COMRAM] unsigned char 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      unsigned char 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1470 ;;      Params:         1       0       0       0       0       0       0       0       0
  1471 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1473 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1474 ;;Total ram usage:        4 bytes
  1475 ;; Hardware stack levels used: 1
  1476 ;; Hardware stack levels required when called: 2
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_main
  1481 ;;		_TransmitirDatos
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	text5
  1486   001170                     __ptext5:
  1487                           	callstack 0
  1488   001170                     ___lbmod:
  1489                           	callstack 28
  1490                           
  1491                           ;incstack = 0
  1492                           ;___lbmod@dividend stored from wreg
  1493   001170  6E04               	movwf	___lbmod@dividend^0,c
  1494   001172  0E08               	movlw	8
  1495   001174  6E05               	movwf	___lbmod@counter^0,c
  1496   001176  0E00               	movlw	0
  1497   001178  6E06               	movwf	___lbmod@rem^0,c
  1498   00117A                     l1738:
  1499   00117A  90D8               	bcf	status,0,c
  1500   00117C  3404               	rlcf	___lbmod@dividend^0,w,c
  1501   00117E  3406               	rlcf	___lbmod@rem^0,w,c
  1502   001180  6E06               	movwf	___lbmod@rem^0,c
  1503   001182  90D8               	bcf	status,0,c
  1504   001184  3604               	rlcf	___lbmod@dividend^0,f,c
  1505   001186  5003               	movf	___lbmod@divisor^0,w,c
  1506   001188  5C06               	subwf	___lbmod@rem^0,w,c
  1507   00118A  A0D8               	btfss	status,0,c
  1508   00118C  D002               	goto	l1746
  1509   00118E  5003               	movf	___lbmod@divisor^0,w,c
  1510   001190  5E06               	subwf	___lbmod@rem^0,f,c
  1511   001192                     l1746:
  1512   001192  2E05               	decfsz	___lbmod@counter^0,f,c
  1513   001194  D7F2               	goto	l1738
  1514   001196  5006               	movf	___lbmod@rem^0,w,c
  1515   001198  0012               	return		;funcret
  1516   00119A                     __end_of___lbmod:
  1517                           	callstack 0
  1518                           
  1519 ;; *************** function ___lbdiv *****************
  1520 ;; Defined at:
  1521 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  dividend        1    wreg     unsigned char 
  1524 ;;  divisor         1    2[COMRAM] unsigned char 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  dividend        1    3[COMRAM] unsigned char 
  1527 ;;  quotient        1    5[COMRAM] unsigned char 
  1528 ;;  counter         1    4[COMRAM] unsigned char 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      unsigned char 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1538 ;;      Params:         1       0       0       0       0       0       0       0       0
  1539 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1541 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1542 ;;Total ram usage:        4 bytes
  1543 ;; Hardware stack levels used: 1
  1544 ;; Hardware stack levels required when called: 2
  1545 ;; This function calls:
  1546 ;;		Nothing
  1547 ;; This function is called by:
  1548 ;;		_main
  1549 ;;		_TransmitirDatos
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text6
  1554   00110A                     __ptext6:
  1555                           	callstack 0
  1556   00110A                     ___lbdiv:
  1557                           	callstack 28
  1558                           
  1559                           ;incstack = 0
  1560                           ;___lbdiv@dividend stored from wreg
  1561   00110A  6E04               	movwf	___lbdiv@dividend^0,c
  1562   00110C  0E00               	movlw	0
  1563   00110E  6E06               	movwf	___lbdiv@quotient^0,c
  1564   001110  5003               	movf	___lbdiv@divisor^0,w,c
  1565   001112  B4D8               	btfsc	status,2,c
  1566   001114  D015               	goto	l1732
  1567   001116  0E01               	movlw	1
  1568   001118  6E05               	movwf	___lbdiv@counter^0,c
  1569   00111A  D003               	goto	l1720
  1570   00111C                     l1716:
  1571   00111C  90D8               	bcf	status,0,c
  1572   00111E  3603               	rlcf	___lbdiv@divisor^0,f,c
  1573   001120  2A05               	incf	___lbdiv@counter^0,f,c
  1574   001122                     l1720:
  1575   001122  AE03               	btfss	___lbdiv@divisor^0,7,c
  1576   001124  D7FB               	goto	l1716
  1577   001126                     u730:
  1578   001126  90D8               	bcf	status,0,c
  1579   001128  3606               	rlcf	___lbdiv@quotient^0,f,c
  1580   00112A  5003               	movf	___lbdiv@divisor^0,w,c
  1581   00112C  5C04               	subwf	___lbdiv@dividend^0,w,c
  1582   00112E  A0D8               	btfss	status,0,c
  1583   001130  D003               	goto	l1728
  1584   001132  5003               	movf	___lbdiv@divisor^0,w,c
  1585   001134  5E04               	subwf	___lbdiv@dividend^0,f,c
  1586   001136  8006               	bsf	___lbdiv@quotient^0,0,c
  1587   001138                     l1728:
  1588   001138  90D8               	bcf	status,0,c
  1589   00113A  3203               	rrcf	___lbdiv@divisor^0,f,c
  1590   00113C  2E05               	decfsz	___lbdiv@counter^0,f,c
  1591   00113E  D7F3               	goto	u730
  1592   001140                     l1732:
  1593   001140  5006               	movf	___lbdiv@quotient^0,w,c
  1594   001142  0012               	return		;funcret
  1595   001144                     __end_of___lbdiv:
  1596                           	callstack 0
  1597                           
  1598 ;; *************** function ___awdiv *****************
  1599 ;; Defined at:
  1600 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  dividend        2    2[COMRAM] int 
  1603 ;;  divisor         2    4[COMRAM] int 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  quotient        2    8[COMRAM] int 
  1606 ;;  sign            1    7[COMRAM] unsigned char 
  1607 ;;  counter         1    6[COMRAM] unsigned char 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  2    2[COMRAM] int 
  1610 ;; Registers used:
  1611 ;;		wreg, status,2, status,0
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1617 ;;      Params:         4       0       0       0       0       0       0       0       0
  1618 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1619 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1620 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1621 ;;Total ram usage:        8 bytes
  1622 ;; Hardware stack levels used: 1
  1623 ;; Hardware stack levels required when called: 2
  1624 ;; This function calls:
  1625 ;;		Nothing
  1626 ;; This function is called by:
  1627 ;;		_TransmitirDatos
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	text7
  1632   000EB0                     __ptext7:
  1633                           	callstack 0
  1634   000EB0                     ___awdiv:
  1635                           	callstack 27
  1636                           
  1637                           ;incstack = 0
  1638   000EB0  0E00               	movlw	0
  1639   000EB2  6E08               	movwf	___awdiv@sign^0,c
  1640   000EB4  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1641   000EB6  D006               	goto	l1674
  1642   000EB8  6C05               	negf	___awdiv@divisor^0,c
  1643   000EBA  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  1644   000EBC  B0D8               	btfsc	status,0,c
  1645   000EBE  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  1646   000EC0  0E01               	movlw	1
  1647   000EC2  6E08               	movwf	___awdiv@sign^0,c
  1648   000EC4                     l1674:
  1649   000EC4  AE04               	btfss	(___awdiv@dividend+1)^0,7,c
  1650   000EC6  D006               	goto	l1680
  1651   000EC8  6C03               	negf	___awdiv@dividend^0,c
  1652   000ECA  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  1653   000ECC  B0D8               	btfsc	status,0,c
  1654   000ECE  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  1655   000ED0  0E01               	movlw	1
  1656   000ED2  1A08               	xorwf	___awdiv@sign^0,f,c
  1657   000ED4                     l1680:
  1658   000ED4  0E00               	movlw	0
  1659   000ED6  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  1660   000ED8  0E00               	movlw	0
  1661   000EDA  6E09               	movwf	___awdiv@quotient^0,c
  1662   000EDC  5005               	movf	___awdiv@divisor^0,w,c
  1663   000EDE  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  1664   000EE0  B4D8               	btfsc	status,2,c
  1665   000EE2  D01C               	goto	l1702
  1666   000EE4  0E01               	movlw	1
  1667   000EE6  6E07               	movwf	___awdiv@counter^0,c
  1668   000EE8  D004               	goto	l1688
  1669   000EEA                     l1686:
  1670   000EEA  90D8               	bcf	status,0,c
  1671   000EEC  3605               	rlcf	___awdiv@divisor^0,f,c
  1672   000EEE  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  1673   000EF0  2A07               	incf	___awdiv@counter^0,f,c
  1674   000EF2                     l1688:
  1675   000EF2  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1676   000EF4  D7FA               	goto	l1686
  1677   000EF6                     u690:
  1678   000EF6  90D8               	bcf	status,0,c
  1679   000EF8  3609               	rlcf	___awdiv@quotient^0,f,c
  1680   000EFA  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  1681   000EFC  5005               	movf	___awdiv@divisor^0,w,c
  1682   000EFE  5C03               	subwf	___awdiv@dividend^0,w,c
  1683   000F00  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1684   000F02  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  1685   000F04  A0D8               	btfss	status,0,c
  1686   000F06  D005               	goto	l1698
  1687   000F08  5005               	movf	___awdiv@divisor^0,w,c
  1688   000F0A  5E03               	subwf	___awdiv@dividend^0,f,c
  1689   000F0C  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1690   000F0E  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  1691   000F10  8009               	bsf	___awdiv@quotient^0,0,c
  1692   000F12                     l1698:
  1693   000F12  90D8               	bcf	status,0,c
  1694   000F14  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  1695   000F16  3205               	rrcf	___awdiv@divisor^0,f,c
  1696   000F18  2E07               	decfsz	___awdiv@counter^0,f,c
  1697   000F1A  D7ED               	goto	u690
  1698   000F1C                     l1702:
  1699   000F1C  5008               	movf	___awdiv@sign^0,w,c
  1700   000F1E  B4D8               	btfsc	status,2,c
  1701   000F20  D004               	goto	l1706
  1702   000F22  6C09               	negf	___awdiv@quotient^0,c
  1703   000F24  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  1704   000F26  B0D8               	btfsc	status,0,c
  1705   000F28  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  1706   000F2A                     l1706:
  1707   000F2A  C009  F003         	movff	___awdiv@quotient,?___awdiv
  1708   000F2E  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  1709   000F32  0012               	return		;funcret
  1710   000F34                     __end_of___awdiv:
  1711                           	callstack 0
  1712                           
  1713 ;; *************** function _Transmitir *****************
  1714 ;; Defined at:
  1715 ;;		line 168 in file "Lab5.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  BufferT         1    wreg     unsigned char 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  BufferT         1    2[COMRAM] unsigned char 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1729 ;;      Params:         0       0       0       0       0       0       0       0       0
  1730 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1732 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1733 ;;Total ram usage:        1 bytes
  1734 ;; Hardware stack levels used: 1
  1735 ;; Hardware stack levels required when called: 2
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_TransmitirDatos
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text8
  1744   001296                     __ptext8:
  1745                           	callstack 0
  1746   001296                     _Transmitir:
  1747                           	callstack 27
  1748                           
  1749                           ;incstack = 0
  1750                           ;Transmitir@BufferT stored from wreg
  1751   001296  6E03               	movwf	Transmitir@BufferT^0,c
  1752   001298                     
  1753                           ;Lab5.c: 169: while (TRMT == 0);
  1754   001298  A2AC               	btfss	4012,1,c	;volatile
  1755   00129A  D7FE               	goto	l1142
  1756                           
  1757                           ;Lab5.c: 170: TXREG = BufferT;
  1758   00129C  C003  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1759   0012A0  0012               	return		;funcret
  1760   0012A2                     __end_of_Transmitir:
  1761                           	callstack 0
  1762                           
  1763 ;; *************** function _MensajeLCD_Var *****************
  1764 ;; Defined at:
  1765 ;;		line 217 in file "LibLCDXC8.h"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  a               1    7[COMRAM] PTR unsigned char 
  1768 ;;		 -> STR_4(9), STR_3(13), STR_2(10), STR_1(13), 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  i               2    9[COMRAM] int 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1780 ;;      Params:         1       0       0       0       0       0       0       0       0
  1781 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1782 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1783 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1784 ;;Total ram usage:        4 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 5
  1787 ;; This function calls:
  1788 ;;		_EscribeLCD_c
  1789 ;;		_strlen
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;;		_TransmitirDatos
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text9
  1797   000FEC                     __ptext9:
  1798                           	callstack 0
  1799   000FEC                     _MensajeLCD_Var:
  1800                           	callstack 24
  1801                           
  1802                           ;LibLCDXC8.h: 221: for(int i = 0; i<strlen(a); i++){
  1803                           
  1804                           ;incstack = 0
  1805   000FEC  0E00               	movlw	0
  1806   000FEE  6E0B               	movwf	(MensajeLCD_Var@i+1)^0,c
  1807   000FF0  0E00               	movlw	0
  1808   000FF2  6E0A               	movwf	MensajeLCD_Var@i^0,c
  1809   000FF4  D019               	goto	l1658
  1810   000FF6                     l1650:
  1811                           
  1812                           ;LibLCDXC8.h: 222: if(a[i] == (0)){
  1813   000FF6  5008               	movf	MensajeLCD_Var@a^0,w,c
  1814   000FF8  240A               	addwf	MensajeLCD_Var@i^0,w,c
  1815   000FFA  6E09               	movwf	??_MensajeLCD_Var^0,c
  1816   000FFC  C009  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  1817   001000                     	if	1	;There is more than 1 active tblptr byte
  1818   001000  0E08               	movlw	high __smallconst
  1819   001002  6EF7               	movwf	tblptrh,c
  1820   001004                     	endif
  1821   001004                     	if	0	;tblptru may be non-zero
  1822   001004                     	endif
  1823   001004                     	if	0	;tblptru may be non-zero
  1824   001004                     	endif
  1825   001004  0008               	tblrd		*
  1826   001006  50F5               	movf	tablat,w,c
  1827   001008  0900               	iorlw	0
  1828   00100A  B4D8               	btfsc	status,2,c
  1829   00100C  0012               	return	
  1830                           
  1831                           ;LibLCDXC8.h: 224: };LibLCDXC8.h: 225: EscribeLCD_c(a[i]);
  1832   00100E  5008               	movf	MensajeLCD_Var@a^0,w,c
  1833   001010  240A               	addwf	MensajeLCD_Var@i^0,w,c
  1834   001012  6E09               	movwf	??_MensajeLCD_Var^0,c
  1835   001014  C009  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  1836   001018                     	if	1	;There is more than 1 active tblptr byte
  1837   001018  0E08               	movlw	high __smallconst
  1838   00101A  6EF7               	movwf	tblptrh,c
  1839   00101C                     	endif
  1840   00101C                     	if	0	;tblptru may be non-zero
  1841   00101C                     	endif
  1842   00101C                     	if	0	;tblptru may be non-zero
  1843   00101C                     	endif
  1844   00101C  0008               	tblrd		*
  1845   00101E  50F5               	movf	tablat,w,c
  1846   001020  EC13  F009         	call	_EscribeLCD_c
  1847   001024  4A0A               	infsnz	MensajeLCD_Var@i^0,f,c
  1848   001026  2A0B               	incf	(MensajeLCD_Var@i+1)^0,f,c
  1849   001028                     l1658:
  1850   001028  C008  F003         	movff	MensajeLCD_Var@a,strlen@s
  1851   00102C  ECCD  F008         	call	_strlen	;wreg free
  1852   001030  5003               	movf	?_strlen^0,w,c
  1853   001032  5C0A               	subwf	MensajeLCD_Var@i^0,w,c
  1854   001034  5004               	movf	(?_strlen+1)^0,w,c
  1855   001036  580B               	subwfb	(MensajeLCD_Var@i+1)^0,w,c
  1856   001038  B0D8               	btfsc	status,0,c
  1857   00103A  0012               	return	
  1858   00103C  D7DC               	goto	l1650
  1859   00103E                     __end_of_MensajeLCD_Var:
  1860                           	callstack 0
  1861                           
  1862 ;; *************** function _strlen *****************
  1863 ;; Defined at:
  1864 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  s               1    2[COMRAM] PTR const unsigned char 
  1867 ;;		 -> STR_4(9), STR_3(13), STR_2(10), STR_1(13), 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  cp              1    4[COMRAM] PTR const unsigned char 
  1870 ;;		 -> STR_4(9), STR_3(13), STR_2(10), STR_1(13), 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  2    2[COMRAM] unsigned int 
  1873 ;; Registers used:
  1874 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1880 ;;      Params:         2       0       0       0       0       0       0       0       0
  1881 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1883 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1884 ;;Total ram usage:        3 bytes
  1885 ;; Hardware stack levels used: 1
  1886 ;; Hardware stack levels required when called: 2
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_MensajeLCD_Var
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           	psect	text10
  1895   00119A                     __ptext10:
  1896                           	callstack 0
  1897   00119A                     _strlen:
  1898                           	callstack 26
  1899                           
  1900                           ;incstack = 0
  1901   00119A  C003  F005         	movff	strlen@s,strlen@cp
  1902   00119E  D001               	goto	l1642
  1903   0011A0                     l1640:
  1904   0011A0  2A05               	incf	strlen@cp^0,f,c
  1905   0011A2                     l1642:
  1906   0011A2  C005  FFF6         	movff	strlen@cp,tblptrl
  1907   0011A6                     	if	1	;There is more than 1 active tblptr byte
  1908   0011A6  0E08               	movlw	high __smallconst
  1909   0011A8  6EF7               	movwf	tblptrh,c
  1910   0011AA                     	endif
  1911   0011AA                     	if	0	;tblptru may be non-zero
  1912   0011AA                     	endif
  1913   0011AA                     	if	0	;tblptru may be non-zero
  1914   0011AA                     	endif
  1915   0011AA  0008               	tblrd		*
  1916   0011AC  50F5               	movf	tablat,w,c
  1917   0011AE  0900               	iorlw	0
  1918   0011B0  A4D8               	btfss	status,2,c
  1919   0011B2  D7F6               	goto	l1640
  1920   0011B4  5003               	movf	strlen@s^0,w,c
  1921   0011B6  5C05               	subwf	strlen@cp^0,w,c
  1922   0011B8  6E03               	movwf	?_strlen^0,c
  1923   0011BA  6A04               	clrf	(?_strlen+1)^0,c
  1924   0011BC  BE03               	btfsc	?_strlen^0,7,c
  1925   0011BE  0604               	decf	(?_strlen+1)^0,f,c
  1926   0011C0  0012               	return		;funcret
  1927   0011C2                     __end_of_strlen:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _EscribeLCD_c *****************
  1931 ;; Defined at:
  1932 ;;		line 119 in file "LibLCDXC8.h"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  a               1    wreg     unsigned char 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  a               1    6[COMRAM] unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1946 ;;      Params:         0       0       0       0       0       0       0       0       0
  1947 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1948 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1949 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1950 ;;Total ram usage:        1 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; Hardware stack levels required when called: 4
  1953 ;; This function calls:
  1954 ;;		_EnviaDato
  1955 ;;		_HabilitaLCD
  1956 ;;		_RetardoLCD
  1957 ;; This function is called by:
  1958 ;;		_MensajeLCD_Var
  1959 ;;		_main
  1960 ;;		_TransmitirDatos
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text11
  1965   001226                     __ptext11:
  1966                           	callstack 0
  1967   001226                     _EscribeLCD_c:
  1968                           	callstack 24
  1969                           
  1970                           ;incstack = 0
  1971                           ;EscribeLCD_c@a stored from wreg
  1972   001226  6E07               	movwf	EscribeLCD_c@a^0,c
  1973                           
  1974                           ;LibLCDXC8.h: 123: LATE0=1;
  1975   001228  808D               	bsf	3981,0,c	;volatile
  1976                           
  1977                           ;LibLCDXC8.h: 124: EnviaDato(a);
  1978   00122A  5007               	movf	EscribeLCD_c@a^0,w,c
  1979   00122C  EC1F  F008         	call	_EnviaDato
  1980                           
  1981                           ;LibLCDXC8.h: 125: HabilitaLCD();
  1982   001230  EC44  F009         	call	_HabilitaLCD	;wreg free
  1983                           
  1984                           ;LibLCDXC8.h: 126: RetardoLCD(4);
  1985   001234  0E04               	movlw	4
  1986   001236  EC9A  F007         	call	_RetardoLCD
  1987   00123A  0012               	return		;funcret
  1988   00123C                     __end_of_EscribeLCD_c:
  1989                           	callstack 0
  1990                           
  1991 ;; *************** function _DireccionaLCD *****************
  1992 ;; Defined at:
  1993 ;;		line 229 in file "LibLCDXC8.h"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  a               1    wreg     unsigned char 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  a               1    6[COMRAM] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2007 ;;      Params:         0       0       0       0       0       0       0       0       0
  2008 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2010 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2011 ;;Total ram usage:        1 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 4
  2014 ;; This function calls:
  2015 ;;		_EnviaDato
  2016 ;;		_HabilitaLCD
  2017 ;;		_RetardoLCD
  2018 ;; This function is called by:
  2019 ;;		_main
  2020 ;;		_TransmitirDatos
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text12
  2025   00123C                     __ptext12:
  2026                           	callstack 0
  2027   00123C                     _DireccionaLCD:
  2028                           	callstack 25
  2029                           
  2030                           ;incstack = 0
  2031                           ;DireccionaLCD@a stored from wreg
  2032   00123C  6E07               	movwf	DireccionaLCD@a^0,c
  2033                           
  2034                           ;LibLCDXC8.h: 232: LATE0=0;
  2035   00123E  908D               	bcf	3981,0,c	;volatile
  2036                           
  2037                           ;LibLCDXC8.h: 233: EnviaDato(a);
  2038   001240  5007               	movf	DireccionaLCD@a^0,w,c
  2039   001242  EC1F  F008         	call	_EnviaDato
  2040                           
  2041                           ;LibLCDXC8.h: 234: HabilitaLCD();
  2042   001246  EC44  F009         	call	_HabilitaLCD	;wreg free
  2043                           
  2044                           ;LibLCDXC8.h: 235: RetardoLCD(4);
  2045   00124A  0E04               	movlw	4
  2046   00124C  EC9A  F007         	call	_RetardoLCD
  2047   001250  0012               	return		;funcret
  2048   001252                     __end_of_DireccionaLCD:
  2049                           	callstack 0
  2050                           
  2051 ;; *************** function _SaveData_EEPROM *****************
  2052 ;; Defined at:
  2053 ;;		line 291 in file "Lab5.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  dir             2    2[COMRAM] unsigned int 
  2056 ;;  dato            1    4[COMRAM] unsigned char 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;		None
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2068 ;;      Params:         3       0       0       0       0       0       0       0       0
  2069 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2071 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2072 ;;Total ram usage:        3 bytes
  2073 ;; Hardware stack levels used: 1
  2074 ;; Hardware stack levels required when called: 2
  2075 ;; This function calls:
  2076 ;;		Nothing
  2077 ;; This function is called by:
  2078 ;;		_main
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	text13
  2083   0011E8                     __ptext13:
  2084                           	callstack 0
  2085   0011E8                     _SaveData_EEPROM:
  2086                           	callstack 28
  2087                           
  2088                           ;Lab5.c: 292: EEADR = dir;
  2089                           
  2090                           ;incstack = 0
  2091   0011E8  C003  FFA9         	movff	SaveData_EEPROM@dir,4009	;volatile
  2092                           
  2093                           ;Lab5.c: 293: EEDATA = dato;
  2094   0011EC  C005  FFA8         	movff	SaveData_EEPROM@dato,4008	;volatile
  2095                           
  2096                           ;Lab5.c: 295: EEPGD = 0;
  2097   0011F0  9EA6               	bcf	4006,7,c	;volsfr
  2098                           
  2099                           ;Lab5.c: 296: CFGS = 0;
  2100   0011F2  9CA6               	bcf	4006,6,c	;volsfr
  2101                           
  2102                           ;Lab5.c: 297: WREN = 1;
  2103   0011F4  84A6               	bsf	4006,2,c	;volsfr
  2104                           
  2105                           ;Lab5.c: 299: GIE = 0;
  2106   0011F6  9EF2               	bcf	4082,7,c	;volatile
  2107                           
  2108                           ;Lab5.c: 301: EECON2 = 0x55;
  2109   0011F8  0E55               	movlw	85
  2110   0011FA  6EA7               	movwf	167,c	;volsfr
  2111                           
  2112                           ;Lab5.c: 302: EECON2 = 0xAA;
  2113   0011FC  0EAA               	movlw	170
  2114   0011FE  6EA7               	movwf	167,c	;volsfr
  2115                           
  2116                           ;Lab5.c: 303: WR = 1;
  2117   001200  82A6               	bsf	4006,1,c	;volsfr
  2118                           
  2119                           ;Lab5.c: 304: GIE = 1;
  2120   001202  8EF2               	bsf	4082,7,c	;volatile
  2121   001204                     l288:
  2122   001204  A8A1               	btfss	4001,4,c	;volatile
  2123   001206  D7FE               	goto	l288
  2124                           
  2125                           ;Lab5.c: 306: EEIF = 0;
  2126   001208  98A1               	bcf	4001,4,c	;volatile
  2127                           
  2128                           ;Lab5.c: 307: WREN = 0;
  2129   00120A  94A6               	bcf	4006,2,c	;volsfr
  2130   00120C  0012               	return		;funcret
  2131   00120E                     __end_of_SaveData_EEPROM:
  2132                           	callstack 0
  2133                           
  2134 ;; *************** function _ReadData_EEPROM *****************
  2135 ;; Defined at:
  2136 ;;		line 311 in file "Lab5.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;  dir             2    2[COMRAM] unsigned int 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;		None
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      unsigned char 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2150 ;;      Params:         2       0       0       0       0       0       0       0       0
  2151 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2153 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2154 ;;Total ram usage:        2 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 2
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_main
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text14
  2165   00127A                     __ptext14:
  2166                           	callstack 0
  2167   00127A                     _ReadData_EEPROM:
  2168                           	callstack 28
  2169                           
  2170                           ;Lab5.c: 312: EEADR = dir;
  2171                           
  2172                           ;incstack = 0
  2173   00127A  C003  FFA9         	movff	ReadData_EEPROM@dir,4009	;volatile
  2174                           
  2175                           ;Lab5.c: 313: EEPGD = 0;
  2176   00127E  9EA6               	bcf	4006,7,c	;volsfr
  2177                           
  2178                           ;Lab5.c: 314: CFGS = 0;
  2179   001280  9CA6               	bcf	4006,6,c	;volsfr
  2180                           
  2181                           ;Lab5.c: 315: RD = 1;
  2182   001282  80A6               	bsf	4006,0,c	;volsfr
  2183                           
  2184                           ;Lab5.c: 317: return EEDATA;
  2185   001284  50A8               	movf	168,w,c	;volatile
  2186   001286  0012               	return		;funcret
  2187   001288                     __end_of_ReadData_EEPROM:
  2188                           	callstack 0
  2189                           
  2190 ;; *************** function _LeerDHT11 *****************
  2191 ;; Defined at:
  2192 ;;		line 115 in file "Lab5.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  contr           1    3[COMRAM] unsigned char 
  2197 ;;  i               1    0        unsigned char 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2, status,0
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2207 ;;      Params:         0       0       0       0       0       0       0       0       0
  2208 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2209 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2210 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2211 ;;Total ram usage:        2 bytes
  2212 ;; Hardware stack levels used: 1
  2213 ;; Hardware stack levels required when called: 2
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text15
  2222   001084                     __ptext15:
  2223                           	callstack 0
  2224   001084                     _LeerDHT11:
  2225                           	callstack 28
  2226                           
  2227                           ;Lab5.c: 116: unsigned char i, contr = 0;
  2228                           
  2229                           ;incstack = 0
  2230   001084  0E00               	movlw	0
  2231   001086  6E04               	movwf	LeerDHT11@contr^0,c
  2232                           
  2233                           ;Lab5.c: 118: TRISC2 = 0;
  2234   001088  9494               	bcf	3988,2,c	;volatile
  2235                           
  2236                           ;Lab5.c: 119: _delay((unsigned long)((18)*(8000000/4000.0)));
  2237   00108A  0E2F               	movlw	47
  2238   00108C  6E03               	movwf	??_LeerDHT11^0,c
  2239   00108E  0EC0               	movlw	192
  2240   001090                     u1147:
  2241   001090  2EE8               	decfsz	wreg,f,c
  2242   001092  D7FE               	bra	u1147
  2243   001094  2E03               	decfsz	??_LeerDHT11^0,f,c
  2244   001096  D7FC               	bra	u1147
  2245                           
  2246                           ;Lab5.c: 121: TRISC2 = 1;
  2247   001098  8494               	bsf	3988,2,c	;volatile
  2248   00109A                     l211:
  2249   00109A  B482               	btfsc	3970,2,c	;volatile
  2250   00109C  D7FE               	goto	l211
  2251                           
  2252                           ;Lab5.c: 123: _delay((unsigned long)((40)*(8000000/4000000.0)));
  2253   00109E  0E1A               	movlw	26
  2254   0010A0                     u1157:
  2255   0010A0  2EE8               	decfsz	wreg,f,c
  2256   0010A2  D7FE               	bra	u1157
  2257   0010A4  D000               	nop2	
  2258                           
  2259                           ;Lab5.c: 124: if (RC2 == 0) contr++;
  2260   0010A6  A482               	btfss	3970,2,c	;volatile
  2261   0010A8  2A04               	incf	LeerDHT11@contr^0,f,c
  2262                           
  2263                           ;Lab5.c: 125: _delay((unsigned long)((80)*(8000000/4000000.0)));
  2264   0010AA  0E35               	movlw	53
  2265   0010AC                     u1167:
  2266   0010AC  2EE8               	decfsz	wreg,f,c
  2267   0010AE  D7FE               	bra	u1167
  2268   0010B0  F000               	nop	
  2269                           
  2270                           ;Lab5.c: 127: if (RC2 == 1) contr++;
  2271   0010B2  B482               	btfsc	3970,2,c	;volatile
  2272   0010B4  2A04               	incf	LeerDHT11@contr^0,f,c
  2273   0010B6                     l216:
  2274   0010B6  B482               	btfsc	3970,2,c	;volatile
  2275   0010B8  D7FE               	goto	l216
  2276                           
  2277                           ;Lab5.c: 135: Humedad = 0;
  2278   0010BA  0E00               	movlw	0
  2279   0010BC  6E20               	movwf	_Humedad^0,c
  2280                           
  2281                           ;Lab5.c: 136: Temperatura = 42;
  2282   0010BE  0E2A               	movlw	42
  2283   0010C0  6E21               	movwf	_Temperatura^0,c
  2284                           
  2285                           ;Lab5.c: 137: Che = 0;
  2286   0010C2  0E00               	movlw	0
  2287   0010C4  6E1F               	movwf	_Che^0,c
  2288   0010C6  0012               	return		;funcret
  2289   0010C8                     __end_of_LeerDHT11:
  2290                           	callstack 0
  2291                           
  2292 ;; *************** function _InicializaLCD *****************
  2293 ;; Defined at:
  2294 ;;		line 64 in file "LibLCDXC8.h"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;		None
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;		None
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg, status,2, status,0, cstack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2308 ;;      Params:         0       0       0       0       0       0       0       0       0
  2309 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2310 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2311 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2312 ;;Total ram usage:        0 bytes
  2313 ;; Hardware stack levels used: 1
  2314 ;; Hardware stack levels required when called: 5
  2315 ;; This function calls:
  2316 ;;		_BorraLCD
  2317 ;;		_EnviaDato
  2318 ;;		_HabilitaLCD
  2319 ;;		_RetardoLCD
  2320 ;; This function is called by:
  2321 ;;		_main
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text16
  2326   000D8A                     __ptext16:
  2327                           	callstack 0
  2328   000D8A                     _InicializaLCD:
  2329                           	callstack 25
  2330                           
  2331                           ;LibLCDXC8.h: 66: LATE0=0;
  2332                           
  2333                           ;incstack = 0
  2334   000D8A  908D               	bcf	3981,0,c	;volatile
  2335                           
  2336                           ;LibLCDXC8.h: 67: if(interfaz==4)
  2337   000D8C  0E04               	movlw	4
  2338   000D8E  1822               	xorwf	_interfaz^0,w,c
  2339   000D90  A4D8               	btfss	status,2,c
  2340   000D92  D004               	goto	l1286
  2341                           
  2342                           ;LibLCDXC8.h: 68: LATD=(LATD & 0b00001111) | 0x30;
  2343   000D94  508C               	movf	140,w,c	;volatile
  2344   000D96  0B0F               	andlw	15
  2345   000D98  0930               	iorlw	48
  2346   000D9A  D001               	goto	L4
  2347   000D9C                     l1286:
  2348                           
  2349                           ;LibLCDXC8.h: 69: else;LibLCDXC8.h: 70: LATD=0x3F;
  2350   000D9C  0E3F               	movlw	63
  2351   000D9E                     L4:
  2352   000D9E  6E8C               	movwf	140,c	;volatile
  2353                           
  2354                           ;LibLCDXC8.h: 71: HabilitaLCD();
  2355   000DA0  EC44  F009         	call	_HabilitaLCD	;wreg free
  2356                           
  2357                           ;LibLCDXC8.h: 72: RetardoLCD(1);
  2358   000DA4  0E01               	movlw	1
  2359   000DA6  EC9A  F007         	call	_RetardoLCD
  2360                           
  2361                           ;LibLCDXC8.h: 73: if(interfaz==4)
  2362   000DAA  0E04               	movlw	4
  2363   000DAC  1822               	xorwf	_interfaz^0,w,c
  2364   000DAE  A4D8               	btfss	status,2,c
  2365   000DB0  D004               	goto	l1296
  2366                           
  2367                           ;LibLCDXC8.h: 74: LATD=(LATD & 0b00001111) | 0x30;
  2368   000DB2  508C               	movf	140,w,c	;volatile
  2369   000DB4  0B0F               	andlw	15
  2370   000DB6  0930               	iorlw	48
  2371   000DB8  D001               	goto	L5
  2372   000DBA                     l1296:
  2373                           
  2374                           ;LibLCDXC8.h: 75: else;LibLCDXC8.h: 76: LATD=0x3F;
  2375   000DBA  0E3F               	movlw	63
  2376   000DBC                     L5:
  2377   000DBC  6E8C               	movwf	140,c	;volatile
  2378                           
  2379                           ;LibLCDXC8.h: 77: HabilitaLCD();
  2380   000DBE  EC44  F009         	call	_HabilitaLCD	;wreg free
  2381                           
  2382                           ;LibLCDXC8.h: 78: RetardoLCD(3);
  2383   000DC2  0E03               	movlw	3
  2384   000DC4  EC9A  F007         	call	_RetardoLCD
  2385                           
  2386                           ;LibLCDXC8.h: 79: if(interfaz==4)
  2387   000DC8  0E04               	movlw	4
  2388   000DCA  1822               	xorwf	_interfaz^0,w,c
  2389   000DCC  A4D8               	btfss	status,2,c
  2390   000DCE  D004               	goto	l1306
  2391                           
  2392                           ;LibLCDXC8.h: 80: LATD=(LATD & 0b00001111) | 0x30;
  2393   000DD0  508C               	movf	140,w,c	;volatile
  2394   000DD2  0B0F               	andlw	15
  2395   000DD4  0930               	iorlw	48
  2396   000DD6  D001               	goto	L6
  2397   000DD8                     l1306:
  2398                           
  2399                           ;LibLCDXC8.h: 81: else;LibLCDXC8.h: 82: LATD=0x3F;
  2400   000DD8  0E3F               	movlw	63
  2401   000DDA                     L6:
  2402   000DDA  6E8C               	movwf	140,c	;volatile
  2403                           
  2404                           ;LibLCDXC8.h: 83: HabilitaLCD();
  2405   000DDC  EC44  F009         	call	_HabilitaLCD	;wreg free
  2406                           
  2407                           ;LibLCDXC8.h: 84: RetardoLCD(4);
  2408   000DE0  0E04               	movlw	4
  2409   000DE2  EC9A  F007         	call	_RetardoLCD
  2410                           
  2411                           ;LibLCDXC8.h: 85: if(interfaz==4){
  2412   000DE6  0E04               	movlw	4
  2413   000DE8  1822               	xorwf	_interfaz^0,w,c
  2414   000DEA  A4D8               	btfss	status,2,c
  2415   000DEC  D011               	goto	l1326
  2416                           
  2417                           ;LibLCDXC8.h: 86: LATD=(LATD & 0b00001111) | 0x20;
  2418   000DEE  508C               	movf	140,w,c	;volatile
  2419   000DF0  0B0F               	andlw	15
  2420   000DF2  0920               	iorlw	32
  2421   000DF4  6E8C               	movwf	140,c	;volatile
  2422                           
  2423                           ;LibLCDXC8.h: 87: HabilitaLCD();
  2424   000DF6  EC44  F009         	call	_HabilitaLCD	;wreg free
  2425                           
  2426                           ;LibLCDXC8.h: 88: RetardoLCD(4);
  2427   000DFA  0E04               	movlw	4
  2428   000DFC  EC9A  F007         	call	_RetardoLCD
  2429                           
  2430                           ;LibLCDXC8.h: 89: EnviaDato(0x2F);
  2431   000E00  0E2F               	movlw	47
  2432   000E02  EC1F  F008         	call	_EnviaDato
  2433                           
  2434                           ;LibLCDXC8.h: 90: HabilitaLCD();
  2435   000E06  EC44  F009         	call	_HabilitaLCD	;wreg free
  2436                           
  2437                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  2438   000E0A  0E04               	movlw	4
  2439   000E0C  EC9A  F007         	call	_RetardoLCD
  2440   000E10                     l1326:
  2441                           
  2442                           ;LibLCDXC8.h: 92: };LibLCDXC8.h: 93: BorraLCD();
  2443   000E10  EC29  F009         	call	_BorraLCD	;wreg free
  2444                           
  2445                           ;LibLCDXC8.h: 94: EnviaDato(0xF);
  2446   000E14  0E0F               	movlw	15
  2447   000E16  EC1F  F008         	call	_EnviaDato
  2448                           
  2449                           ;LibLCDXC8.h: 95: HabilitaLCD();
  2450   000E1A  EC44  F009         	call	_HabilitaLCD	;wreg free
  2451                           
  2452                           ;LibLCDXC8.h: 96: RetardoLCD(4);
  2453   000E1E  0E04               	movlw	4
  2454   000E20  EC9A  F007         	call	_RetardoLCD
  2455   000E24  0012               	return		;funcret
  2456   000E26                     __end_of_InicializaLCD:
  2457                           	callstack 0
  2458                           
  2459 ;; *************** function _BorraLCD *****************
  2460 ;; Defined at:
  2461 ;;		line 105 in file "LibLCDXC8.h"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      void 
  2468 ;; Registers used:
  2469 ;;		wreg, status,2, status,0, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2475 ;;      Params:         0       0       0       0       0       0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2478 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2479 ;;Total ram usage:        0 bytes
  2480 ;; Hardware stack levels used: 1
  2481 ;; Hardware stack levels required when called: 4
  2482 ;; This function calls:
  2483 ;;		_EnviaDato
  2484 ;;		_HabilitaLCD
  2485 ;;		_RetardoLCD
  2486 ;; This function is called by:
  2487 ;;		_InicializaLCD
  2488 ;;		_main
  2489 ;;		_TransmitirDatos
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text17
  2494   001252                     __ptext17:
  2495                           	callstack 0
  2496   001252                     _BorraLCD:
  2497                           	callstack 25
  2498                           
  2499                           ;LibLCDXC8.h: 107: LATE0=0;
  2500                           
  2501                           ;incstack = 0
  2502   001252  908D               	bcf	3981,0,c	;volatile
  2503                           
  2504                           ;LibLCDXC8.h: 108: EnviaDato(0x01);
  2505   001254  0E01               	movlw	1
  2506   001256  EC1F  F008         	call	_EnviaDato
  2507                           
  2508                           ;LibLCDXC8.h: 109: HabilitaLCD();
  2509   00125A  EC44  F009         	call	_HabilitaLCD	;wreg free
  2510                           
  2511                           ;LibLCDXC8.h: 110: RetardoLCD(2);
  2512   00125E  0E02               	movlw	2
  2513   001260  EC9A  F007         	call	_RetardoLCD
  2514   001264  0012               	return		;funcret
  2515   001266                     __end_of_BorraLCD:
  2516                           	callstack 0
  2517                           
  2518 ;; *************** function _EnviaDato *****************
  2519 ;; Defined at:
  2520 ;;		line 54 in file "LibLCDXC8.h"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  a               1    wreg     unsigned char 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  a               1    5[COMRAM] unsigned char 
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      void 
  2527 ;; Registers used:
  2528 ;;		wreg, status,2, status,0, cstack
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2534 ;;      Params:         0       0       0       0       0       0       0       0       0
  2535 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2536 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2537 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2538 ;;Total ram usage:        2 bytes
  2539 ;; Hardware stack levels used: 1
  2540 ;; Hardware stack levels required when called: 3
  2541 ;; This function calls:
  2542 ;;		_HabilitaLCD
  2543 ;;		_RetardoLCD
  2544 ;; This function is called by:
  2545 ;;		_InicializaLCD
  2546 ;;		_BorraLCD
  2547 ;;		_EscribeLCD_c
  2548 ;;		_DireccionaLCD
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           	psect	text18
  2553   00103E                     __ptext18:
  2554                           	callstack 0
  2555   00103E                     _EnviaDato:
  2556                           	callstack 24
  2557                           
  2558                           ;incstack = 0
  2559                           ;EnviaDato@a stored from wreg
  2560   00103E  6E06               	movwf	EnviaDato@a^0,c
  2561                           
  2562                           ;LibLCDXC8.h: 55: if(interfaz==4){
  2563   001040  0E04               	movlw	4
  2564   001042  1822               	xorwf	_interfaz^0,w,c
  2565   001044  A4D8               	btfss	status,2,c
  2566   001046  D017               	goto	l1092
  2567                           
  2568                           ;LibLCDXC8.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2569   001048  C006  F005         	movff	EnviaDato@a,??_EnviaDato
  2570   00104C  0EF0               	movlw	240
  2571   00104E  1605               	andwf	??_EnviaDato^0,f,c
  2572   001050  508C               	movf	140,w,c	;volatile
  2573   001052  0B0F               	andlw	15
  2574   001054  1005               	iorwf	??_EnviaDato^0,w,c
  2575   001056  6E8C               	movwf	140,c	;volatile
  2576                           
  2577                           ;LibLCDXC8.h: 57: HabilitaLCD();
  2578   001058  EC44  F009         	call	_HabilitaLCD	;wreg free
  2579                           
  2580                           ;LibLCDXC8.h: 58: RetardoLCD(1);
  2581   00105C  0E01               	movlw	1
  2582   00105E  EC9A  F007         	call	_RetardoLCD
  2583                           
  2584                           ;LibLCDXC8.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  2585   001062  C006  F005         	movff	EnviaDato@a,??_EnviaDato
  2586   001066  3A05               	swapf	??_EnviaDato^0,f,c
  2587   001068  0EF0               	movlw	240
  2588   00106A  1605               	andwf	??_EnviaDato^0,f,c
  2589   00106C  508C               	movf	140,w,c	;volatile
  2590   00106E  0B0F               	andlw	15
  2591   001070  1005               	iorwf	??_EnviaDato^0,w,c
  2592   001072  6E8C               	movwf	140,c	;volatile
  2593                           
  2594                           ;LibLCDXC8.h: 60: }else if(interfaz==8){
  2595   001074  0012               	return	
  2596   001076                     l1092:
  2597   001076  0E08               	movlw	8
  2598   001078  1822               	xorwf	_interfaz^0,w,c
  2599   00107A  A4D8               	btfss	status,2,c
  2600   00107C  0012               	return	
  2601                           
  2602                           ;LibLCDXC8.h: 61: LATD=a;
  2603   00107E  C006  FF8C         	movff	EnviaDato@a,3980	;volatile
  2604   001082  0012               	return		;funcret
  2605   001084                     __end_of_EnviaDato:
  2606                           	callstack 0
  2607                           
  2608 ;; *************** function _RetardoLCD *****************
  2609 ;; Defined at:
  2610 ;;		line 265 in file "LibLCDXC8.h"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  a               1    wreg     unsigned char 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  a               1    3[COMRAM] unsigned char 
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  1    wreg      void 
  2617 ;; Registers used:
  2618 ;;		wreg, status,2, status,0
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2624 ;;      Params:         0       0       0       0       0       0       0       0       0
  2625 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2626 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2627 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2628 ;;Total ram usage:        2 bytes
  2629 ;; Hardware stack levels used: 1
  2630 ;; Hardware stack levels required when called: 2
  2631 ;; This function calls:
  2632 ;;		Nothing
  2633 ;; This function is called by:
  2634 ;;		_EnviaDato
  2635 ;;		_InicializaLCD
  2636 ;;		_BorraLCD
  2637 ;;		_EscribeLCD_c
  2638 ;;		_DireccionaLCD
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text19
  2643   000F34                     __ptext19:
  2644                           	callstack 0
  2645   000F34                     _RetardoLCD:
  2646                           	callstack 25
  2647                           
  2648                           ;incstack = 0
  2649                           ;RetardoLCD@a stored from wreg
  2650   000F34  6E04               	movwf	RetardoLCD@a^0,c
  2651                           
  2652                           ;LibLCDXC8.h: 266: switch(a){
  2653   000F36  D023               	goto	l1080
  2654   000F38                     l1070:
  2655   000F38  0E62               	movlw	98
  2656   000F3A  6E03               	movwf	??_RetardoLCD^0,c
  2657   000F3C  0E66               	movlw	102
  2658   000F3E                     u1177:
  2659   000F3E  2EE8               	decfsz	wreg,f,c
  2660   000F40  D7FE               	bra	u1177
  2661   000F42  2E03               	decfsz	??_RetardoLCD^0,f,c
  2662   000F44  D7FC               	bra	u1177
  2663                           
  2664                           ;LibLCDXC8.h: 269: break;
  2665   000F46  0012               	return	
  2666   000F48                     l1072:
  2667   000F48  0E07               	movlw	7
  2668   000F4A  6E03               	movwf	??_RetardoLCD^0,c
  2669   000F4C  0E7D               	movlw	125
  2670   000F4E                     u1187:
  2671   000F4E  2EE8               	decfsz	wreg,f,c
  2672   000F50  D7FE               	bra	u1187
  2673   000F52  2E03               	decfsz	??_RetardoLCD^0,f,c
  2674   000F54  D7FC               	bra	u1187
  2675   000F56  F000               	nop	
  2676                           
  2677                           ;LibLCDXC8.h: 271: _delay((unsigned long)((640)*(20000000/4000000.0)));
  2678   000F58  0E05               	movlw	5
  2679   000F5A  6E03               	movwf	??_RetardoLCD^0,c
  2680   000F5C  0E26               	movlw	38
  2681   000F5E                     u1197:
  2682   000F5E  2EE8               	decfsz	wreg,f,c
  2683   000F60  D7FE               	bra	u1197
  2684   000F62  2E03               	decfsz	??_RetardoLCD^0,f,c
  2685   000F64  D7FC               	bra	u1197
  2686   000F66  D000               	nop2	
  2687                           
  2688                           ;LibLCDXC8.h: 273: break;
  2689   000F68  0012               	return	
  2690   000F6A                     l1074:
  2691   000F6A  0EA6               	movlw	166
  2692   000F6C                     u1207:
  2693   000F6C  2EE8               	decfsz	wreg,f,c
  2694   000F6E  D7FE               	bra	u1207
  2695   000F70  D000               	nop2	
  2696                           
  2697                           ;LibLCDXC8.h: 276: break;
  2698   000F72  0012               	return	
  2699   000F74                     l1076:
  2700   000F74  0E42               	movlw	66
  2701   000F76                     u1217:
  2702   000F76  2EE8               	decfsz	wreg,f,c
  2703   000F78  D7FE               	bra	u1217
  2704   000F7A  D000               	nop2	
  2705                           
  2706                           ;LibLCDXC8.h: 279: break;
  2707   000F7C  0012               	return	
  2708   000F7E                     l1080:
  2709   000F7E  5004               	movf	RetardoLCD@a^0,w,c
  2710                           
  2711                           ; Switch size 1, requested type "simple"
  2712                           ; Number of cases is 4, Range of values is 1 to 4
  2713                           ; switch strategies available:
  2714                           ; Name         Instructions Cycles
  2715                           ; simple_byte           13     7 (average)
  2716                           ;	Chosen strategy is simple_byte
  2717   000F80  0A01               	xorlw	1	; case 1
  2718   000F82  B4D8               	btfsc	status,2,c
  2719   000F84  D7D9               	goto	l1070
  2720   000F86  0A03               	xorlw	3	; case 2
  2721   000F88  B4D8               	btfsc	status,2,c
  2722   000F8A  D7DE               	goto	l1072
  2723   000F8C  0A01               	xorlw	1	; case 3
  2724   000F8E  B4D8               	btfsc	status,2,c
  2725   000F90  D7EC               	goto	l1074
  2726   000F92  0A07               	xorlw	7	; case 4
  2727   000F94  A4D8               	btfss	status,2,c
  2728   000F96  0012               	return	
  2729   000F98  D7ED               	goto	l1076
  2730   000F9A                     __end_of_RetardoLCD:
  2731                           	callstack 0
  2732                           
  2733 ;; *************** function _HabilitaLCD *****************
  2734 ;; Defined at:
  2735 ;;		line 98 in file "LibLCDXC8.h"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;		None
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;		None
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		wreg
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2749 ;;      Params:         0       0       0       0       0       0       0       0       0
  2750 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2751 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2752 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2753 ;;Total ram usage:        0 bytes
  2754 ;; Hardware stack levels used: 1
  2755 ;; Hardware stack levels required when called: 2
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_EnviaDato
  2760 ;;		_InicializaLCD
  2761 ;;		_BorraLCD
  2762 ;;		_EscribeLCD_c
  2763 ;;		_DireccionaLCD
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text20
  2768   001288                     __ptext20:
  2769                           	callstack 0
  2770   001288                     _HabilitaLCD:
  2771                           	callstack 25
  2772                           
  2773                           ;LibLCDXC8.h: 100: LATE1=1;
  2774                           
  2775                           ;incstack = 0
  2776   001288  828D               	bsf	3981,1,c	;volatile
  2777                           
  2778                           ;LibLCDXC8.h: 101: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2779   00128A  0E42               	movlw	66
  2780   00128C                     u1227:
  2781   00128C  2EE8               	decfsz	wreg,f,c
  2782   00128E  D7FE               	bra	u1227
  2783   001290  D000               	nop2	
  2784                           
  2785                           ;LibLCDXC8.h: 103: LATE1=0;
  2786   001292  928D               	bcf	3981,1,c	;volatile
  2787   001294  0012               	return		;funcret
  2788   001296                     __end_of_HabilitaLCD:
  2789                           	callstack 0
  2790                           
  2791 ;; *************** function _Conversion *****************
  2792 ;; Defined at:
  2793 ;;		line 284 in file "Lab5.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  canal           1    wreg     unsigned char 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  canal           1    2[COMRAM] unsigned char 
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  2   78[None  ] unsigned int 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2807 ;;      Params:         0       0       0       0       0       0       0       0       0
  2808 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2810 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2811 ;;Total ram usage:        1 bytes
  2812 ;; Hardware stack levels used: 1
  2813 ;; Hardware stack levels required when called: 2
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		_main
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text21
  2822   001266                     __ptext21:
  2823                           	callstack 0
  2824   001266                     _Conversion:
  2825                           	callstack 28
  2826                           
  2827                           ;incstack = 0
  2828                           ;Conversion@canal stored from wreg
  2829   001266  6E03               	movwf	Conversion@canal^0,c
  2830                           
  2831                           ;Lab5.c: 285: ADCON0 = 0b00000001 | (canal << 2);
  2832   001268  4403               	rlncf	Conversion@canal^0,w,c
  2833   00126A  46E8               	rlncf	wreg,f,c
  2834   00126C  0BFC               	andlw	252
  2835   00126E  0901               	iorlw	1
  2836   001270  6EC2               	movwf	194,c	;volatile
  2837                           
  2838                           ;Lab5.c: 286: GO = 1;
  2839   001272  82C2               	bsf	4034,1,c	;volatile
  2840   001274                     l282:
  2841   001274  A2C2               	btfss	4034,1,c	;volatile
  2842   001276  0012               	return	
  2843   001278  D7FD               	goto	l282
  2844   00127A                     __end_of_Conversion:
  2845                           	callstack 0
  2846                           
  2847 ;; *************** function _ConfiguraLCD *****************
  2848 ;; Defined at:
  2849 ;;		line 50 in file "LibLCDXC8.h"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  a               1    wreg     unsigned char 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  a               1    2[COMRAM] unsigned char 
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2863 ;;      Params:         0       0       0       0       0       0       0       0       0
  2864 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2865 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2866 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2867 ;;Total ram usage:        1 bytes
  2868 ;; Hardware stack levels used: 1
  2869 ;; Hardware stack levels required when called: 2
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_main
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text22
  2878   00120E                     __ptext22:
  2879                           	callstack 0
  2880   00120E                     _ConfiguraLCD:
  2881                           	callstack 28
  2882                           
  2883                           ;incstack = 0
  2884                           ;ConfiguraLCD@a stored from wreg
  2885   00120E  6E03               	movwf	ConfiguraLCD@a^0,c
  2886                           
  2887                           ;LibLCDXC8.h: 51: if(a==4 | a ==8)
  2888   001210  0E04               	movlw	4
  2889   001212  1803               	xorwf	ConfiguraLCD@a^0,w,c
  2890   001214  B4D8               	btfsc	status,2,c
  2891   001216  D004               	goto	u240
  2892   001218  0E08               	movlw	8
  2893   00121A  1803               	xorwf	ConfiguraLCD@a^0,w,c
  2894   00121C  A4D8               	btfss	status,2,c
  2895   00121E  0012               	return	
  2896   001220                     u240:
  2897                           
  2898                           ;LibLCDXC8.h: 52: interfaz=a;
  2899   001220  C003  F022         	movff	ConfiguraLCD@a,_interfaz
  2900   001224  0012               	return		;funcret
  2901   001226                     __end_of_ConfiguraLCD:
  2902                           	callstack 0
  2903                           
  2904 ;; *************** function _ColorRGB *****************
  2905 ;; Defined at:
  2906 ;;		line 248 in file "Lab5.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  val             2    2[COMRAM] unsigned int 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, status,2, status,0
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2920 ;;      Params:         2       0       0       0       0       0       0       0       0
  2921 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2922 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2923 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2924 ;;Total ram usage:        2 bytes
  2925 ;; Hardware stack levels used: 1
  2926 ;; Hardware stack levels required when called: 2
  2927 ;; This function calls:
  2928 ;;		Nothing
  2929 ;; This function is called by:
  2930 ;;		_main
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text23
  2935   000CA2                     __ptext23:
  2936                           	callstack 0
  2937   000CA2                     _ColorRGB:
  2938                           	callstack 28
  2939                           
  2940                           ;Lab5.c: 249: if (val < 22) {
  2941                           
  2942                           ;incstack = 0
  2943   000CA2  5004               	movf	(ColorRGB@val+1)^0,w,c
  2944   000CA4  E108               	bnz	l1808
  2945   000CA6  0E16               	movlw	22
  2946   000CA8  5C03               	subwf	ColorRGB@val^0,w,c
  2947   000CAA  B0D8               	btfsc	status,0,c
  2948   000CAC  D004               	goto	l1808
  2949                           
  2950                           ;Lab5.c: 250: RB7 = 0;
  2951   000CAE  9E81               	bcf	3969,7,c	;volatile
  2952                           
  2953                           ;Lab5.c: 251: RB6 = 0;
  2954   000CB0  9C81               	bcf	3969,6,c	;volatile
  2955                           
  2956                           ;Lab5.c: 252: RB5 = 0;
  2957   000CB2  9A81               	bcf	3969,5,c	;volatile
  2958                           
  2959                           ;Lab5.c: 253: } else if (val >= 22 && val < 25) {
  2960   000CB4  0012               	return	
  2961   000CB6                     l1808:
  2962   000CB6  5004               	movf	(ColorRGB@val+1)^0,w,c
  2963   000CB8  E104               	bnz	u840
  2964   000CBA  0E16               	movlw	22
  2965   000CBC  5C03               	subwf	ColorRGB@val^0,w,c
  2966   000CBE  A0D8               	btfss	status,0,c
  2967   000CC0  D00A               	goto	l1814
  2968   000CC2                     u840:
  2969   000CC2  5004               	movf	(ColorRGB@val+1)^0,w,c
  2970   000CC4  E108               	bnz	l1814
  2971   000CC6  0E19               	movlw	25
  2972   000CC8  5C03               	subwf	ColorRGB@val^0,w,c
  2973   000CCA  B0D8               	btfsc	status,0,c
  2974   000CCC  D004               	goto	l1814
  2975                           
  2976                           ;Lab5.c: 254: RB7 = 1;
  2977   000CCE  8E81               	bsf	3969,7,c	;volatile
  2978                           
  2979                           ;Lab5.c: 255: RB6 = 0;
  2980   000CD0  9C81               	bcf	3969,6,c	;volatile
  2981                           
  2982                           ;Lab5.c: 256: RB5 = 1;
  2983   000CD2  8A81               	bsf	3969,5,c	;volatile
  2984                           
  2985                           ;Lab5.c: 257: } else if (val >= 25 && val < 28) {
  2986   000CD4  0012               	return	
  2987   000CD6                     l1814:
  2988   000CD6  5004               	movf	(ColorRGB@val+1)^0,w,c
  2989   000CD8  E104               	bnz	u860
  2990   000CDA  0E19               	movlw	25
  2991   000CDC  5C03               	subwf	ColorRGB@val^0,w,c
  2992   000CDE  A0D8               	btfss	status,0,c
  2993   000CE0  D00A               	goto	l1820
  2994   000CE2                     u860:
  2995   000CE2  5004               	movf	(ColorRGB@val+1)^0,w,c
  2996   000CE4  E108               	bnz	l1820
  2997   000CE6  0E1C               	movlw	28
  2998   000CE8  5C03               	subwf	ColorRGB@val^0,w,c
  2999   000CEA  B0D8               	btfsc	status,0,c
  3000   000CEC  D004               	goto	l1820
  3001                           
  3002                           ;Lab5.c: 258: RB7 = 0;
  3003   000CEE  9E81               	bcf	3969,7,c	;volatile
  3004                           
  3005                           ;Lab5.c: 259: RB6 = 0;
  3006   000CF0  9C81               	bcf	3969,6,c	;volatile
  3007                           
  3008                           ;Lab5.c: 260: RB5 = 1;
  3009   000CF2  8A81               	bsf	3969,5,c	;volatile
  3010                           
  3011                           ;Lab5.c: 261: } else if (val >= 28 && val < 31) {
  3012   000CF4  0012               	return	
  3013   000CF6                     l1820:
  3014   000CF6  5004               	movf	(ColorRGB@val+1)^0,w,c
  3015   000CF8  E104               	bnz	u880
  3016   000CFA  0E1C               	movlw	28
  3017   000CFC  5C03               	subwf	ColorRGB@val^0,w,c
  3018   000CFE  A0D8               	btfss	status,0,c
  3019   000D00  D00A               	goto	l1826
  3020   000D02                     u880:
  3021   000D02  5004               	movf	(ColorRGB@val+1)^0,w,c
  3022   000D04  E108               	bnz	l1826
  3023   000D06  0E1F               	movlw	31
  3024   000D08  5C03               	subwf	ColorRGB@val^0,w,c
  3025   000D0A  B0D8               	btfsc	status,0,c
  3026   000D0C  D004               	goto	l1826
  3027                           
  3028                           ;Lab5.c: 262: RB7 = 0;
  3029   000D0E  9E81               	bcf	3969,7,c	;volatile
  3030                           
  3031                           ;Lab5.c: 263: RB6 = 1;
  3032   000D10  8C81               	bsf	3969,6,c	;volatile
  3033                           
  3034                           ;Lab5.c: 264: RB5 = 1;
  3035   000D12  8A81               	bsf	3969,5,c	;volatile
  3036                           
  3037                           ;Lab5.c: 265: } else if (val >= 31 && val < 34) {
  3038   000D14  0012               	return	
  3039   000D16                     l1826:
  3040   000D16  5004               	movf	(ColorRGB@val+1)^0,w,c
  3041   000D18  E104               	bnz	u900
  3042   000D1A  0E1F               	movlw	31
  3043   000D1C  5C03               	subwf	ColorRGB@val^0,w,c
  3044   000D1E  A0D8               	btfss	status,0,c
  3045   000D20  D00A               	goto	l1832
  3046   000D22                     u900:
  3047   000D22  5004               	movf	(ColorRGB@val+1)^0,w,c
  3048   000D24  E108               	bnz	l1832
  3049   000D26  0E22               	movlw	34
  3050   000D28  5C03               	subwf	ColorRGB@val^0,w,c
  3051   000D2A  B0D8               	btfsc	status,0,c
  3052   000D2C  D004               	goto	l1832
  3053                           
  3054                           ;Lab5.c: 266: RB7 = 0;
  3055   000D2E  9E81               	bcf	3969,7,c	;volatile
  3056                           
  3057                           ;Lab5.c: 267: RB6 = 1;
  3058   000D30  8C81               	bsf	3969,6,c	;volatile
  3059                           
  3060                           ;Lab5.c: 268: RB5 = 0;
  3061   000D32  9A81               	bcf	3969,5,c	;volatile
  3062                           
  3063                           ;Lab5.c: 269: } else if (val >= 34 && val < 37) {
  3064   000D34  0012               	return	
  3065   000D36                     l1832:
  3066   000D36  5004               	movf	(ColorRGB@val+1)^0,w,c
  3067   000D38  E104               	bnz	u920
  3068   000D3A  0E22               	movlw	34
  3069   000D3C  5C03               	subwf	ColorRGB@val^0,w,c
  3070   000D3E  A0D8               	btfss	status,0,c
  3071   000D40  D00A               	goto	l1838
  3072   000D42                     u920:
  3073   000D42  5004               	movf	(ColorRGB@val+1)^0,w,c
  3074   000D44  E108               	bnz	l1838
  3075   000D46  0E25               	movlw	37
  3076   000D48  5C03               	subwf	ColorRGB@val^0,w,c
  3077   000D4A  B0D8               	btfsc	status,0,c
  3078   000D4C  D004               	goto	l1838
  3079                           
  3080                           ;Lab5.c: 270: RB7 = 1;
  3081   000D4E  8E81               	bsf	3969,7,c	;volatile
  3082                           
  3083                           ;Lab5.c: 271: RB6 = 1;
  3084   000D50  8C81               	bsf	3969,6,c	;volatile
  3085                           
  3086                           ;Lab5.c: 272: RB5 = 0;
  3087   000D52  9A81               	bcf	3969,5,c	;volatile
  3088                           
  3089                           ;Lab5.c: 273: } else if (val >= 37 && val < 40) {
  3090   000D54  0012               	return	
  3091   000D56                     l1838:
  3092   000D56  5004               	movf	(ColorRGB@val+1)^0,w,c
  3093   000D58  E104               	bnz	u940
  3094   000D5A  0E25               	movlw	37
  3095   000D5C  5C03               	subwf	ColorRGB@val^0,w,c
  3096   000D5E  A0D8               	btfss	status,0,c
  3097   000D60  D00A               	goto	l1844
  3098   000D62                     u940:
  3099   000D62  5004               	movf	(ColorRGB@val+1)^0,w,c
  3100   000D64  E108               	bnz	l1844
  3101   000D66  0E28               	movlw	40
  3102   000D68  5C03               	subwf	ColorRGB@val^0,w,c
  3103   000D6A  B0D8               	btfsc	status,0,c
  3104   000D6C  D004               	goto	l1844
  3105                           
  3106                           ;Lab5.c: 274: RB7 = 1;
  3107   000D6E  8E81               	bsf	3969,7,c	;volatile
  3108                           
  3109                           ;Lab5.c: 275: RB6 = 0;
  3110   000D70  9C81               	bcf	3969,6,c	;volatile
  3111                           
  3112                           ;Lab5.c: 276: RB5 = 0;
  3113   000D72  9A81               	bcf	3969,5,c	;volatile
  3114                           
  3115                           ;Lab5.c: 277: } else if (val >= 40) {
  3116   000D74  0012               	return	
  3117   000D76                     l1844:
  3118   000D76  5004               	movf	(ColorRGB@val+1)^0,w,c
  3119   000D78  E104               	bnz	u960
  3120   000D7A  0E28               	movlw	40
  3121   000D7C  5C03               	subwf	ColorRGB@val^0,w,c
  3122   000D7E  A0D8               	btfss	status,0,c
  3123   000D80  0012               	return	
  3124   000D82                     u960:
  3125                           
  3126                           ;Lab5.c: 278: RB7 = 1;
  3127   000D82  8E81               	bsf	3969,7,c	;volatile
  3128                           
  3129                           ;Lab5.c: 279: RB6 = 1;
  3130   000D84  8C81               	bsf	3969,6,c	;volatile
  3131                           
  3132                           ;Lab5.c: 280: RB5 = 1;
  3133   000D86  8A81               	bsf	3969,5,c	;volatile
  3134   000D88  0012               	return	
  3135   000D8A                     __end_of_ColorRGB:
  3136                           	callstack 0
  3137                           
  3138 ;; *************** function _ISR *****************
  3139 ;; Defined at:
  3140 ;;		line 320 in file "Lab5.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;		None
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;		None
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2, status,0, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3154 ;;      Params:         0       0       0       0       0       0       0       0       0
  3155 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3156 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3157 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3158 ;;Total ram usage:        2 bytes
  3159 ;; Hardware stack levels used: 1
  3160 ;; Hardware stack levels required when called: 1
  3161 ;; This function calls:
  3162 ;;		_Recibir
  3163 ;; This function is called by:
  3164 ;;		Interrupt level 2
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	intcode
  3169   000008                     __pintcode:
  3170                           	callstack 0
  3171   000008                     _ISR:
  3172                           	callstack 24
  3173                           
  3174                           ;incstack = 0
  3175   000008  8223               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3176   00000A  ED13  F007         	call	int_func,f	;refresh shadow registers
  3177                           
  3178                           	psect	intcode_body
  3179   000E26                     __pintcode_body:
  3180                           	callstack 24
  3181   000E26                     int_func:
  3182                           	callstack 24
  3183   000E26  0006               	pop		; remove dummy address from shadow register refresh
  3184                           
  3185                           ;Lab5.c: 321: if(TMR0IF){
  3186   000E28  A4F2               	btfss	4082,2,c	;volatile
  3187   000E2A  D00A               	goto	i2l1616
  3188                           
  3189                           ;Lab5.c: 322: TMR0IF=0;
  3190   000E2C  94F2               	bcf	4082,2,c	;volatile
  3191                           
  3192                           ;Lab5.c: 323: RC0 = !RC0;
  3193   000E2E  B082               	btfsc	3970,0,c	;volatile
  3194   000E30  D002               	goto	i2u60_40
  3195   000E32  8082               	bsf	3970,0,c	;volatile
  3196   000E34  D001               	goto	i2u61_45
  3197   000E36                     i2u60_40:
  3198   000E36  9082               	bcf	3970,0,c	;volatile
  3199   000E38                     i2u61_45:
  3200                           
  3201                           ;Lab5.c: 324: TMR0 = 3036;
  3202   000E38  0E0B               	movlw	11
  3203   000E3A  6ED7               	movwf	215,c	;volatile
  3204   000E3C  0EDC               	movlw	220
  3205   000E3E  6ED6               	movwf	214,c	;volatile
  3206   000E40                     i2l1616:
  3207                           
  3208                           ;Lab5.c: 326: };Lab5.c: 327: if(RCIF){
  3209   000E40  BA9E               	btfsc	3998,5,c	;volatile
  3210   000E42  D01A               	goto	i2l1630
  3211   000E44  D033               	goto	i2l308
  3212   000E46                     i2l1620:
  3213                           
  3214                           ;Lab5.c: 330: A=0;
  3215   000E46  0E00               	movlw	0
  3216   000E48  6E1D               	movwf	(_A+1)^0,c
  3217   000E4A  0E00               	movlw	0
  3218   000E4C  6E1C               	movwf	_A^0,c
  3219                           
  3220                           ;Lab5.c: 331: B=0;
  3221   000E4E  0E00               	movlw	0
  3222   000E50  6E1B               	movwf	(_B+1)^0,c
  3223   000E52  0E00               	movlw	0
  3224   000E54  D00F               	goto	L9
  3225   000E56                     i2l1622:
  3226                           
  3227                           ;Lab5.c: 334: A=0;
  3228   000E56  0E00               	movlw	0
  3229   000E58  6E1D               	movwf	(_A+1)^0,c
  3230   000E5A  0E00               	movlw	0
  3231   000E5C  D007               	goto	L11
  3232   000E5E                     i2l1624:
  3233                           
  3234                           ;Lab5.c: 338: A=1;
  3235   000E5E  0E00               	movlw	0
  3236   000E60  6E1D               	movwf	(_A+1)^0,c
  3237   000E62  0E01               	movlw	1
  3238   000E64  D7F3               	goto	L10
  3239   000E66                     i2l1626:
  3240                           
  3241                           ;Lab5.c: 342: A=1;
  3242   000E66  0E00               	movlw	0
  3243   000E68  6E1D               	movwf	(_A+1)^0,c
  3244   000E6A  0E01               	movlw	1
  3245   000E6C                     L11:
  3246   000E6C  6E1C               	movwf	_A^0,c
  3247                           
  3248                           ;Lab5.c: 343: B=1;
  3249   000E6E  0E00               	movlw	0
  3250   000E70  6E1B               	movwf	(_B+1)^0,c
  3251   000E72  0E01               	movlw	1
  3252   000E74                     L9:
  3253   000E74  6E1A               	movwf	_B^0,c
  3254                           
  3255                           ;Lab5.c: 344: break;
  3256   000E76  D00E               	goto	i2l1632
  3257   000E78                     i2l1630:
  3258   000E78  EC51  F009         	call	_Recibir	;wreg free
  3259                           
  3260                           ; Switch size 1, requested type "simple"
  3261                           ; Number of cases is 4, Range of values is 67 to 82
  3262                           ; switch strategies available:
  3263                           ; Name         Instructions Cycles
  3264                           ; simple_byte           13     7 (average)
  3265                           ;	Chosen strategy is simple_byte
  3266   000E7C  0A43               	xorlw	67	; case 67
  3267   000E7E  B4D8               	btfsc	status,2,c
  3268   000E80  D7E2               	goto	i2l1620
  3269   000E82  0A05               	xorlw	5	; case 70
  3270   000E84  B4D8               	btfsc	status,2,c
  3271   000E86  D7EF               	goto	i2l1626
  3272   000E88  0A0D               	xorlw	13	; case 75
  3273   000E8A  B4D8               	btfsc	status,2,c
  3274   000E8C  D7E4               	goto	i2l1622
  3275   000E8E  0A19               	xorlw	25	; case 82
  3276   000E90  B4D8               	btfsc	status,2,c
  3277   000E92  D7E5               	goto	i2l1624
  3278   000E94                     i2l1632:
  3279                           
  3280                           ;Lab5.c: 348: _delay((unsigned long)((100)*(8000000/4000.0)));
  3281   000E94  0E02               	movlw	2
  3282   000E96  6E02               	movwf	(??_ISR+1)^0,c
  3283   000E98  0E04               	movlw	4
  3284   000E9A  6E01               	movwf	??_ISR^0,c
  3285   000E9C  0EBA               	movlw	186
  3286   000E9E                     i2u123_47:
  3287   000E9E  2EE8               	decfsz	wreg,f,c
  3288   000EA0  D7FE               	bra	i2u123_47
  3289   000EA2  2E01               	decfsz	??_ISR^0,f,c
  3290   000EA4  D7FC               	bra	i2u123_47
  3291   000EA6  2E02               	decfsz	(??_ISR+1)^0,f,c
  3292   000EA8  D7FA               	bra	i2u123_47
  3293   000EAA  D000               	nop2	
  3294   000EAC                     i2l308:
  3295   000EAC  9223               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3296   000EAE  0011               	retfie		f
  3297   000EB0                     __end_of_ISR:
  3298                           	callstack 0
  3299                           
  3300 ;; *************** function _Recibir *****************
  3301 ;; Defined at:
  3302 ;;		line 173 in file "Lab5.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;		None
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      unsigned char 
  3309 ;; Registers used:
  3310 ;;		wreg, status,2
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3316 ;;      Params:         0       0       0       0       0       0       0       0       0
  3317 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3319 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3320 ;;Total ram usage:        0 bytes
  3321 ;; Hardware stack levels used: 1
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_ISR
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text25
  3330   0012A2                     __ptext25:
  3331                           	callstack 0
  3332   0012A2                     _Recibir:
  3333                           	callstack 24
  3334                           
  3335                           ;Lab5.c: 174: while(RCIF==0);
  3336                           
  3337                           ;incstack = 0
  3338   0012A2  AA9E               	btfss	3998,5,c	;volatile
  3339   0012A4  D7FE               	goto	__ptext25
  3340                           
  3341                           ;Lab5.c: 175: return RCREG;
  3342   0012A6  50AE               	movf	174,w,c	;volatile
  3343   0012A8  0012               	return		;funcret
  3344   0012AA                     __end_of_Recibir:
  3345                           	callstack 0
  3346                           
  3347                           	psect	rparam
  3348   000000                     
  3349                           	psect	temp
  3350   000023                     btemp:
  3351                           	callstack 0
  3352   000023                     	ds	1
  3353   000000                     int$flags	set	btemp
  3354   000000                     wtemp8	set	btemp+1
  3355   000000                     ttemp5	set	btemp+1
  3356   000000                     ttemp6	set	btemp+4
  3357   000000                     ttemp7	set	btemp+8
  3358                           
  3359                           	psect	idloc
  3360                           
  3361                           ;Config register IDLOC0 @ 0x200000
  3362                           ;	unspecified, using default values
  3363   200000                     	org	2097152
  3364   200000  FF                 	db	255
  3365                           
  3366                           ;Config register IDLOC1 @ 0x200001
  3367                           ;	unspecified, using default values
  3368   200001                     	org	2097153
  3369   200001  FF                 	db	255
  3370                           
  3371                           ;Config register IDLOC2 @ 0x200002
  3372                           ;	unspecified, using default values
  3373   200002                     	org	2097154
  3374   200002  FF                 	db	255
  3375                           
  3376                           ;Config register IDLOC3 @ 0x200003
  3377                           ;	unspecified, using default values
  3378   200003                     	org	2097155
  3379   200003  FF                 	db	255
  3380                           
  3381                           ;Config register IDLOC4 @ 0x200004
  3382                           ;	unspecified, using default values
  3383   200004                     	org	2097156
  3384   200004  FF                 	db	255
  3385                           
  3386                           ;Config register IDLOC5 @ 0x200005
  3387                           ;	unspecified, using default values
  3388   200005                     	org	2097157
  3389   200005  FF                 	db	255
  3390                           
  3391                           ;Config register IDLOC6 @ 0x200006
  3392                           ;	unspecified, using default values
  3393   200006                     	org	2097158
  3394   200006  FF                 	db	255
  3395                           
  3396                           ;Config register IDLOC7 @ 0x200007
  3397                           ;	unspecified, using default values
  3398   200007                     	org	2097159
  3399   200007  FF                 	db	255
  3400                           
  3401                           	psect	config
  3402                           
  3403                           ;Config register CONFIG1L @ 0x300000
  3404                           ;	unspecified, using default values
  3405                           ;	PLL Prescaler Selection bits
  3406                           ;	PLLDIV = 0x0, unprogrammed default
  3407                           ;	System Clock Postscaler Selection bits
  3408                           ;	CPUDIV = 0x0, unprogrammed default
  3409                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3410                           ;	USBDIV = 0x0, unprogrammed default
  3411   300000                     	org	3145728
  3412   300000  00                 	db	0
  3413                           
  3414                           ;Config register CONFIG1H @ 0x300001
  3415                           ;	Oscillator Selection bits
  3416                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3417                           ;	Fail-Safe Clock Monitor Enable bit
  3418                           ;	FCMEN = 0x0, unprogrammed default
  3419                           ;	Internal/External Oscillator Switchover bit
  3420                           ;	IESO = 0x0, unprogrammed default
  3421   300001                     	org	3145729
  3422   300001  09                 	db	9
  3423                           
  3424                           ;Config register CONFIG2L @ 0x300002
  3425                           ;	unspecified, using default values
  3426                           ;	Power-up Timer Enable bit
  3427                           ;	PWRT = 0x1, unprogrammed default
  3428                           ;	Brown-out Reset Enable bits
  3429                           ;	BOR = 0x3, unprogrammed default
  3430                           ;	Brown-out Reset Voltage bits
  3431                           ;	BORV = 0x3, unprogrammed default
  3432                           ;	USB Voltage Regulator Enable bit
  3433                           ;	VREGEN = 0x0, unprogrammed default
  3434   300002                     	org	3145730
  3435   300002  1F                 	db	31
  3436                           
  3437                           ;Config register CONFIG2H @ 0x300003
  3438                           ;	Watchdog Timer Enable bit
  3439                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3440                           ;	Watchdog Timer Postscale Select bits
  3441                           ;	WDTPS = 0xF, unprogrammed default
  3442   300003                     	org	3145731
  3443   300003  1E                 	db	30
  3444                           
  3445                           ; Padding undefined space
  3446   300004                     	org	3145732
  3447   300004  FF                 	db	255
  3448                           
  3449                           ;Config register CONFIG3H @ 0x300005
  3450                           ;	CCP2 MUX bit
  3451                           ;	CCP2MX = 0x1, unprogrammed default
  3452                           ;	PORTB A/D Enable bit
  3453                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3454                           ;	Low-Power Timer 1 Oscillator Enable bit
  3455                           ;	LPT1OSC = 0x0, unprogrammed default
  3456                           ;	MCLR Pin Enable bit
  3457                           ;	MCLRE = 0x1, unprogrammed default
  3458   300005                     	org	3145733
  3459   300005  81                 	db	129
  3460                           
  3461                           ;Config register CONFIG4L @ 0x300006
  3462                           ;	Stack Full/Underflow Reset Enable bit
  3463                           ;	STVREN = 0x1, unprogrammed default
  3464                           ;	Single-Supply ICSP Enable bit
  3465                           ;	LVP = OFF, Single-Supply ICSP disabled
  3466                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3467                           ;	ICPRT = 0x0, unprogrammed default
  3468                           ;	Extended Instruction Set Enable bit
  3469                           ;	XINST = 0x0, unprogrammed default
  3470                           ;	Background Debugger Enable bit
  3471                           ;	DEBUG = 0x1, unprogrammed default
  3472   300006                     	org	3145734
  3473   300006  81                 	db	129
  3474                           
  3475                           ; Padding undefined space
  3476   300007                     	org	3145735
  3477   300007  FF                 	db	255
  3478                           
  3479                           ;Config register CONFIG5L @ 0x300008
  3480                           ;	unspecified, using default values
  3481                           ;	Code Protection bit
  3482                           ;	CP0 = 0x1, unprogrammed default
  3483                           ;	Code Protection bit
  3484                           ;	CP1 = 0x1, unprogrammed default
  3485                           ;	Code Protection bit
  3486                           ;	CP2 = 0x1, unprogrammed default
  3487                           ;	Code Protection bit
  3488                           ;	CP3 = 0x1, unprogrammed default
  3489   300008                     	org	3145736
  3490   300008  0F                 	db	15
  3491                           
  3492                           ;Config register CONFIG5H @ 0x300009
  3493                           ;	unspecified, using default values
  3494                           ;	Boot Block Code Protection bit
  3495                           ;	CPB = 0x1, unprogrammed default
  3496                           ;	Data EEPROM Code Protection bit
  3497                           ;	CPD = 0x1, unprogrammed default
  3498   300009                     	org	3145737
  3499   300009  C0                 	db	192
  3500                           
  3501                           ;Config register CONFIG6L @ 0x30000A
  3502                           ;	unspecified, using default values
  3503                           ;	Write Protection bit
  3504                           ;	WRT0 = 0x1, unprogrammed default
  3505                           ;	Write Protection bit
  3506                           ;	WRT1 = 0x1, unprogrammed default
  3507                           ;	Write Protection bit
  3508                           ;	WRT2 = 0x1, unprogrammed default
  3509                           ;	Write Protection bit
  3510                           ;	WRT3 = 0x1, unprogrammed default
  3511   30000A                     	org	3145738
  3512   30000A  0F                 	db	15
  3513                           
  3514                           ;Config register CONFIG6H @ 0x30000B
  3515                           ;	unspecified, using default values
  3516                           ;	Configuration Register Write Protection bit
  3517                           ;	WRTC = 0x1, unprogrammed default
  3518                           ;	Boot Block Write Protection bit
  3519                           ;	WRTB = 0x1, unprogrammed default
  3520                           ;	Data EEPROM Write Protection bit
  3521                           ;	WRTD = 0x1, unprogrammed default
  3522   30000B                     	org	3145739
  3523   30000B  E0                 	db	224
  3524                           
  3525                           ;Config register CONFIG7L @ 0x30000C
  3526                           ;	unspecified, using default values
  3527                           ;	Table Read Protection bit
  3528                           ;	EBTR0 = 0x1, unprogrammed default
  3529                           ;	Table Read Protection bit
  3530                           ;	EBTR1 = 0x1, unprogrammed default
  3531                           ;	Table Read Protection bit
  3532                           ;	EBTR2 = 0x1, unprogrammed default
  3533                           ;	Table Read Protection bit
  3534                           ;	EBTR3 = 0x1, unprogrammed default
  3535   30000C                     	org	3145740
  3536   30000C  0F                 	db	15
  3537                           
  3538                           ;Config register CONFIG7H @ 0x30000D
  3539                           ;	unspecified, using default values
  3540                           ;	Boot Block Table Read Protection bit
  3541                           ;	EBTRB = 0x1, unprogrammed default
  3542   30000D                     	org	3145741
  3543   30000D  40                 	db	64
  3544                           tosu	equ	0xFFF
  3545                           tosh	equ	0xFFE
  3546                           tosl	equ	0xFFD
  3547                           stkptr	equ	0xFFC
  3548                           pclatu	equ	0xFFB
  3549                           pclath	equ	0xFFA
  3550                           pcl	equ	0xFF9
  3551                           tblptru	equ	0xFF8
  3552                           tblptrh	equ	0xFF7
  3553                           tblptrl	equ	0xFF6
  3554                           tablat	equ	0xFF5
  3555                           prodh	equ	0xFF4
  3556                           prodl	equ	0xFF3
  3557                           indf0	equ	0xFEF
  3558                           postinc0	equ	0xFEE
  3559                           postdec0	equ	0xFED
  3560                           preinc0	equ	0xFEC
  3561                           plusw0	equ	0xFEB
  3562                           fsr0h	equ	0xFEA
  3563                           fsr0l	equ	0xFE9
  3564                           wreg	equ	0xFE8
  3565                           indf1	equ	0xFE7
  3566                           postinc1	equ	0xFE6
  3567                           postdec1	equ	0xFE5
  3568                           preinc1	equ	0xFE4
  3569                           plusw1	equ	0xFE3
  3570                           fsr1h	equ	0xFE2
  3571                           fsr1l	equ	0xFE1
  3572                           bsr	equ	0xFE0
  3573                           indf2	equ	0xFDF
  3574                           postinc2	equ	0xFDE
  3575                           postdec2	equ	0xFDD
  3576                           preinc2	equ	0xFDC
  3577                           plusw2	equ	0xFDB
  3578                           fsr2h	equ	0xFDA
  3579                           fsr2l	equ	0xFD9
  3580                           status	equ	0xFD8

Data Sizes:
    Strings     45
    Constant    0
    Data        1
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      34
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[9]), STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[13]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[9]), STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[13]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[9]), STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->_MensajeLCD_Var
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7410
                                             23 COMRAM     2     2      0
                           _BorraLCD
                           _ColorRGB
                       _ConfiguraLCD
                         _Conversion
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                          _LeerDHT11
                     _MensajeLCD_Var
                    _ReadData_EEPROM
                    _SaveData_EEPROM
                    _TransmitirDatos
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     14    10      4    4796
                                             11 COMRAM    12     8      4
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                     _MensajeLCD_Var
                         _Transmitir
                            ___awdiv
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     387
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     390
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Var                                       4     3      1     694
                                              7 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2     166
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0      90
                                              6 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                              6 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _SaveData_EEPROM                                      3     0      3     196
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _ReadData_EEPROM                                      2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LeerDHT11                                            3     3      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      60
                                              4 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      15
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Conversion                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     0      2     384
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0       0
                                              0 COMRAM     2     2      0
                            _Recibir
 ---------------------------------------------------------------------------------
 (7) _Recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _ConfiguraLCD
   _Conversion
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerDHT11
   _MensajeLCD_Var
     _EscribeLCD_c
     _strlen
   _ReadData_EEPROM
   _SaveData_EEPROM
   _TransmitirDatos
     _BorraLCD
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Var
     _Transmitir
     ___awdiv
     ___lbdiv
     ___lbmod
     ___lwdiv
     ___lwmod
     ___wmul
   ___lbdiv
   ___lbmod

 _ISR (ROOT)
   _Recibir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      36        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     19      22       1       36.2%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRlhhl       11      0       0      32        0.0%
BITBIGSFRhlhhh       E      0       0      23        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRll          D      0       0      34        0.0%
BITBIGSFRlhhh        8      0       0      31        0.0%
BITBIGSFRhllhhl      8      0       0      29        0.0%
BITBIGSFRhlhlh       8      0       0      25        0.0%
BITBIGSFRhlhhl       7      0       0      24        0.0%
BITBIGSFRhllhhh      4      0       0      27        0.0%
BITBIGSFRhlll        4      0       0      30        0.0%
BITBIGSFRhllhhh      2      0       0      28        0.0%
BITBIGSFRhllhhh      1      0       0      26        0.0%
BITBIGSFRlhl         1      0       0      33        0.0%
BITBIGSFRhhll        1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      22      35        0.0%
DATA                 0      0      22       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue May 23 19:27:11 2023

                          _A 001C                            _B 001A            Transmitir@BufferT 0003  
                         _GO 007E11                           _RD 007D30                           _WR 007D31  
               ___awdiv@sign 0008                   EnviaDato@a 0006          ___wmul@multiplicand 0005  
                        l211 109A                _InicializaLCD 0D8A                          l216 10B6  
                        l260 09A6                          l255 0864                          l282 1274  
                        l288 1204                          l800 1100                          l790 0FE2  
                        _GIE 007F97                          _RB0 007C08                          _RC0 007C10  
                        _RC1 007C11                          _RC2 007C12                          _RB5 007C0D  
                        _RC4 007C14                          _RB6 007C0E                          _RC5 007C15  
                        _RB7 007C0F                          u240 1220                          _ISR 0008  
                        u800 10E2                          u730 1126                          u900 0D22  
                        u920 0D42                          u840 0CC2                          u690 0EF6  
                        u770 0FBC                          u940 0D62                          u860 0CE2  
                        u960 0D82                          u880 0D02                          _Che 001F  
           TransmitirDatos@n 0012                          wreg 000FE8                         ?_ISR 0001  
                       l2004 0B8E                         l1070 0F38                         l1142 1298  
                       l2030 0C88                         l1072 0F48                         l1080 0F7E  
                       l2016 0C04                         l1074 0F6A                         l1306 0DD8  
                       l1076 0F74                         l1092 1076                         l2028 0C74  
                       l1326 0E10                         l1286 0D9C                         l1702 0F1C  
                       l1296 0DBA                         l1640 11A0                         l1720 1122  
                       l1642 11A2                         l1650 0FF6                         l1706 0F2A  
                       l1820 0CF6                         l1716 111C                         l1732 1140  
                       l1814 0CD6                         l1832 0D36                         l1808 0CB6  
                       l1680 0ED4                         l1728 1138                         l1760 0FB8  
                       l1826 0D16                         l1658 1028                         l1674 0EC4  
                       l1746 1192                         l1738 117A                         l1770 0FD8  
                       l1844 0D76                         l1780 10DE                         l1860 0872  
                       l1838 0D56                         l1686 0EEA                         l1758 0FB0  
                       l1688 0EF2                         l1864 0886                         l1698 0F12  
                       l1786 10F6                         l1778 10D6                         l1874 08E0  
                       l1868 08B2                         l1876 090A                         _CFGS 007D36  
                       _EEIF 007D0C                         STR_1 080E                         STR_2 081B  
                       STR_3 0801                         STR_4 0825                         u1000 0C5A  
                       u1010 0C5C                         u1020 0C68                         u1030 0C6A  
                       u1040 0C9E                         u1107 0BD8                         u1117 0BF4  
                       u1207 0F6C                         u1127 0C0E                         u1217 0F76  
                       u1137 0C24                         u1227 128C                         u1147 1090  
                       u1067 0ACA                         u1157 10A0                         u1077 0B7C  
                       u1167 10AC                         u1087 0BA0                         _LATD 000F8C  
                       u1177 0F3E                         u1097 0BBC                         u1187 0F4E  
                       u1197 0F5E                         _RCIF 007CF5                         _RBPU 007F8F  
                       _TMR0 000FD6                         _TRMT 007D61                         _WREN 007D32  
             ??_EscribeLCD_c 0007                         _main 0AC0                         btemp 0023  
                       prodh 000FF4                         prodl 000FF3                         start 000E  
               ___param_bank 000000                        ??_ISR 0001              __end_of_Recibir 12AA  
             ?_InicializaLCD 0001            ??_SaveData_EEPROM 0006                        ?_main 0001  
            __end_of___awdiv 0F34              __end_of___lbdiv 1144                        _ADRES 000FC3  
                      _EEADR 000FA9                EscribeLCD_c@a 0007              __end_of___lbmod 119A  
                      _EEPGD 007D37                        _T0CON 000FD5              ___awdiv@divisor 0005  
                      _LATC2 007C5A                        _LATE0 007C68                        _LATE1 007C69  
            __end_of___lwdiv 0FEC              __end_of___lwmod 110A                        i2l308 0EAC  
            ___awdiv@counter 0007                        _RCREG 000FAE                        _RCSTA 000FAB  
                      _SPBRG 000FAF                        _USBEN 007B6B                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TXREG 000FAD                        _TXSTA 000FAC                        tablat 000FF5  
                 _Conversion 1266                  _HabilitaLCD 1288                        ttemp5 0024  
                      ttemp6 0027                        ttemp7 002B                        status 000FD8  
                      wtemp8 0024              ___lbdiv@divisor 0003              ___lbdiv@counter 0005  
           __end_of_BorraLCD 1266             __end_of_ColorRGB 0D8A              __initialization 1144  
               __end_of_main 0CA2              _ReadData_EEPROM 127A                       ??_main 0018  
       __end_of_ConfiguraLCD 1226                __activetblptr 000002                       _ADCON0 000FC2  
                     _ADCON1 000FC1                       _ADCON2 000FC0                       _EEDATA 000FA8  
             DireccionaLCD@a 0007                       _EECON2 000FA7             ___awdiv@dividend 0003  
                     i2l1620 0E46                       i2l1622 0E56                       i2l1630 0E78  
                     i2l1624 0E5E                       i2l1632 0E94                       i2l1616 0E40  
                     i2l1626 0E66                       _OSCCON 000FD3                       _TMR0IE 007F95  
                     _TMR0IF 007F92                       _TMR0ON 007EAF                       _TRISC2 007CA2  
      __end_of_DireccionaLCD 1252                       _UTRDIS 007B7B                   _RetardoLCD 0F34  
                  ??_Recibir 0001          TransmitirDatos@Ent1 000C          TransmitirDatos@Ent2 000E  
        TransmitirDatos@Simb 0014                       ___wmul 11C2                    ??___awdiv 0007  
                  ??___lbdiv 0004                    ??___lbmod 0004                    ??___lwdiv 0007  
                  ??___lwmod 0007              ??_InicializaLCD 0007                       clear_0 115C  
           ___awdiv@quotient 0009                       isa$std 000001         __end_of_EscribeLCD_c 123C  
                     _strlen 119A                 __pdataCOMRAM 0022                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
                 _Transmitir 1296             ___lbdiv@dividend 0004                  ?_Conversion 0001  
            ___lbmod@divisor 0003                   __accesstop 0060      __end_of__initialization 1162  
            ___lbmod@counter 0005                ___rparam_used 000001      __end_of_ReadData_EEPROM 1288  
          __end_of_LeerDHT11 10C8               __pcstackCOMRAM 0001            __end_of_EnviaDato 1084  
           ___lbdiv@quotient 0006                    ?_BorraLCD 0001                    ?_ColorRGB 0003  
             _MensajeLCD_Var 0FEC              MensajeLCD_Var@a 0008              MensajeLCD_Var@i 000A  
             LeerDHT11@contr 0004                  ?_RetardoLCD 0001                  RetardoLCD@a 0004  
            _SaveData_EEPROM 11E8                      ?___wmul 0003                      _BAUDCON 000FB8  
                    ?_strlen 0003       __end_of_MensajeLCD_Var 103E                      i2u60_40 0E36  
                    i2u61_45 0E38                   ??_BorraLCD 0007                   ??_ColorRGB 0005  
                ?_Transmitir 0001                 ?_HabilitaLCD 0001                 _ConfiguraLCD 120E  
                    _Humedad 0020                      _Recibir 12A2                      __Hparam 0000  
           ?_ReadData_EEPROM 0003                      __Lparam 0000                      ___awdiv 0EB0  
                    ___lbdiv 110A                      ___lbmod 1170                      ___lwdiv 0F9A  
                    ___lwmod 10C8                 __psmallconst 0800                  _Temperatura 0021  
                    __pcinit 1144                      __ramtop 0800                      __ptext0 0AC0  
                    __ptext1 0830                      __ptext2 11C2                      __ptext3 10C8  
                    __ptext4 0F9A                      __ptext5 1170                      __ptext6 110A  
                    __ptext7 0EB0                      __ptext8 1296                      __ptext9 0FEC  
            ?_MensajeLCD_Var 0008               __pintcode_body 0E26         end_of_initialization 1162  
    __end_of_SaveData_EEPROM 120E              Conversion@canal 0003                __Lmediumconst 0000  
                    int_func 0E26                 _EscribeLCD_c 1226            ??_TransmitirDatos 0010  
                    postinc0 000FEE                      strlen@s 0003             ___lbmod@dividend 0004  
               ??_Conversion 0003                  ___lbmod@rem 0006                    _LeerDHT11 1084  
             __end_of___wmul 11E8                __pidataCOMRAM 12AA        __end_of_InicializaLCD 0E26  
         __end_of_Conversion 127A                    _EnviaDato 103E               __end_of_strlen 11C2  
        start_initialization 1144                  __end_of_ISR 0EB0             ?_SaveData_EEPROM 0003  
               ??_RetardoLCD 0003                     ??___wmul 0007                   ?_LeerDHT11 0001  
                   ??_strlen 0005                   ?_EnviaDato 0001                  __pbssCOMRAM 001A  
         __end_of_RetardoLCD 0F9A                 ??_Transmitir 0003                _DireccionaLCD 123C  
                   ?_Recibir 0001             ___lwdiv@dividend 0003                    __pintcode 0008  
                   ?___awdiv 0003                     ?___lbdiv 0003                     ?___lbmod 0003  
TransmitirDatos@TemperaturaC 0016                     ?___lwdiv 0003                     ?___lwmod 0003  
         __end_of_Transmitir 12A2             ??_MensajeLCD_Var 0009                  __smallconst 0800  
           ___lwdiv@quotient 0007              _TransmitirDatos 0830               ___wmul@product 0007  
             ?_DireccionaLCD 0001                     i2u123_47 0E9E                  ??_LeerDHT11 0003  
          ___wmul@multiplier 0003                  ??_EnviaDato 0005                     _BorraLCD 1252  
                   _ColorRGB 0CA2                     __Hrparam 0000                     __Lrparam 0000  
              ConfiguraLCD@a 0003          SaveData_EEPROM@dato 0005      __end_of_TransmitirDatos 0AC0  
            ___lwdiv@divisor 0005              ___lwdiv@counter 0009                     __ptext10 119A  
                   __ptext11 1226                     __ptext20 1288                     __ptext12 123C  
                   __ptext21 1266                     __ptext13 11E8                     __ptext22 120E  
                   __ptext14 127A                     __ptext23 0CA2                     __ptext15 1084  
                   __ptext16 0D8A                     __ptext25 12A2                     __ptext17 1252  
                   __ptext18 103E                     __ptext19 0F34              ??_DireccionaLCD 0007  
                   _interfaz 0022                     isa$xinst 000000                     int$flags 0023  
          ??_ReadData_EEPROM 0005                     intlevel2 0000           SaveData_EEPROM@dir 0003  
              ??_HabilitaLCD 0003             ___lwmod@dividend 0003                ?_ConfiguraLCD 0001  
                ColorRGB@val 0003           ReadData_EEPROM@dir 0003              ___lwmod@divisor 0005  
                   strlen@cp 0005              ___lwmod@counter 0007             ?_TransmitirDatos 000C  
         _Temperatura_EEPROM 001E               ??_ConfiguraLCD 0003                ?_EscribeLCD_c 0001  
        __end_of_HabilitaLCD 1296  
