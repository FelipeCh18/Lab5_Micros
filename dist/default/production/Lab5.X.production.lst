

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat May 27 13:47:48 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Version 2.40
    47                           ; Generated 04/07/2022 GMT
    48                           ; 
    49                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F4550 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81   000000                     
    82                           	psect	idataCOMRAM
    83   00139C                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for _interfaz
    87   00139C  08                 	db	8
    88   000000                     _EECON2	set	4007
    89   000000                     _RCREG	set	4014
    90   000000                     _TXREG	set	4013
    91   000000                     _TRISC	set	3988
    92   000000                     _TRISD	set	3989
    93   000000                     _SPBRG	set	4015
    94   000000                     _BAUDCON	set	4024
    95   000000                     _RD	set	32048
    96   000000                     _WR	set	32049
    97   000000                     _WREN	set	32050
    98   000000                     _CFGS	set	32054
    99   000000                     _GO	set	32273
   100   000000                     _RB7	set	31759
   101   000000                     _RB6	set	31758
   102   000000                     _RB5	set	31757
   103   000000                     _TRMT	set	32097
   104   000000                     _RC2	set	31762
   105   000000                     _TRISC2	set	31906
   106   000000                     _RB0	set	31752
   107   000000                     _RB2	set	31754
   108   000000                     _TMR0ON	set	32431
   109   000000                     _GIE	set	32663
   110   000000                     _TMR0IE	set	32661
   111   000000                     _LATE1	set	31849
   112   000000                     _LATD	set	3980
   113   000000                     _USBEN	set	31595
   114   000000                     _LATC2	set	31834
   115   000000                     _TRISB	set	3987
   116   000000                     _TRISE	set	3990
   117   000000                     _RCSTA	set	4011
   118   000000                     _TXSTA	set	4012
   119   000000                     _OSCCON	set	4051
   120   000000                     _TRISA0	set	31888
   121   000000                     _LATE0	set	31848
   122   000000                     _T0CON	set	4053
   123   000000                     _RBPU	set	32655
   124   000000                     _ADCON2	set	4032
   125   000000                     _ADCON1	set	4033
   126   000000                     _ADCON0	set	4034
   127   000000                     _RCIF	set	31989
   128   000000                     _ADRES	set	4035
   129   000000                     _UTRDIS	set	31611
   130   000000                     _RB1	set	31753
   131   000000                     _RC4	set	31764
   132   000000                     _TMR0IF	set	32658
   133   000000                     _TMR0	set	4054
   134   000000                     _RE2	set	31778
   135   000000                     _EEDATA	set	4008
   136   000000                     _EEADR	set	4009
   137   000000                     _EEIF	set	32012
   138   000000                     _EEPGD	set	32055
   139                           
   140                           	psect	smallconst
   141   000800                     __psmallconst:
   142                           	callstack 0
   143   000800  00                 	db	0
   144   000801                     STR_1:
   145   000801  55                 	db	85	;'U'
   146   000802  6C                 	db	108	;'l'
   147   000803  74                 	db	116	;'t'
   148   000804  69                 	db	105	;'i'
   149   000805  6D                 	db	109	;'m'
   150   000806  61                 	db	97	;'a'
   151   000807  20                 	db	32
   152   000808  74                 	db	116	;'t'
   153   000809  65                 	db	101	;'e'
   154   00080A  6D                 	db	109	;'m'
   155   00080B  70                 	db	112	;'p'
   156   00080C  3A                 	db	58	;':'
   157   00080D  00                 	db	0
   158   00080E                     STR_2:
   159   00080E  49                 	db	73	;'I'
   160   00080F  6E                 	db	110	;'n'
   161   000810  69                 	db	105	;'i'
   162   000811  63                 	db	99	;'c'
   163   000812  69                 	db	105	;'i'
   164   000813  61                 	db	97	;'a'
   165   000814  6E                 	db	110	;'n'
   166   000815  64                 	db	100	;'d'
   167   000816  6F                 	db	111	;'o'
   168   000817  00                 	db	0
   169   000818                     STR_3:
   170   000818  54                 	db	84	;'T'
   171   000819  65                 	db	101	;'e'
   172   00081A  6D                 	db	109	;'m'
   173   00081B  70                 	db	112	;'p'
   174   00081C  3A                 	db	58	;':'
   175   00081D  00                 	db	0
   176   00081E                     STR_4:
   177   00081E  48                 	db	72	;'H'
   178   00081F  75                 	db	117	;'u'
   179   000820  6D                 	db	109	;'m'
   180   000821  3A                 	db	58	;':'
   181   000822  00                 	db	0
   182   000823  00                 	db	0	; dummy byte at the end
   183   000000                     
   184                           ; #config settings
   185                           
   186                           	psect	cinit
   187   001214                     __pcinit:
   188                           	callstack 0
   189   001214                     start_initialization:
   190                           	callstack 0
   191   001214                     __initialization:
   192                           	callstack 0
   193                           
   194                           ; Initialize objects allocated to COMRAM (1 bytes)
   195                           ; load TBLPTR registers with __pidataCOMRAM
   196   001214  0E9C               	movlw	low __pidataCOMRAM
   197   001216  6EF6               	movwf	tblptrl,c
   198   001218  0E13               	movlw	high __pidataCOMRAM
   199   00121A  6EF7               	movwf	tblptrh,c
   200   00121C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   201   00121E  6EF8               	movwf	tblptru,c
   202   001220  0009               	tblrd		*+	;fetch initializer
   203   001222  CFF5 F020          	movff	tablat,__pdataCOMRAM
   204                           
   205                           ; Clear objects allocated to COMRAM (7 bytes)
   206   001226  EE00  F019         	lfsr	0,__pbssCOMRAM
   207   00122A  0E07               	movlw	7
   208   00122C                     clear_0:
   209   00122C  6AEE               	clrf	postinc0,c
   210   00122E  06E8               	decf	wreg,f,c
   211   001230  E1FD               	bnz	clear_0
   212   001232                     end_of_initialization:
   213                           	callstack 0
   214   001232                     __end_of__initialization:
   215                           	callstack 0
   216   001232  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   217   001234  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   218   001236  0E00               	movlw	low (__Lmediumconst shr (0+16))
   219   001238  6EF8               	movwf	tblptru,c
   220   00123A  0100               	movlb	0
   221   00123C  EF6D  F005         	goto	_main	;jump to C main() function
   222                           
   223                           	psect	bssCOMRAM
   224   000019                     __pbssCOMRAM:
   225                           	callstack 0
   226   000019                     _B:
   227                           	callstack 0
   228   000019                     	ds	2
   229   00001B                     _A:
   230                           	callstack 0
   231   00001B                     	ds	2
   232   00001D                     _TempEEPROM:
   233                           	callstack 0
   234   00001D                     	ds	1
   235   00001E                     _Hum:
   236                           	callstack 0
   237   00001E                     	ds	1
   238   00001F                     _Temp:
   239                           	callstack 0
   240   00001F                     	ds	1
   241                           
   242                           	psect	dataCOMRAM
   243   000020                     __pdataCOMRAM:
   244                           	callstack 0
   245   000020                     _interfaz:
   246                           	callstack 0
   247   000020                     	ds	1
   248                           
   249                           	psect	cstackCOMRAM
   250   000001                     __pcstackCOMRAM:
   251                           	callstack 0
   252   000001                     ??_ISR:
   253   000001                     
   254                           ; 2 bytes @ 0x0
   255   000001                     	ds	2
   256   000003                     ??_RetardoLCD:
   257   000003                     ?_strlen:
   258                           	callstack 0
   259   000003                     ?___wmul:
   260                           	callstack 0
   261   000003                     ?___awdiv:
   262                           	callstack 0
   263   000003                     ?___lwdiv:
   264                           	callstack 0
   265   000003                     ?___lwmod:
   266                           	callstack 0
   267   000003                     ConfiguraLCD@a:
   268                           	callstack 0
   269   000003                     LeerBit@res:
   270                           	callstack 0
   271   000003                     Transmitir@BufferT:
   272                           	callstack 0
   273   000003                     Conversion@canal:
   274                           	callstack 0
   275   000003                     ___lbdiv@divisor:
   276                           	callstack 0
   277   000003                     ___lbmod@divisor:
   278                           	callstack 0
   279   000003                     strlen@s:
   280                           	callstack 0
   281   000003                     ColorRGB@val:
   282                           	callstack 0
   283   000003                     GuardarDatoEnEEPROM@dir:
   284                           	callstack 0
   285   000003                     leerDatoEnEEPROM@dir:
   286                           	callstack 0
   287   000003                     ___wmul@multiplier:
   288                           	callstack 0
   289   000003                     ___awdiv@dividend:
   290                           	callstack 0
   291   000003                     ___lwdiv@dividend:
   292                           	callstack 0
   293   000003                     ___lwmod@dividend:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x2
   297   000003                     	ds	1
   298   000004                     ??_LeerByte:
   299   000004                     RetardoLCD@a:
   300                           	callstack 0
   301   000004                     ___lbdiv@dividend:
   302                           	callstack 0
   303   000004                     ___lbmod@dividend:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x3
   307   000004                     	ds	1
   308   000005                     ??_EnviaDato:
   309   000005                     LeerByte@res:
   310                           	callstack 0
   311   000005                     GuardarDatoEnEEPROM@dato:
   312                           	callstack 0
   313   000005                     ___lbdiv@counter:
   314                           	callstack 0
   315   000005                     ___lbmod@counter:
   316                           	callstack 0
   317   000005                     strlen@cp:
   318                           	callstack 0
   319   000005                     ___wmul@multiplicand:
   320                           	callstack 0
   321   000005                     ___awdiv@divisor:
   322                           	callstack 0
   323   000005                     ___lwdiv@divisor:
   324                           	callstack 0
   325   000005                     ___lwmod@divisor:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x4
   329   000005                     	ds	1
   330   000006                     EnviaDato@a:
   331                           	callstack 0
   332   000006                     LeerByte@i:
   333                           	callstack 0
   334   000006                     ___lbdiv@quotient:
   335                           	callstack 0
   336   000006                     ___lbmod@rem:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x5
   340   000006                     	ds	1
   341   000007                     ??_LeerHT11:
   342   000007                     EscribeLCD_c@a:
   343                           	callstack 0
   344   000007                     DireccionaLCD@a:
   345                           	callstack 0
   346   000007                     ___awdiv@counter:
   347                           	callstack 0
   348   000007                     ___lwmod@counter:
   349                           	callstack 0
   350   000007                     ___wmul@product:
   351                           	callstack 0
   352   000007                     ___lwdiv@quotient:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x6
   356   000007                     	ds	1
   357   000008                     MensajeLCD_Var@a:
   358                           	callstack 0
   359   000008                     ___awdiv@sign:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x7
   363   000008                     	ds	1
   364   000009                     ??_MensajeLCD_Var:
   365   000009                     ___lwdiv@counter:
   366                           	callstack 0
   367   000009                     ___awdiv@quotient:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x8
   371   000009                     	ds	1
   372   00000A                     MensajeLCD_Var@i:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x9
   376   00000A                     	ds	1
   377   00000B                     TransmitirDatos@Ent1:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0xA
   381   00000B                     	ds	2
   382   00000D                     TransmitirDatos@Ent2:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0xC
   386   00000D                     	ds	2
   387   00000F                     ??_TransmitirDatos:
   388                           
   389                           ; 1 bytes @ 0xE
   390   00000F                     	ds	2
   391   000011                     TransmitirDatos@n:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x10
   395   000011                     	ds	2
   396   000013                     TransmitirDatos@Simb:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x12
   400   000013                     	ds	2
   401   000015                     TransmitirDatos@TempC:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x14
   405   000015                     	ds	2
   406   000017                     ??_main:
   407                           
   408                           ; 1 bytes @ 0x16
   409   000017                     	ds	2
   410                           
   411 ;;
   412 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   413 ;;
   414 ;; *************** function _main *****************
   415 ;; Defined at:
   416 ;;		line 35 in file "Lab5.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   430 ;;      Params:         0       0       0       0       0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0       0       0       0       0
   432 ;;      Temps:          2       0       0       0       0       0       0       0       0
   433 ;;      Totals:         2       0       0       0       0       0       0       0       0
   434 ;;Total ram usage:        2 bytes
   435 ;; Hardware stack levels required when called: 6
   436 ;; This function calls:
   437 ;;		_BorraLCD
   438 ;;		_ColorRGB
   439 ;;		_ConfiguraLCD
   440 ;;		_Conversion
   441 ;;		_DireccionaLCD
   442 ;;		_EscribeLCD_c
   443 ;;		_GuardarDatoEnEEPROM
   444 ;;		_InicializaLCD
   445 ;;		_LeerHT11
   446 ;;		_MensajeLCD_Var
   447 ;;		_TransmitirDatos
   448 ;;		___lbdiv
   449 ;;		___lbmod
   450 ;;		_leerDatoEnEEPROM
   451 ;; This function is called by:
   452 ;;		Startup code after reset
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text0
   457   000ADA                     __ptext0:
   458                           	callstack 0
   459   000ADA                     _main:
   460                           	callstack 25
   461                           
   462                           ;Lab5.c: 38: ConfiguraLCD(4);
   463                           
   464                           ;incstack = 0
   465   000ADA  0E04               	movlw	4
   466   000ADC  EC80  F009         	call	_ConfiguraLCD
   467                           
   468                           ;Lab5.c: 39: OSCCON = 0b01110110;
   469   000AE0  0E76               	movlw	118
   470   000AE2  6ED3               	movwf	211,c	;volatile
   471                           
   472                           ;Lab5.c: 40: _delay((unsigned long)((1)*(8000000/4000.0)));
   473   000AE4  0E03               	movlw	3
   474   000AE6  6E17               	movwf	??_main^0,c
   475   000AE8  0E98               	movlw	152
   476   000AEA                     u1177:
   477   000AEA  2EE8               	decfsz	wreg,f,c
   478   000AEC  D7FE               	bra	u1177
   479   000AEE  2E17               	decfsz	??_main^0,f,c
   480   000AF0  D7FC               	bra	u1177
   481                           
   482                           ;Lab5.c: 41: LATC2 = 0;
   483   000AF2  948B               	bcf	3979,2,c	;volatile
   484                           
   485                           ;Lab5.c: 42: TXSTA = 0b00100000;
   486   000AF4  0E20               	movlw	32
   487   000AF6  6EAC               	movwf	172,c	;volatile
   488                           
   489                           ;Lab5.c: 43: RCSTA = 0b10010000;
   490   000AF8  0E90               	movlw	144
   491   000AFA  6EAB               	movwf	171,c	;volatile
   492                           
   493                           ;Lab5.c: 44: BAUDCON = 0b00000000;
   494   000AFC  0E00               	movlw	0
   495   000AFE  6EB8               	movwf	184,c	;volatile
   496                           
   497                           ;Lab5.c: 46: TRISE=0;
   498   000B00  0E00               	movlw	0
   499   000B02  6E96               	movwf	150,c	;volatile
   500                           
   501                           ;Lab5.c: 47: SPBRG = 12;
   502   000B04  0E0C               	movlw	12
   503   000B06  6EAF               	movwf	175,c	;volatile
   504                           
   505                           ;Lab5.c: 49: ADCON0 = 0b00000001;
   506   000B08  0E01               	movlw	1
   507   000B0A  6EC2               	movwf	194,c	;volatile
   508                           
   509                           ;Lab5.c: 50: ADCON1 = 14;
   510   000B0C  0E0E               	movlw	14
   511   000B0E  6EC1               	movwf	193,c	;volatile
   512                           
   513                           ;Lab5.c: 51: ADCON2 = 0b10001000;
   514   000B10  0E88               	movlw	136
   515   000B12  6EC0               	movwf	192,c	;volatile
   516                           
   517                           ;Lab5.c: 54: TRISB = 0b00001110;
   518   000B14  0E0E               	movlw	14
   519   000B16  6E93               	movwf	147,c	;volatile
   520                           
   521                           ;Lab5.c: 55: TRISD = 0;
   522   000B18  0E00               	movlw	0
   523   000B1A  6E95               	movwf	149,c	;volatile
   524                           
   525                           ;Lab5.c: 56: TRISA0 = 1;
   526   000B1C  8092               	bsf	3986,0,c	;volatile
   527                           
   528                           ;Lab5.c: 57: TRISC = 0b11010111;
   529   000B1E  0ED7               	movlw	215
   530   000B20  6E94               	movwf	148,c	;volatile
   531                           
   532                           ;Lab5.c: 58: USBEN = 0;
   533   000B22  966D               	bcf	3949,3,c	;volatile
   534                           
   535                           ;Lab5.c: 59: UTRDIS = 1;
   536   000B24  866F               	bsf	3951,3,c	;volatile
   537                           
   538                           ;Lab5.c: 60: RBPU = 0;
   539   000B26  9EF1               	bcf	4081,7,c	;volatile
   540                           
   541                           ;Lab5.c: 62: TempEEPROM = leerDatoEnEEPROM(0);
   542   000B28  0E00               	movlw	0
   543   000B2A  6E04               	movwf	(leerDatoEnEEPROM@dir+1)^0,c
   544   000B2C  0E00               	movlw	0
   545   000B2E  6E03               	movwf	leerDatoEnEEPROM@dir^0,c
   546   000B30  ECB6  F009         	call	_leerDatoEnEEPROM	;wreg free
   547   000B34  6E1D               	movwf	_TempEEPROM^0,c
   548                           
   549                           ;Lab5.c: 64: InicializaLCD();
   550   000B36  EC1A  F007         	call	_InicializaLCD	;wreg free
   551                           
   552                           ;Lab5.c: 66: T0CON=0b00000011;
   553   000B3A  0E03               	movlw	3
   554   000B3C  6ED5               	movwf	213,c	;volatile
   555                           
   556                           ;Lab5.c: 67: TMR0IF=0;
   557   000B3E  94F2               	bcf	4082,2,c	;volatile
   558                           
   559                           ;Lab5.c: 68: TMR0=3036;
   560   000B40  0E0B               	movlw	11
   561   000B42  6ED7               	movwf	215,c	;volatile
   562   000B44  0EDC               	movlw	220
   563   000B46  6ED6               	movwf	214,c	;volatile
   564                           
   565                           ;Lab5.c: 69: TMR0IE=1;
   566   000B48  8AF2               	bsf	4082,5,c	;volatile
   567                           
   568                           ;Lab5.c: 70: GIE=1;
   569   000B4A  8EF2               	bsf	4082,7,c	;volatile
   570                           
   571                           ;Lab5.c: 71: TMR0ON=1;
   572   000B4C  8ED5               	bsf	4053,7,c	;volatile
   573                           
   574                           ;Lab5.c: 73: BorraLCD();
   575   000B4E  ECA2  F009         	call	_BorraLCD	;wreg free
   576                           
   577                           ;Lab5.c: 75: if (TempEEPROM != 0xFF) {
   578   000B52  281D               	incf	_TempEEPROM^0,w,c
   579   000B54  B4D8               	btfsc	status,2,c
   580   000B56  D02B               	goto	l2040
   581                           
   582                           ;Lab5.c: 76: MensajeLCD_Var("Ultima temp:");
   583   000B58  0E01               	movlw	low STR_1
   584   000B5A  6E08               	movwf	MensajeLCD_Var@a^0,c
   585   000B5C  EC4B  F008         	call	_MensajeLCD_Var	;wreg free
   586                           
   587                           ;Lab5.c: 77: DireccionaLCD(192);
   588   000B60  0EC0               	movlw	192
   589   000B62  EC8C  F009         	call	_DireccionaLCD
   590                           
   591                           ;Lab5.c: 78: EscribeLCD_c(TempEEPROM / 10 + 48);
   592   000B66  0E0A               	movlw	10
   593   000B68  6E03               	movwf	___lbdiv@divisor^0,c
   594   000B6A  501D               	movf	_TempEEPROM^0,w,c
   595   000B6C  ECB8  F008         	call	___lbdiv
   596   000B70  0F30               	addlw	48
   597   000B72  EC97  F009         	call	_EscribeLCD_c
   598                           
   599                           ;Lab5.c: 79: EscribeLCD_c(TempEEPROM % 10 + 48);
   600   000B76  0E0A               	movlw	10
   601   000B78  6E03               	movwf	___lbmod@divisor^0,c
   602   000B7A  501D               	movf	_TempEEPROM^0,w,c
   603   000B7C  EC20  F009         	call	___lbmod
   604   000B80  0F30               	addlw	48
   605   000B82  EC97  F009         	call	_EscribeLCD_c
   606                           
   607                           ;Lab5.c: 80: EscribeLCD_c(223);
   608   000B86  0EDF               	movlw	223
   609   000B88  EC97  F009         	call	_EscribeLCD_c
   610                           
   611                           ;Lab5.c: 81: EscribeLCD_c('C');
   612   000B8C  0E43               	movlw	67
   613   000B8E  EC97  F009         	call	_EscribeLCD_c
   614                           
   615                           ;Lab5.c: 82: _delay((unsigned long)((2000)*(8000000/4000.0)));
   616   000B92  0E15               	movlw	21
   617   000B94  6E18               	movwf	(??_main+1)^0,c
   618   000B96  0E4B               	movlw	75
   619   000B98  6E17               	movwf	??_main^0,c
   620   000B9A  0EBE               	movlw	190
   621   000B9C                     u1187:
   622   000B9C  2EE8               	decfsz	wreg,f,c
   623   000B9E  D7FE               	bra	u1187
   624   000BA0  2E17               	decfsz	??_main^0,f,c
   625   000BA2  D7FC               	bra	u1187
   626   000BA4  2E18               	decfsz	(??_main+1)^0,f,c
   627   000BA6  D7FA               	bra	u1187
   628   000BA8  D000               	nop2	
   629                           
   630                           ;Lab5.c: 83: BorraLCD();
   631   000BAA  ECA2  F009         	call	_BorraLCD	;wreg free
   632   000BAE                     l2040:
   633                           
   634                           ;Lab5.c: 84: };Lab5.c: 86: MensajeLCD_Var("Iniciando");
   635   000BAE  0E0E               	movlw	low STR_2
   636   000BB0  6E08               	movwf	MensajeLCD_Var@a^0,c
   637   000BB2  EC4B  F008         	call	_MensajeLCD_Var	;wreg free
   638                           
   639                           ;Lab5.c: 87: _delay((unsigned long)((500)*(8000000/4000.0)));
   640   000BB6  0E06               	movlw	6
   641   000BB8  6E18               	movwf	(??_main+1)^0,c
   642   000BBA  0E13               	movlw	19
   643   000BBC  6E17               	movwf	??_main^0,c
   644   000BBE  0EAE               	movlw	174
   645   000BC0                     u1197:
   646   000BC0  2EE8               	decfsz	wreg,f,c
   647   000BC2  D7FE               	bra	u1197
   648   000BC4  2E17               	decfsz	??_main^0,f,c
   649   000BC6  D7FC               	bra	u1197
   650   000BC8  2E18               	decfsz	(??_main+1)^0,f,c
   651   000BCA  D7FA               	bra	u1197
   652                           
   653                           ;Lab5.c: 88: EscribeLCD_c('.');
   654   000BCC  0E2E               	movlw	46
   655   000BCE  EC97  F009         	call	_EscribeLCD_c
   656                           
   657                           ;Lab5.c: 89: _delay((unsigned long)((500)*(8000000/4000.0)));
   658   000BD2  0E06               	movlw	6
   659   000BD4  6E18               	movwf	(??_main+1)^0,c
   660   000BD6  0E13               	movlw	19
   661   000BD8  6E17               	movwf	??_main^0,c
   662   000BDA  0EAE               	movlw	174
   663   000BDC                     u1207:
   664   000BDC  2EE8               	decfsz	wreg,f,c
   665   000BDE  D7FE               	bra	u1207
   666   000BE0  2E17               	decfsz	??_main^0,f,c
   667   000BE2  D7FC               	bra	u1207
   668   000BE4  2E18               	decfsz	(??_main+1)^0,f,c
   669   000BE6  D7FA               	bra	u1207
   670                           
   671                           ;Lab5.c: 90: EscribeLCD_c('.');
   672   000BE8  0E2E               	movlw	46
   673   000BEA  EC97  F009         	call	_EscribeLCD_c
   674                           
   675                           ;Lab5.c: 91: _delay((unsigned long)((500)*(8000000/4000.0)));
   676   000BEE  0E06               	movlw	6
   677   000BF0  6E18               	movwf	(??_main+1)^0,c
   678   000BF2  0E13               	movlw	19
   679   000BF4  6E17               	movwf	??_main^0,c
   680   000BF6  0EAE               	movlw	174
   681   000BF8                     u1217:
   682   000BF8  2EE8               	decfsz	wreg,f,c
   683   000BFA  D7FE               	bra	u1217
   684   000BFC  2E17               	decfsz	??_main^0,f,c
   685   000BFE  D7FC               	bra	u1217
   686   000C00  2E18               	decfsz	(??_main+1)^0,f,c
   687   000C02  D7FA               	bra	u1217
   688                           
   689                           ;Lab5.c: 92: EscribeLCD_c('.');
   690   000C04  0E2E               	movlw	46
   691   000C06  EC97  F009         	call	_EscribeLCD_c
   692                           
   693                           ;Lab5.c: 93: _delay((unsigned long)((500)*(8000000/4000.0)));
   694   000C0A  0E06               	movlw	6
   695   000C0C  6E18               	movwf	(??_main+1)^0,c
   696   000C0E  0E13               	movlw	19
   697   000C10  6E17               	movwf	??_main^0,c
   698   000C12  0EAE               	movlw	174
   699   000C14                     u1227:
   700   000C14  2EE8               	decfsz	wreg,f,c
   701   000C16  D7FE               	bra	u1227
   702   000C18  2E17               	decfsz	??_main^0,f,c
   703   000C1A  D7FC               	bra	u1227
   704   000C1C  2E18               	decfsz	(??_main+1)^0,f,c
   705   000C1E  D7FA               	bra	u1227
   706                           
   707                           ;Lab5.c: 94: BorraLCD();
   708   000C20  ECA2  F009         	call	_BorraLCD	;wreg free
   709                           
   710                           ;Lab5.c: 95: _delay((unsigned long)((500)*(8000000/4000.0)));
   711   000C24  0E06               	movlw	6
   712   000C26  6E18               	movwf	(??_main+1)^0,c
   713   000C28  0E13               	movlw	19
   714   000C2A  6E17               	movwf	??_main^0,c
   715   000C2C  0EAE               	movlw	174
   716   000C2E                     u1237:
   717   000C2E  2EE8               	decfsz	wreg,f,c
   718   000C30  D7FE               	bra	u1237
   719   000C32  2E17               	decfsz	??_main^0,f,c
   720   000C34  D7FC               	bra	u1237
   721   000C36  2E18               	decfsz	(??_main+1)^0,f,c
   722   000C38  D7FA               	bra	u1237
   723                           
   724                           ;Lab5.c: 97: MensajeLCD_Var("Temp:");
   725   000C3A  0E18               	movlw	low STR_3
   726   000C3C  6E08               	movwf	MensajeLCD_Var@a^0,c
   727   000C3E  EC4B  F008         	call	_MensajeLCD_Var	;wreg free
   728                           
   729                           ;Lab5.c: 98: _delay((unsigned long)((500)*(8000000/4000.0)));
   730   000C42  0E06               	movlw	6
   731   000C44  6E18               	movwf	(??_main+1)^0,c
   732   000C46  0E13               	movlw	19
   733   000C48  6E17               	movwf	??_main^0,c
   734   000C4A  0EAE               	movlw	174
   735   000C4C                     u1247:
   736   000C4C  2EE8               	decfsz	wreg,f,c
   737   000C4E  D7FE               	bra	u1247
   738   000C50  2E17               	decfsz	??_main^0,f,c
   739   000C52  D7FC               	bra	u1247
   740   000C54  2E18               	decfsz	(??_main+1)^0,f,c
   741   000C56  D7FA               	bra	u1247
   742                           
   743                           ;Lab5.c: 99: DireccionaLCD(0xC0);
   744   000C58  0EC0               	movlw	192
   745   000C5A  EC8C  F009         	call	_DireccionaLCD
   746                           
   747                           ;Lab5.c: 100: MensajeLCD_Var("Hum:");
   748   000C5E  0E1E               	movlw	low STR_4
   749   000C60  6E08               	movwf	MensajeLCD_Var@a^0,c
   750   000C62  EC4B  F008         	call	_MensajeLCD_Var	;wreg free
   751   000C66                     l205:
   752                           
   753                           ;Lab5.c: 102: _delay((unsigned long)((500)*(8000000/4000.0)));
   754   000C66  0E06               	movlw	6
   755   000C68  6E18               	movwf	(??_main+1)^0,c
   756   000C6A  0E13               	movlw	19
   757   000C6C  6E17               	movwf	??_main^0,c
   758   000C6E  0EAE               	movlw	174
   759   000C70                     u1257:
   760   000C70  2EE8               	decfsz	wreg,f,c
   761   000C72  D7FE               	bra	u1257
   762   000C74  2E17               	decfsz	??_main^0,f,c
   763   000C76  D7FC               	bra	u1257
   764   000C78  2E18               	decfsz	(??_main+1)^0,f,c
   765   000C7A  D7FA               	bra	u1257
   766                           
   767                           ;Lab5.c: 104: _delay((unsigned long)((500)*(8000000/4000.0)));
   768   000C7C  0E06               	movlw	6
   769   000C7E  6E18               	movwf	(??_main+1)^0,c
   770   000C80  0E13               	movlw	19
   771   000C82  6E17               	movwf	??_main^0,c
   772   000C84  0EAE               	movlw	174
   773   000C86                     u1267:
   774   000C86  2EE8               	decfsz	wreg,f,c
   775   000C88  D7FE               	bra	u1267
   776   000C8A  2E17               	decfsz	??_main^0,f,c
   777   000C8C  D7FC               	bra	u1267
   778   000C8E  2E18               	decfsz	(??_main+1)^0,f,c
   779   000C90  D7FA               	bra	u1267
   780                           
   781                           ;Lab5.c: 106: LeerHT11();
   782   000C92  ECD5  F008         	call	_LeerHT11	;wreg free
   783                           
   784                           ;Lab5.c: 107: _delay((unsigned long)((100)*(8000000/4000.0)));
   785   000C96  0E02               	movlw	2
   786   000C98  6E18               	movwf	(??_main+1)^0,c
   787   000C9A  0E04               	movlw	4
   788   000C9C  6E17               	movwf	??_main^0,c
   789   000C9E  0EBA               	movlw	186
   790   000CA0                     u1277:
   791   000CA0  2EE8               	decfsz	wreg,f,c
   792   000CA2  D7FE               	bra	u1277
   793   000CA4  2E17               	decfsz	??_main^0,f,c
   794   000CA6  D7FC               	bra	u1277
   795   000CA8  2E18               	decfsz	(??_main+1)^0,f,c
   796   000CAA  D7FA               	bra	u1277
   797   000CAC  D000               	nop2	
   798                           
   799                           ;Lab5.c: 109: GuardarDatoEnEEPROM(0, Temp);
   800   000CAE  0E00               	movlw	0
   801   000CB0  6E04               	movwf	(GuardarDatoEnEEPROM@dir+1)^0,c
   802   000CB2  0E00               	movlw	0
   803   000CB4  6E03               	movwf	GuardarDatoEnEEPROM@dir^0,c
   804   000CB6  C01F  F005         	movff	_Temp,GuardarDatoEnEEPROM@dato
   805   000CBA  EC5C  F009         	call	_GuardarDatoEnEEPROM	;wreg free
   806                           
   807                           ;Lab5.c: 110: _delay((unsigned long)((100)*(8000000/4000.0)));
   808   000CBE  0E02               	movlw	2
   809   000CC0  6E18               	movwf	(??_main+1)^0,c
   810   000CC2  0E04               	movlw	4
   811   000CC4  6E17               	movwf	??_main^0,c
   812   000CC6  0EBA               	movlw	186
   813   000CC8                     u1287:
   814   000CC8  2EE8               	decfsz	wreg,f,c
   815   000CCA  D7FE               	bra	u1287
   816   000CCC  2E17               	decfsz	??_main^0,f,c
   817   000CCE  D7FC               	bra	u1287
   818   000CD0  2E18               	decfsz	(??_main+1)^0,f,c
   819   000CD2  D7FA               	bra	u1287
   820   000CD4  D000               	nop2	
   821                           
   822                           ;Lab5.c: 111: ColorRGB(Temp);
   823   000CD6  C01F  F003         	movff	_Temp,ColorRGB@val
   824   000CDA  6A04               	clrf	(ColorRGB@val+1)^0,c
   825   000CDC  ECA6  F006         	call	_ColorRGB	;wreg free
   826                           
   827                           ;Lab5.c: 112: _delay((unsigned long)((100)*(8000000/4000.0)));
   828   000CE0  0E02               	movlw	2
   829   000CE2  6E18               	movwf	(??_main+1)^0,c
   830   000CE4  0E04               	movlw	4
   831   000CE6  6E17               	movwf	??_main^0,c
   832   000CE8  0EBA               	movlw	186
   833   000CEA                     u1297:
   834   000CEA  2EE8               	decfsz	wreg,f,c
   835   000CEC  D7FE               	bra	u1297
   836   000CEE  2E17               	decfsz	??_main^0,f,c
   837   000CF0  D7FC               	bra	u1297
   838   000CF2  2E18               	decfsz	(??_main+1)^0,f,c
   839   000CF4  D7FA               	bra	u1297
   840   000CF6  D000               	nop2	
   841                           
   842                           ;Lab5.c: 114: if(!RC4) TransmitirDatos(RB1, RB2);
   843   000CF8  B882               	btfsc	3970,4,c	;volatile
   844   000CFA  D011               	goto	l2078
   845   000CFC  A281               	btfss	3969,1,c	;volatile
   846   000CFE  D002               	goto	u1110
   847   000D00  0E01               	movlw	1
   848   000D02  D001               	goto	u1120
   849   000D04                     u1110:
   850   000D04  0E00               	movlw	0
   851   000D06                     u1120:
   852   000D06  6E0B               	movwf	TransmitirDatos@Ent1^0,c
   853   000D08  6A0C               	clrf	(TransmitirDatos@Ent1+1)^0,c
   854   000D0A  A481               	btfss	3969,2,c	;volatile
   855   000D0C  D002               	goto	u1130
   856   000D0E  0E01               	movlw	1
   857   000D10  D001               	goto	u1140
   858   000D12                     u1130:
   859   000D12  0E00               	movlw	0
   860   000D14                     u1140:
   861   000D14  6E0D               	movwf	TransmitirDatos@Ent2^0,c
   862   000D16  6A0E               	clrf	(TransmitirDatos@Ent2+1)^0,c
   863   000D18  EC12  F004         	call	_TransmitirDatos	;wreg free
   864   000D1C  D00A               	goto	l2080
   865   000D1E                     l2078:
   866                           
   867                           ;Lab5.c: 115: else TransmitirDatos(A, B);
   868   000D1E  C01B  F00B         	movff	_A,TransmitirDatos@Ent1
   869   000D22  C01C  F00C         	movff	_A+1,TransmitirDatos@Ent1+1
   870   000D26  C019  F00D         	movff	_B,TransmitirDatos@Ent2
   871   000D2A  C01A  F00E         	movff	_B+1,TransmitirDatos@Ent2+1
   872   000D2E  EC12  F004         	call	_TransmitirDatos	;wreg free
   873   000D32                     l2080:
   874                           
   875                           ;Lab5.c: 116: Conversion(0);
   876   000D32  0E00               	movlw	0
   877   000D34  ECAC  F009         	call	_Conversion
   878                           
   879                           ;Lab5.c: 117: RB0 = (ADRES <= 511) ? 0 : 1;
   880   000D38  0E00               	movlw	0
   881   000D3A  5CC3               	subwf	195,w,c	;volatile
   882   000D3C  0E02               	movlw	2
   883   000D3E  58C4               	subwfb	196,w,c	;volatile
   884   000D40  A0D8               	btfss	status,0,c
   885   000D42  D002               	goto	u1150
   886   000D44  8081               	bsf	3969,0,c	;volatile
   887   000D46  D78F               	goto	l205
   888   000D48                     u1150:
   889   000D48  9081               	bcf	3969,0,c	;volatile
   890   000D4A  D78D               	goto	l205
   891   000D4C                     __end_of_main:
   892                           	callstack 0
   893                           
   894 ;; *************** function _leerDatoEnEEPROM *****************
   895 ;; Defined at:
   896 ;;		line 297 in file "Lab5.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  dir             2    2[COMRAM] unsigned int 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      unsigned char 
   903 ;; Registers used:
   904 ;;		wreg, status,2
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   910 ;;      Params:         2       0       0       0       0       0       0       0       0
   911 ;;      Locals:         0       0       0       0       0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0       0       0       0       0
   913 ;;      Totals:         2       0       0       0       0       0       0       0       0
   914 ;;Total ram usage:        2 bytes
   915 ;; Hardware stack levels used: 1
   916 ;; Hardware stack levels required when called: 2
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text1
   925   00136C                     __ptext1:
   926                           	callstack 0
   927   00136C                     _leerDatoEnEEPROM:
   928                           	callstack 28
   929                           
   930                           ;Lab5.c: 298: EEADR = dir;
   931                           
   932                           ;incstack = 0
   933   00136C  C003  FFA9         	movff	leerDatoEnEEPROM@dir,4009	;volatile
   934                           
   935                           ;Lab5.c: 299: EEPGD = 0;
   936   001370  9EA6               	bcf	4006,7,c	;volsfr
   937                           
   938                           ;Lab5.c: 300: CFGS = 0;
   939   001372  9CA6               	bcf	4006,6,c	;volsfr
   940                           
   941                           ;Lab5.c: 301: RD = 1;
   942   001374  80A6               	bsf	4006,0,c	;volsfr
   943                           
   944                           ;Lab5.c: 303: return EEDATA;
   945   001376  50A8               	movf	168,w,c	;volatile
   946   001378  0012               	return		;funcret
   947   00137A                     __end_of_leerDatoEnEEPROM:
   948                           	callstack 0
   949                           
   950 ;; *************** function _TransmitirDatos *****************
   951 ;; Defined at:
   952 ;;		line 169 in file "Lab5.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  Ent1            2   10[COMRAM] unsigned int 
   955 ;;  Ent2            2   12[COMRAM] unsigned int 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  TempC           2   20[COMRAM] unsigned int 
   958 ;;  Simb            2   18[COMRAM] unsigned int 
   959 ;;  n               2   16[COMRAM] unsigned int 
   960 ;;  HumC            2    0        unsigned int 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   970 ;;      Params:         4       0       0       0       0       0       0       0       0
   971 ;;      Locals:         6       0       0       0       0       0       0       0       0
   972 ;;      Temps:          2       0       0       0       0       0       0       0       0
   973 ;;      Totals:        12       0       0       0       0       0       0       0       0
   974 ;;Total ram usage:       12 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; Hardware stack levels required when called: 5
   977 ;; This function calls:
   978 ;;		_DireccionaLCD
   979 ;;		_EscribeLCD_c
   980 ;;		_Transmitir
   981 ;;		___awdiv
   982 ;;		___lbdiv
   983 ;;		___lbmod
   984 ;;		___lwdiv
   985 ;;		___lwmod
   986 ;;		___wmul
   987 ;; This function is called by:
   988 ;;		_main
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text2
   993   000824                     __ptext2:
   994                           	callstack 0
   995   000824                     _TransmitirDatos:
   996                           	callstack 25
   997                           
   998                           ;Lab5.c: 170: unsigned int n = Ent1 * 10 + Ent2, TempC = Temp, HumC = Hum;
   999                           
  1000                           ;incstack = 0
  1001   000824  C00B  F003         	movff	TransmitirDatos@Ent1,___wmul@multiplier
  1002   000828  C00C  F004         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
  1003   00082C  0E00               	movlw	0
  1004   00082E  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  1005   000830  0E0A               	movlw	10
  1006   000832  6E05               	movwf	___wmul@multiplicand^0,c
  1007   000834  EC49  F009         	call	___wmul	;wreg free
  1008   000838  500D               	movf	TransmitirDatos@Ent2^0,w,c
  1009   00083A  2403               	addwf	?___wmul^0,w,c
  1010   00083C  6E11               	movwf	TransmitirDatos@n^0,c
  1011   00083E  500E               	movf	(TransmitirDatos@Ent2+1)^0,w,c
  1012   000840  2004               	addwfc	(?___wmul+1)^0,w,c
  1013   000842  6E12               	movwf	(TransmitirDatos@n+1)^0,c
  1014   000844  C01F  F015         	movff	_Temp,TransmitirDatos@TempC
  1015   000848  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
  1016                           
  1017                           ;Lab5.c: 171: unsigned int Simb = 67;
  1018   00084A  0E00               	movlw	0
  1019   00084C  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
  1020   00084E  0E43               	movlw	67
  1021   000850  6E13               	movwf	TransmitirDatos@Simb^0,c
  1022                           
  1023                           ;Lab5.c: 173: switch (n) {
  1024   000852  D03E               	goto	l1908
  1025   000854                     l251:
  1026                           
  1027                           ;Lab5.c: 175: TempC = Temp;
  1028   000854  C01F  F015         	movff	_Temp,TransmitirDatos@TempC
  1029   000858  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
  1030                           
  1031                           ;Lab5.c: 176: Simb = 67;
  1032   00085A  0E00               	movlw	0
  1033   00085C  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
  1034   00085E  0E43               	movlw	67
  1035   000860  D035               	goto	L3
  1036   000862                     l1894:
  1037                           
  1038                           ;Lab5.c: 179: TempC = Temp + 273;
  1039   000862  0E11               	movlw	17
  1040   000864  241F               	addwf	_Temp^0,w,c
  1041   000866  6E15               	movwf	TransmitirDatos@TempC^0,c
  1042   000868  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
  1043   00086A  0E01               	movlw	1
  1044   00086C  2216               	addwfc	(TransmitirDatos@TempC+1)^0,f,c
  1045                           
  1046                           ;Lab5.c: 180: Simb = 75;
  1047   00086E  0E00               	movlw	0
  1048   000870  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
  1049   000872  0E4B               	movlw	75
  1050   000874  D02B               	goto	L3
  1051   000876                     l1898:
  1052                           
  1053                           ;Lab5.c: 183: TempC = Temp * 9 / 5 + 492;
  1054   000876  501F               	movf	_Temp^0,w,c
  1055   000878  0D09               	mullw	9
  1056   00087A  CFF3 F003          	movff	prodl,___awdiv@dividend
  1057   00087E  CFF4 F004          	movff	prodh,___awdiv@dividend+1
  1058   000882  0E00               	movlw	0
  1059   000884  6E06               	movwf	(___awdiv@divisor+1)^0,c
  1060   000886  0E05               	movlw	5
  1061   000888  6E05               	movwf	___awdiv@divisor^0,c
  1062   00088A  ECAD  F007         	call	___awdiv	;wreg free
  1063   00088E  0EEC               	movlw	236
  1064   000890  2403               	addwf	?___awdiv^0,w,c
  1065   000892  6E15               	movwf	TransmitirDatos@TempC^0,c
  1066   000894  0E01               	movlw	1
  1067   000896  2004               	addwfc	(?___awdiv+1)^0,w,c
  1068   000898  6E16               	movwf	(TransmitirDatos@TempC+1)^0,c
  1069                           
  1070                           ;Lab5.c: 184: Simb = 82;
  1071   00089A  0E00               	movlw	0
  1072   00089C  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
  1073   00089E  0E52               	movlw	82
  1074   0008A0  D015               	goto	L3
  1075   0008A2                     l1902:
  1076                           
  1077                           ;Lab5.c: 187: TempC = Temp * 9 / 5 + 32;
  1078   0008A2  501F               	movf	_Temp^0,w,c
  1079   0008A4  0D09               	mullw	9
  1080   0008A6  CFF3 F003          	movff	prodl,___awdiv@dividend
  1081   0008AA  CFF4 F004          	movff	prodh,___awdiv@dividend+1
  1082   0008AE  0E00               	movlw	0
  1083   0008B0  6E06               	movwf	(___awdiv@divisor+1)^0,c
  1084   0008B2  0E05               	movlw	5
  1085   0008B4  6E05               	movwf	___awdiv@divisor^0,c
  1086   0008B6  ECAD  F007         	call	___awdiv	;wreg free
  1087   0008BA  0E20               	movlw	32
  1088   0008BC  2403               	addwf	?___awdiv^0,w,c
  1089   0008BE  6E15               	movwf	TransmitirDatos@TempC^0,c
  1090   0008C0  0E00               	movlw	0
  1091   0008C2  2004               	addwfc	(?___awdiv+1)^0,w,c
  1092   0008C4  6E16               	movwf	(TransmitirDatos@TempC+1)^0,c
  1093                           
  1094                           ;Lab5.c: 188: Simb = 70;
  1095   0008C6  0E00               	movlw	0
  1096   0008C8  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
  1097   0008CA  0E46               	movlw	70
  1098   0008CC                     L3:
  1099   0008CC  6E13               	movwf	TransmitirDatos@Simb^0,c
  1100                           
  1101                           ;Lab5.c: 189: break;
  1102   0008CE  D015               	goto	l1910
  1103   0008D0                     l1908:
  1104   0008D0  C011  F00F         	movff	TransmitirDatos@n,??_TransmitirDatos
  1105   0008D4  C012  F010         	movff	TransmitirDatos@n+1,??_TransmitirDatos+1
  1106                           
  1107                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1108                           ; Switch size 1, requested type "simple"
  1109                           ; Number of cases is 1, Range of values is 0 to 0
  1110                           ; switch strategies available:
  1111                           ; Name         Instructions Cycles
  1112                           ; simple_byte            4     3 (average)
  1113                           ;	Chosen strategy is simple_byte
  1114   0008D8  5010               	movf	(??_TransmitirDatos+1)^0,w,c
  1115   0008DA  0A00               	xorlw	0	; case 0
  1116   0008DC  A4D8               	btfss	status,2,c
  1117   0008DE  D00D               	goto	l1910
  1118                           
  1119                           ; Switch size 1, requested type "simple"
  1120                           ; Number of cases is 4, Range of values is 0 to 11
  1121                           ; switch strategies available:
  1122                           ; Name         Instructions Cycles
  1123                           ; simple_byte           13     7 (average)
  1124                           ;	Chosen strategy is simple_byte
  1125   0008E0  500F               	movf	??_TransmitirDatos^0,w,c
  1126   0008E2  0A00               	xorlw	0	; case 0
  1127   0008E4  B4D8               	btfsc	status,2,c
  1128   0008E6  D7B6               	goto	l251
  1129   0008E8  0A01               	xorlw	1	; case 1
  1130   0008EA  B4D8               	btfsc	status,2,c
  1131   0008EC  D7BA               	goto	l1894
  1132   0008EE  0A0B               	xorlw	11	; case 10
  1133   0008F0  B4D8               	btfsc	status,2,c
  1134   0008F2  D7C1               	goto	l1898
  1135   0008F4  0A01               	xorlw	1	; case 11
  1136   0008F6  B4D8               	btfsc	status,2,c
  1137   0008F8  D7D4               	goto	l1902
  1138   0008FA                     l1910:
  1139                           
  1140                           ;Lab5.c: 191: Transmitir('T');
  1141   0008FA  0E54               	movlw	84
  1142   0008FC  ECC4  F009         	call	_Transmitir
  1143                           
  1144                           ;Lab5.c: 192: Transmitir('e');
  1145   000900  0E65               	movlw	101
  1146   000902  ECC4  F009         	call	_Transmitir
  1147                           
  1148                           ;Lab5.c: 193: Transmitir('m');
  1149   000906  0E6D               	movlw	109
  1150   000908  ECC4  F009         	call	_Transmitir
  1151                           
  1152                           ;Lab5.c: 194: Transmitir('p');
  1153   00090C  0E70               	movlw	112
  1154   00090E  ECC4  F009         	call	_Transmitir
  1155                           
  1156                           ;Lab5.c: 195: Transmitir(':');
  1157   000912  0E3A               	movlw	58
  1158   000914  ECC4  F009         	call	_Transmitir
  1159                           
  1160                           ;Lab5.c: 196: Transmitir(' ');
  1161   000918  0E20               	movlw	32
  1162   00091A  ECC4  F009         	call	_Transmitir
  1163                           
  1164                           ;Lab5.c: 198: DireccionaLCD(0x85);
  1165   00091E  0E85               	movlw	133
  1166   000920  EC8C  F009         	call	_DireccionaLCD
  1167                           
  1168                           ;Lab5.c: 199: if (TempC / 100 > 0) {
  1169   000924  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1170   000928  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1171   00092C  0E00               	movlw	0
  1172   00092E  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1173   000930  0E64               	movlw	100
  1174   000932  6E05               	movwf	___lwdiv@divisor^0,c
  1175   000934  EC22  F008         	call	___lwdiv	;wreg free
  1176   000938  5003               	movf	?___lwdiv^0,w,c
  1177   00093A  1004               	iorwf	(?___lwdiv+1)^0,w,c
  1178   00093C  B4D8               	btfsc	status,2,c
  1179   00093E  D02A               	goto	l256
  1180                           
  1181                           ;Lab5.c: 200: Transmitir(TempC / 100 + 48);
  1182   000940  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1183   000944  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1184   000948  0E00               	movlw	0
  1185   00094A  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1186   00094C  0E64               	movlw	100
  1187   00094E  6E05               	movwf	___lwdiv@divisor^0,c
  1188   000950  EC22  F008         	call	___lwdiv	;wreg free
  1189   000954  5003               	movf	?___lwdiv^0,w,c
  1190   000956  0F30               	addlw	48
  1191   000958  ECC4  F009         	call	_Transmitir
  1192                           
  1193                           ;Lab5.c: 201: EscribeLCD_c(TempC / 100 + 48);
  1194   00095C  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1195   000960  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1196   000964  0E00               	movlw	0
  1197   000966  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1198   000968  0E64               	movlw	100
  1199   00096A  6E05               	movwf	___lwdiv@divisor^0,c
  1200   00096C  EC22  F008         	call	___lwdiv	;wreg free
  1201   000970  5003               	movf	?___lwdiv^0,w,c
  1202   000972  0F30               	addlw	48
  1203   000974  EC97  F009         	call	_EscribeLCD_c
  1204                           
  1205                           ;Lab5.c: 202: TempC = TempC % 100;
  1206   000978  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1207   00097C  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1208   000980  0E00               	movlw	0
  1209   000982  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1210   000984  0E64               	movlw	100
  1211   000986  6E05               	movwf	___lwmod@divisor^0,c
  1212   000988  EC97  F008         	call	___lwmod	;wreg free
  1213   00098C  C003  F015         	movff	?___lwmod,TransmitirDatos@TempC
  1214   000990  C004  F016         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1215   000994                     l256:
  1216                           
  1217                           ;Lab5.c: 203: };Lab5.c: 204: Transmitir(TempC / 10 + 48);
  1218   000994  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1219   000998  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1220   00099C  0E00               	movlw	0
  1221   00099E  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1222   0009A0  0E0A               	movlw	10
  1223   0009A2  6E05               	movwf	___lwdiv@divisor^0,c
  1224   0009A4  EC22  F008         	call	___lwdiv	;wreg free
  1225   0009A8  5003               	movf	?___lwdiv^0,w,c
  1226   0009AA  0F30               	addlw	48
  1227   0009AC  ECC4  F009         	call	_Transmitir
  1228                           
  1229                           ;Lab5.c: 205: Transmitir(TempC % 10 + 48);
  1230   0009B0  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1231   0009B4  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1232   0009B8  0E00               	movlw	0
  1233   0009BA  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1234   0009BC  0E0A               	movlw	10
  1235   0009BE  6E05               	movwf	___lwmod@divisor^0,c
  1236   0009C0  EC97  F008         	call	___lwmod	;wreg free
  1237   0009C4  5003               	movf	?___lwmod^0,w,c
  1238   0009C6  0F30               	addlw	48
  1239   0009C8  ECC4  F009         	call	_Transmitir
  1240                           
  1241                           ;Lab5.c: 206: if (Simb==70 | Simb == 67) Transmitir(223);
  1242   0009CC  0E46               	movlw	70
  1243   0009CE  1813               	xorwf	TransmitirDatos@Simb^0,w,c
  1244   0009D0  1014               	iorwf	(TransmitirDatos@Simb+1)^0,w,c
  1245   0009D2  B4D8               	btfsc	status,2,c
  1246   0009D4  D005               	goto	u1060
  1247   0009D6  0E43               	movlw	67
  1248   0009D8  1813               	xorwf	TransmitirDatos@Simb^0,w,c
  1249   0009DA  1014               	iorwf	(TransmitirDatos@Simb+1)^0,w,c
  1250   0009DC  A4D8               	btfss	status,2,c
  1251   0009DE  D003               	goto	l1924
  1252   0009E0                     u1060:
  1253   0009E0  0EDF               	movlw	223
  1254   0009E2  ECC4  F009         	call	_Transmitir
  1255   0009E6                     l1924:
  1256                           
  1257                           ;Lab5.c: 207: Transmitir(Simb);
  1258   0009E6  5013               	movf	TransmitirDatos@Simb^0,w,c
  1259   0009E8  ECC4  F009         	call	_Transmitir
  1260                           
  1261                           ;Lab5.c: 208: Transmitir(' ');
  1262   0009EC  0E20               	movlw	32
  1263   0009EE  ECC4  F009         	call	_Transmitir
  1264                           
  1265                           ;Lab5.c: 209: Transmitir('\n');
  1266   0009F2  0E0A               	movlw	10
  1267   0009F4  ECC4  F009         	call	_Transmitir
  1268                           
  1269                           ;Lab5.c: 210: Transmitir('H');
  1270   0009F8  0E48               	movlw	72
  1271   0009FA  ECC4  F009         	call	_Transmitir
  1272                           
  1273                           ;Lab5.c: 211: Transmitir('u');
  1274   0009FE  0E75               	movlw	117
  1275   000A00  ECC4  F009         	call	_Transmitir
  1276                           
  1277                           ;Lab5.c: 212: Transmitir('m');
  1278   000A04  0E6D               	movlw	109
  1279   000A06  ECC4  F009         	call	_Transmitir
  1280                           
  1281                           ;Lab5.c: 213: Transmitir(':');
  1282   000A0A  0E3A               	movlw	58
  1283   000A0C  ECC4  F009         	call	_Transmitir
  1284                           
  1285                           ;Lab5.c: 214: Transmitir(' ');
  1286   000A10  0E20               	movlw	32
  1287   000A12  ECC4  F009         	call	_Transmitir
  1288                           
  1289                           ;Lab5.c: 215: Transmitir(Hum / 10 + 48);
  1290   000A16  0E0A               	movlw	10
  1291   000A18  6E03               	movwf	___lbdiv@divisor^0,c
  1292   000A1A  501E               	movf	_Hum^0,w,c
  1293   000A1C  ECB8  F008         	call	___lbdiv
  1294   000A20  0F30               	addlw	48
  1295   000A22  ECC4  F009         	call	_Transmitir
  1296                           
  1297                           ;Lab5.c: 216: Transmitir(Hum % 10 + 48);
  1298   000A26  0E0A               	movlw	10
  1299   000A28  6E03               	movwf	___lbmod@divisor^0,c
  1300   000A2A  501E               	movf	_Hum^0,w,c
  1301   000A2C  EC20  F009         	call	___lbmod
  1302   000A30  0F30               	addlw	48
  1303   000A32  ECC4  F009         	call	_Transmitir
  1304                           
  1305                           ;Lab5.c: 217: Transmitir(' ');
  1306   000A36  0E20               	movlw	32
  1307   000A38  ECC4  F009         	call	_Transmitir
  1308                           
  1309                           ;Lab5.c: 218: Transmitir('%');
  1310   000A3C  0E25               	movlw	37
  1311   000A3E  ECC4  F009         	call	_Transmitir
  1312                           
  1313                           ;Lab5.c: 219: Transmitir('\n');
  1314   000A42  0E0A               	movlw	10
  1315   000A44  ECC4  F009         	call	_Transmitir
  1316                           
  1317                           ;Lab5.c: 220: Transmitir(' ');
  1318   000A48  0E20               	movlw	32
  1319   000A4A  ECC4  F009         	call	_Transmitir
  1320                           
  1321                           ;Lab5.c: 222: EscribeLCD_c(TempC / 10 + 48);
  1322   000A4E  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1323   000A52  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1324   000A56  0E00               	movlw	0
  1325   000A58  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1326   000A5A  0E0A               	movlw	10
  1327   000A5C  6E05               	movwf	___lwdiv@divisor^0,c
  1328   000A5E  EC22  F008         	call	___lwdiv	;wreg free
  1329   000A62  5003               	movf	?___lwdiv^0,w,c
  1330   000A64  0F30               	addlw	48
  1331   000A66  EC97  F009         	call	_EscribeLCD_c
  1332                           
  1333                           ;Lab5.c: 223: EscribeLCD_c(TempC % 10 + 48);
  1334   000A6A  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1335   000A6E  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1336   000A72  0E00               	movlw	0
  1337   000A74  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1338   000A76  0E0A               	movlw	10
  1339   000A78  6E05               	movwf	___lwmod@divisor^0,c
  1340   000A7A  EC97  F008         	call	___lwmod	;wreg free
  1341   000A7E  5003               	movf	?___lwmod^0,w,c
  1342   000A80  0F30               	addlw	48
  1343   000A82  EC97  F009         	call	_EscribeLCD_c
  1344                           
  1345                           ;Lab5.c: 224: if (Simb==70 | Simb == 67) EscribeLCD_c(223);
  1346   000A86  0E46               	movlw	70
  1347   000A88  1813               	xorwf	TransmitirDatos@Simb^0,w,c
  1348   000A8A  1014               	iorwf	(TransmitirDatos@Simb+1)^0,w,c
  1349   000A8C  B4D8               	btfsc	status,2,c
  1350   000A8E  D005               	goto	u1080
  1351   000A90  0E43               	movlw	67
  1352   000A92  1813               	xorwf	TransmitirDatos@Simb^0,w,c
  1353   000A94  1014               	iorwf	(TransmitirDatos@Simb+1)^0,w,c
  1354   000A96  A4D8               	btfss	status,2,c
  1355   000A98  D003               	goto	l260
  1356   000A9A                     u1080:
  1357   000A9A  0EDF               	movlw	223
  1358   000A9C  EC97  F009         	call	_EscribeLCD_c
  1359   000AA0                     l260:
  1360                           
  1361                           ;Lab5.c: 225: EscribeLCD_c(Simb);
  1362   000AA0  5013               	movf	TransmitirDatos@Simb^0,w,c
  1363   000AA2  EC97  F009         	call	_EscribeLCD_c
  1364                           
  1365                           ;Lab5.c: 226: EscribeLCD_c(' ');
  1366   000AA6  0E20               	movlw	32
  1367   000AA8  EC97  F009         	call	_EscribeLCD_c
  1368                           
  1369                           ;Lab5.c: 227: DireccionaLCD(0xC4);
  1370   000AAC  0EC4               	movlw	196
  1371   000AAE  EC8C  F009         	call	_DireccionaLCD
  1372                           
  1373                           ;Lab5.c: 228: EscribeLCD_c(Hum / 10 + 48);
  1374   000AB2  0E0A               	movlw	10
  1375   000AB4  6E03               	movwf	___lbdiv@divisor^0,c
  1376   000AB6  501E               	movf	_Hum^0,w,c
  1377   000AB8  ECB8  F008         	call	___lbdiv
  1378   000ABC  0F30               	addlw	48
  1379   000ABE  EC97  F009         	call	_EscribeLCD_c
  1380                           
  1381                           ;Lab5.c: 229: EscribeLCD_c(Hum % 10 + 48);
  1382   000AC2  0E0A               	movlw	10
  1383   000AC4  6E03               	movwf	___lbmod@divisor^0,c
  1384   000AC6  501E               	movf	_Hum^0,w,c
  1385   000AC8  EC20  F009         	call	___lbmod
  1386   000ACC  0F30               	addlw	48
  1387   000ACE  EC97  F009         	call	_EscribeLCD_c
  1388                           
  1389                           ;Lab5.c: 230: EscribeLCD_c('%');
  1390   000AD2  0E25               	movlw	37
  1391   000AD4  EC97  F009         	call	_EscribeLCD_c
  1392   000AD8  0012               	return		;funcret
  1393   000ADA                     __end_of_TransmitirDatos:
  1394                           	callstack 0
  1395                           
  1396 ;; *************** function ___wmul *****************
  1397 ;; Defined at:
  1398 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  multiplier      2    2[COMRAM] unsigned int 
  1401 ;;  multiplicand    2    4[COMRAM] unsigned int 
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;  product         2    6[COMRAM] unsigned int 
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  2    2[COMRAM] unsigned int 
  1406 ;; Registers used:
  1407 ;;		wreg, status,2, status,0, prodl, prodh
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1413 ;;      Params:         4       0       0       0       0       0       0       0       0
  1414 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1416 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1417 ;;Total ram usage:        6 bytes
  1418 ;; Hardware stack levels used: 1
  1419 ;; Hardware stack levels required when called: 2
  1420 ;; This function calls:
  1421 ;;		Nothing
  1422 ;; This function is called by:
  1423 ;;		_TransmitirDatos
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text3
  1428   001292                     __ptext3:
  1429                           	callstack 0
  1430   001292                     ___wmul:
  1431                           	callstack 27
  1432                           
  1433                           ;incstack = 0
  1434   001292  5003               	movf	___wmul@multiplier^0,w,c
  1435   001294  0205               	mulwf	___wmul@multiplicand^0,c
  1436   001296  CFF3 F007          	movff	prodl,___wmul@product
  1437   00129A  CFF4 F008          	movff	prodh,___wmul@product+1
  1438   00129E  5003               	movf	___wmul@multiplier^0,w,c
  1439   0012A0  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  1440   0012A2  50F3               	movf	243,w,c
  1441   0012A4  2608               	addwf	(___wmul@product+1)^0,f,c
  1442   0012A6  5004               	movf	(___wmul@multiplier+1)^0,w,c
  1443   0012A8  0205               	mulwf	___wmul@multiplicand^0,c
  1444   0012AA  50F3               	movf	243,w,c
  1445   0012AC  2608               	addwf	(___wmul@product+1)^0,f,c
  1446   0012AE  C007  F003         	movff	___wmul@product,?___wmul
  1447   0012B2  C008  F004         	movff	___wmul@product+1,?___wmul+1
  1448   0012B6  0012               	return		;funcret
  1449   0012B8                     __end_of___wmul:
  1450                           	callstack 0
  1451                           
  1452 ;; *************** function ___lwmod *****************
  1453 ;; Defined at:
  1454 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;  dividend        2    2[COMRAM] unsigned int 
  1457 ;;  divisor         2    4[COMRAM] unsigned int 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;  counter         1    6[COMRAM] unsigned char 
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  2    2[COMRAM] unsigned int 
  1462 ;; Registers used:
  1463 ;;		wreg, status,2, status,0
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1469 ;;      Params:         4       0       0       0       0       0       0       0       0
  1470 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1472 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1473 ;;Total ram usage:        5 bytes
  1474 ;; Hardware stack levels used: 1
  1475 ;; Hardware stack levels required when called: 2
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		_TransmitirDatos
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text4
  1484   00112E                     __ptext4:
  1485                           	callstack 0
  1486   00112E                     ___lwmod:
  1487                           	callstack 27
  1488                           
  1489                           ;incstack = 0
  1490   00112E  5005               	movf	___lwmod@divisor^0,w,c
  1491   001130  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  1492   001132  B4D8               	btfsc	status,2,c
  1493   001134  D018               	goto	l802
  1494   001136  0E01               	movlw	1
  1495   001138  6E07               	movwf	___lwmod@counter^0,c
  1496   00113A  D004               	goto	l1804
  1497   00113C                     l1802:
  1498   00113C  90D8               	bcf	status,0,c
  1499   00113E  3605               	rlcf	___lwmod@divisor^0,f,c
  1500   001140  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  1501   001142  2A07               	incf	___lwmod@counter^0,f,c
  1502   001144                     l1804:
  1503   001144  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  1504   001146  D7FA               	goto	l1802
  1505   001148                     u850:
  1506   001148  5005               	movf	___lwmod@divisor^0,w,c
  1507   00114A  5C03               	subwf	___lwmod@dividend^0,w,c
  1508   00114C  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1509   00114E  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  1510   001150  A0D8               	btfss	status,0,c
  1511   001152  D004               	goto	l1810
  1512   001154  5005               	movf	___lwmod@divisor^0,w,c
  1513   001156  5E03               	subwf	___lwmod@dividend^0,f,c
  1514   001158  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1515   00115A  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  1516   00115C                     l1810:
  1517   00115C  90D8               	bcf	status,0,c
  1518   00115E  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  1519   001160  3205               	rrcf	___lwmod@divisor^0,f,c
  1520   001162  2E07               	decfsz	___lwmod@counter^0,f,c
  1521   001164  D7F1               	goto	u850
  1522   001166                     l802:
  1523   001166  C003  F003         	movff	___lwmod@dividend,?___lwmod
  1524   00116A  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  1525   00116E  0012               	return		;funcret
  1526   001170                     __end_of___lwmod:
  1527                           	callstack 0
  1528                           
  1529 ;; *************** function ___lwdiv *****************
  1530 ;; Defined at:
  1531 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  dividend        2    2[COMRAM] unsigned int 
  1534 ;;  divisor         2    4[COMRAM] unsigned int 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  quotient        2    6[COMRAM] unsigned int 
  1537 ;;  counter         1    8[COMRAM] unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  2    2[COMRAM] unsigned int 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1547 ;;      Params:         4       0       0       0       0       0       0       0       0
  1548 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1550 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1551 ;;Total ram usage:        7 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 2
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_TransmitirDatos
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text5
  1562   001044                     __ptext5:
  1563                           	callstack 0
  1564   001044                     ___lwdiv:
  1565                           	callstack 27
  1566                           
  1567                           ;incstack = 0
  1568   001044  0E00               	movlw	0
  1569   001046  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  1570   001048  0E00               	movlw	0
  1571   00104A  6E07               	movwf	___lwdiv@quotient^0,c
  1572   00104C  5005               	movf	___lwdiv@divisor^0,w,c
  1573   00104E  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1574   001050  B4D8               	btfsc	status,2,c
  1575   001052  D01C               	goto	l792
  1576   001054  0E01               	movlw	1
  1577   001056  6E09               	movwf	___lwdiv@counter^0,c
  1578   001058  D004               	goto	l1784
  1579   00105A                     l1782:
  1580   00105A  90D8               	bcf	status,0,c
  1581   00105C  3605               	rlcf	___lwdiv@divisor^0,f,c
  1582   00105E  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1583   001060  2A09               	incf	___lwdiv@counter^0,f,c
  1584   001062                     l1784:
  1585   001062  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  1586   001064  D7FA               	goto	l1782
  1587   001066                     u820:
  1588   001066  90D8               	bcf	status,0,c
  1589   001068  3607               	rlcf	___lwdiv@quotient^0,f,c
  1590   00106A  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1591   00106C  5005               	movf	___lwdiv@divisor^0,w,c
  1592   00106E  5C03               	subwf	___lwdiv@dividend^0,w,c
  1593   001070  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1594   001072  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1595   001074  A0D8               	btfss	status,0,c
  1596   001076  D005               	goto	l1794
  1597   001078  5005               	movf	___lwdiv@divisor^0,w,c
  1598   00107A  5E03               	subwf	___lwdiv@dividend^0,f,c
  1599   00107C  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1600   00107E  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1601   001080  8007               	bsf	___lwdiv@quotient^0,0,c
  1602   001082                     l1794:
  1603   001082  90D8               	bcf	status,0,c
  1604   001084  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1605   001086  3205               	rrcf	___lwdiv@divisor^0,f,c
  1606   001088  2E09               	decfsz	___lwdiv@counter^0,f,c
  1607   00108A  D7ED               	goto	u820
  1608   00108C                     l792:
  1609   00108C  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  1610   001090  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1611   001094  0012               	return		;funcret
  1612   001096                     __end_of___lwdiv:
  1613                           	callstack 0
  1614                           
  1615 ;; *************** function ___lbmod *****************
  1616 ;; Defined at:
  1617 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  dividend        1    wreg     unsigned char 
  1620 ;;  divisor         1    2[COMRAM] unsigned char 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  dividend        1    3[COMRAM] unsigned char 
  1623 ;;  rem             1    5[COMRAM] unsigned char 
  1624 ;;  counter         1    4[COMRAM] unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      unsigned char 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1634 ;;      Params:         1       0       0       0       0       0       0       0       0
  1635 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1637 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1638 ;;Total ram usage:        4 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; Hardware stack levels required when called: 2
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;;		_TransmitirDatos
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text6
  1650   001240                     __ptext6:
  1651                           	callstack 0
  1652   001240                     ___lbmod:
  1653                           	callstack 28
  1654                           
  1655                           ;incstack = 0
  1656                           ;___lbmod@dividend stored from wreg
  1657   001240  6E04               	movwf	___lbmod@dividend^0,c
  1658   001242  0E08               	movlw	8
  1659   001244  6E05               	movwf	___lbmod@counter^0,c
  1660   001246  0E00               	movlw	0
  1661   001248  6E06               	movwf	___lbmod@rem^0,c
  1662   00124A                     l1762:
  1663   00124A  90D8               	bcf	status,0,c
  1664   00124C  3404               	rlcf	___lbmod@dividend^0,w,c
  1665   00124E  3406               	rlcf	___lbmod@rem^0,w,c
  1666   001250  6E06               	movwf	___lbmod@rem^0,c
  1667   001252  90D8               	bcf	status,0,c
  1668   001254  3604               	rlcf	___lbmod@dividend^0,f,c
  1669   001256  5003               	movf	___lbmod@divisor^0,w,c
  1670   001258  5C06               	subwf	___lbmod@rem^0,w,c
  1671   00125A  A0D8               	btfss	status,0,c
  1672   00125C  D002               	goto	l1770
  1673   00125E  5003               	movf	___lbmod@divisor^0,w,c
  1674   001260  5E06               	subwf	___lbmod@rem^0,f,c
  1675   001262                     l1770:
  1676   001262  2E05               	decfsz	___lbmod@counter^0,f,c
  1677   001264  D7F2               	goto	l1762
  1678   001266  5006               	movf	___lbmod@rem^0,w,c
  1679   001268  0012               	return		;funcret
  1680   00126A                     __end_of___lbmod:
  1681                           	callstack 0
  1682                           
  1683 ;; *************** function ___lbdiv *****************
  1684 ;; Defined at:
  1685 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  dividend        1    wreg     unsigned char 
  1688 ;;  divisor         1    2[COMRAM] unsigned char 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  dividend        1    3[COMRAM] unsigned char 
  1691 ;;  quotient        1    5[COMRAM] unsigned char 
  1692 ;;  counter         1    4[COMRAM] unsigned char 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      unsigned char 
  1695 ;; Registers used:
  1696 ;;		wreg, status,2, status,0
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1702 ;;      Params:         1       0       0       0       0       0       0       0       0
  1703 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1704 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1705 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1706 ;;Total ram usage:        4 bytes
  1707 ;; Hardware stack levels used: 1
  1708 ;; Hardware stack levels required when called: 2
  1709 ;; This function calls:
  1710 ;;		Nothing
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;;		_TransmitirDatos
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text7
  1718   001170                     __ptext7:
  1719                           	callstack 0
  1720   001170                     ___lbdiv:
  1721                           	callstack 28
  1722                           
  1723                           ;incstack = 0
  1724                           ;___lbdiv@dividend stored from wreg
  1725   001170  6E04               	movwf	___lbdiv@dividend^0,c
  1726   001172  0E00               	movlw	0
  1727   001174  6E06               	movwf	___lbdiv@quotient^0,c
  1728   001176  5003               	movf	___lbdiv@divisor^0,w,c
  1729   001178  B4D8               	btfsc	status,2,c
  1730   00117A  D015               	goto	l1756
  1731   00117C  0E01               	movlw	1
  1732   00117E  6E05               	movwf	___lbdiv@counter^0,c
  1733   001180  D003               	goto	l1744
  1734   001182                     l1740:
  1735   001182  90D8               	bcf	status,0,c
  1736   001184  3603               	rlcf	___lbdiv@divisor^0,f,c
  1737   001186  2A05               	incf	___lbdiv@counter^0,f,c
  1738   001188                     l1744:
  1739   001188  AE03               	btfss	___lbdiv@divisor^0,7,c
  1740   00118A  D7FB               	goto	l1740
  1741   00118C                     u780:
  1742   00118C  90D8               	bcf	status,0,c
  1743   00118E  3606               	rlcf	___lbdiv@quotient^0,f,c
  1744   001190  5003               	movf	___lbdiv@divisor^0,w,c
  1745   001192  5C04               	subwf	___lbdiv@dividend^0,w,c
  1746   001194  A0D8               	btfss	status,0,c
  1747   001196  D003               	goto	l1752
  1748   001198  5003               	movf	___lbdiv@divisor^0,w,c
  1749   00119A  5E04               	subwf	___lbdiv@dividend^0,f,c
  1750   00119C  8006               	bsf	___lbdiv@quotient^0,0,c
  1751   00119E                     l1752:
  1752   00119E  90D8               	bcf	status,0,c
  1753   0011A0  3203               	rrcf	___lbdiv@divisor^0,f,c
  1754   0011A2  2E05               	decfsz	___lbdiv@counter^0,f,c
  1755   0011A4  D7F3               	goto	u780
  1756   0011A6                     l1756:
  1757   0011A6  5006               	movf	___lbdiv@quotient^0,w,c
  1758   0011A8  0012               	return		;funcret
  1759   0011AA                     __end_of___lbdiv:
  1760                           	callstack 0
  1761                           
  1762 ;; *************** function ___awdiv *****************
  1763 ;; Defined at:
  1764 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  dividend        2    2[COMRAM] int 
  1767 ;;  divisor         2    4[COMRAM] int 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  quotient        2    8[COMRAM] int 
  1770 ;;  sign            1    7[COMRAM] unsigned char 
  1771 ;;  counter         1    6[COMRAM] unsigned char 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  2    2[COMRAM] int 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1781 ;;      Params:         4       0       0       0       0       0       0       0       0
  1782 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1784 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1785 ;;Total ram usage:        8 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; Hardware stack levels required when called: 2
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_TransmitirDatos
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text8
  1796   000F5A                     __ptext8:
  1797                           	callstack 0
  1798   000F5A                     ___awdiv:
  1799                           	callstack 27
  1800                           
  1801                           ;incstack = 0
  1802   000F5A  0E00               	movlw	0
  1803   000F5C  6E08               	movwf	___awdiv@sign^0,c
  1804   000F5E  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1805   000F60  D006               	goto	l1698
  1806   000F62  6C05               	negf	___awdiv@divisor^0,c
  1807   000F64  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  1808   000F66  B0D8               	btfsc	status,0,c
  1809   000F68  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  1810   000F6A  0E01               	movlw	1
  1811   000F6C  6E08               	movwf	___awdiv@sign^0,c
  1812   000F6E                     l1698:
  1813   000F6E  AE04               	btfss	(___awdiv@dividend+1)^0,7,c
  1814   000F70  D006               	goto	l1704
  1815   000F72  6C03               	negf	___awdiv@dividend^0,c
  1816   000F74  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  1817   000F76  B0D8               	btfsc	status,0,c
  1818   000F78  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  1819   000F7A  0E01               	movlw	1
  1820   000F7C  1A08               	xorwf	___awdiv@sign^0,f,c
  1821   000F7E                     l1704:
  1822   000F7E  0E00               	movlw	0
  1823   000F80  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  1824   000F82  0E00               	movlw	0
  1825   000F84  6E09               	movwf	___awdiv@quotient^0,c
  1826   000F86  5005               	movf	___awdiv@divisor^0,w,c
  1827   000F88  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  1828   000F8A  B4D8               	btfsc	status,2,c
  1829   000F8C  D01C               	goto	l1726
  1830   000F8E  0E01               	movlw	1
  1831   000F90  6E07               	movwf	___awdiv@counter^0,c
  1832   000F92  D004               	goto	l1712
  1833   000F94                     l1710:
  1834   000F94  90D8               	bcf	status,0,c
  1835   000F96  3605               	rlcf	___awdiv@divisor^0,f,c
  1836   000F98  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  1837   000F9A  2A07               	incf	___awdiv@counter^0,f,c
  1838   000F9C                     l1712:
  1839   000F9C  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1840   000F9E  D7FA               	goto	l1710
  1841   000FA0                     u740:
  1842   000FA0  90D8               	bcf	status,0,c
  1843   000FA2  3609               	rlcf	___awdiv@quotient^0,f,c
  1844   000FA4  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  1845   000FA6  5005               	movf	___awdiv@divisor^0,w,c
  1846   000FA8  5C03               	subwf	___awdiv@dividend^0,w,c
  1847   000FAA  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1848   000FAC  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  1849   000FAE  A0D8               	btfss	status,0,c
  1850   000FB0  D005               	goto	l1722
  1851   000FB2  5005               	movf	___awdiv@divisor^0,w,c
  1852   000FB4  5E03               	subwf	___awdiv@dividend^0,f,c
  1853   000FB6  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1854   000FB8  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  1855   000FBA  8009               	bsf	___awdiv@quotient^0,0,c
  1856   000FBC                     l1722:
  1857   000FBC  90D8               	bcf	status,0,c
  1858   000FBE  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  1859   000FC0  3205               	rrcf	___awdiv@divisor^0,f,c
  1860   000FC2  2E07               	decfsz	___awdiv@counter^0,f,c
  1861   000FC4  D7ED               	goto	u740
  1862   000FC6                     l1726:
  1863   000FC6  5008               	movf	___awdiv@sign^0,w,c
  1864   000FC8  B4D8               	btfsc	status,2,c
  1865   000FCA  D004               	goto	l1730
  1866   000FCC  6C09               	negf	___awdiv@quotient^0,c
  1867   000FCE  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  1868   000FD0  B0D8               	btfsc	status,0,c
  1869   000FD2  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  1870   000FD4                     l1730:
  1871   000FD4  C009  F003         	movff	___awdiv@quotient,?___awdiv
  1872   000FD8  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  1873   000FDC  0012               	return		;funcret
  1874   000FDE                     __end_of___awdiv:
  1875                           	callstack 0
  1876                           
  1877 ;; *************** function _Transmitir *****************
  1878 ;; Defined at:
  1879 ;;		line 159 in file "Lab5.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  BufferT         1    wreg     unsigned char 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  BufferT         1    2[COMRAM] unsigned char 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1893 ;;      Params:         0       0       0       0       0       0       0       0       0
  1894 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1896 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1897 ;;Total ram usage:        1 bytes
  1898 ;; Hardware stack levels used: 1
  1899 ;; Hardware stack levels required when called: 2
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_TransmitirDatos
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text9
  1908   001388                     __ptext9:
  1909                           	callstack 0
  1910   001388                     _Transmitir:
  1911                           	callstack 27
  1912                           
  1913                           ;incstack = 0
  1914                           ;Transmitir@BufferT stored from wreg
  1915   001388  6E03               	movwf	Transmitir@BufferT^0,c
  1916   00138A                     
  1917                           ;Lab5.c: 160: while (TRMT == 0);
  1918   00138A  A2AC               	btfss	4012,1,c	;volatile
  1919   00138C  D7FE               	goto	l1164
  1920                           
  1921                           ;Lab5.c: 161: TXREG = BufferT;
  1922   00138E  C003  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1923   001392  0012               	return		;funcret
  1924   001394                     __end_of_Transmitir:
  1925                           	callstack 0
  1926                           
  1927 ;; *************** function _DireccionaLCD *****************
  1928 ;; Defined at:
  1929 ;;		line 229 in file "LibLCDXC8.h"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  a               1    wreg     unsigned char 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;  a               1    6[COMRAM] unsigned char 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1943 ;;      Params:         0       0       0       0       0       0       0       0       0
  1944 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1945 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1946 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1947 ;;Total ram usage:        1 bytes
  1948 ;; Hardware stack levels used: 1
  1949 ;; Hardware stack levels required when called: 4
  1950 ;; This function calls:
  1951 ;;		_EnviaDato
  1952 ;;		_HabilitaLCD
  1953 ;;		_RetardoLCD
  1954 ;; This function is called by:
  1955 ;;		_main
  1956 ;;		_TransmitirDatos
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text10
  1961   001318                     __ptext10:
  1962                           	callstack 0
  1963   001318                     _DireccionaLCD:
  1964                           	callstack 25
  1965                           
  1966                           ;incstack = 0
  1967                           ;DireccionaLCD@a stored from wreg
  1968   001318  6E07               	movwf	DireccionaLCD@a^0,c
  1969                           
  1970                           ;LibLCDXC8.h: 232: LATE0=0;
  1971   00131A  908D               	bcf	3981,0,c	;volatile
  1972                           
  1973                           ;LibLCDXC8.h: 233: EnviaDato(a);
  1974   00131C  5007               	movf	DireccionaLCD@a^0,w,c
  1975   00131E  EC74  F008         	call	_EnviaDato
  1976                           
  1977                           ;LibLCDXC8.h: 234: HabilitaLCD();
  1978   001322  ECBD  F009         	call	_HabilitaLCD	;wreg free
  1979                           
  1980                           ;LibLCDXC8.h: 235: RetardoLCD(4);
  1981   001326  0E04               	movlw	4
  1982   001328  ECEF  F007         	call	_RetardoLCD
  1983   00132C  0012               	return		;funcret
  1984   00132E                     __end_of_DireccionaLCD:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _MensajeLCD_Var *****************
  1988 ;; Defined at:
  1989 ;;		line 217 in file "LibLCDXC8.h"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  a               1    7[COMRAM] PTR unsigned char 
  1992 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  i               2    9[COMRAM] int 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2004 ;;      Params:         1       0       0       0       0       0       0       0       0
  2005 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2006 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2007 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2008 ;;Total ram usage:        4 bytes
  2009 ;; Hardware stack levels used: 1
  2010 ;; Hardware stack levels required when called: 5
  2011 ;; This function calls:
  2012 ;;		_EscribeLCD_c
  2013 ;;		_strlen
  2014 ;; This function is called by:
  2015 ;;		_main
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text11
  2020   001096                     __ptext11:
  2021                           	callstack 0
  2022   001096                     _MensajeLCD_Var:
  2023                           	callstack 25
  2024                           
  2025                           ;LibLCDXC8.h: 221: for(int i = 0; i<strlen(a); i++){
  2026                           
  2027                           ;incstack = 0
  2028   001096  0E00               	movlw	0
  2029   001098  6E0B               	movwf	(MensajeLCD_Var@i+1)^0,c
  2030   00109A  0E00               	movlw	0
  2031   00109C  6E0A               	movwf	MensajeLCD_Var@i^0,c
  2032   00109E  D019               	goto	l1824
  2033   0010A0                     l1816:
  2034                           
  2035                           ;LibLCDXC8.h: 222: if(a[i] == (0)){
  2036   0010A0  5008               	movf	MensajeLCD_Var@a^0,w,c
  2037   0010A2  240A               	addwf	MensajeLCD_Var@i^0,w,c
  2038   0010A4  6E09               	movwf	??_MensajeLCD_Var^0,c
  2039   0010A6  C009  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  2040   0010AA                     	if	1	;There is more than 1 active tblptr byte
  2041   0010AA  0E08               	movlw	high __smallconst
  2042   0010AC  6EF7               	movwf	tblptrh,c
  2043   0010AE                     	endif
  2044   0010AE                     	if	0	;tblptru may be non-zero
  2045   0010AE                     	endif
  2046   0010AE                     	if	0	;tblptru may be non-zero
  2047   0010AE                     	endif
  2048   0010AE  0008               	tblrd		*
  2049   0010B0  50F5               	movf	tablat,w,c
  2050   0010B2  0900               	iorlw	0
  2051   0010B4  B4D8               	btfsc	status,2,c
  2052   0010B6  0012               	return	
  2053                           
  2054                           ;LibLCDXC8.h: 224: };LibLCDXC8.h: 225: EscribeLCD_c(a[i]);
  2055   0010B8  5008               	movf	MensajeLCD_Var@a^0,w,c
  2056   0010BA  240A               	addwf	MensajeLCD_Var@i^0,w,c
  2057   0010BC  6E09               	movwf	??_MensajeLCD_Var^0,c
  2058   0010BE  C009  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  2059   0010C2                     	if	1	;There is more than 1 active tblptr byte
  2060   0010C2  0E08               	movlw	high __smallconst
  2061   0010C4  6EF7               	movwf	tblptrh,c
  2062   0010C6                     	endif
  2063   0010C6                     	if	0	;tblptru may be non-zero
  2064   0010C6                     	endif
  2065   0010C6                     	if	0	;tblptru may be non-zero
  2066   0010C6                     	endif
  2067   0010C6  0008               	tblrd		*
  2068   0010C8  50F5               	movf	tablat,w,c
  2069   0010CA  EC97  F009         	call	_EscribeLCD_c
  2070   0010CE  4A0A               	infsnz	MensajeLCD_Var@i^0,f,c
  2071   0010D0  2A0B               	incf	(MensajeLCD_Var@i+1)^0,f,c
  2072   0010D2                     l1824:
  2073   0010D2  C008  F003         	movff	MensajeLCD_Var@a,strlen@s
  2074   0010D6  EC35  F009         	call	_strlen	;wreg free
  2075   0010DA  5003               	movf	?_strlen^0,w,c
  2076   0010DC  5C0A               	subwf	MensajeLCD_Var@i^0,w,c
  2077   0010DE  5004               	movf	(?_strlen+1)^0,w,c
  2078   0010E0  580B               	subwfb	(MensajeLCD_Var@i+1)^0,w,c
  2079   0010E2  B0D8               	btfsc	status,0,c
  2080   0010E4  0012               	return	
  2081   0010E6  D7DC               	goto	l1816
  2082   0010E8                     __end_of_MensajeLCD_Var:
  2083                           	callstack 0
  2084                           
  2085 ;; *************** function _strlen *****************
  2086 ;; Defined at:
  2087 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  s               1    2[COMRAM] PTR const unsigned char 
  2090 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  cp              1    4[COMRAM] PTR const unsigned char 
  2093 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  2    2[COMRAM] unsigned int 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2103 ;;      Params:         2       0       0       0       0       0       0       0       0
  2104 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2106 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2107 ;;Total ram usage:        3 bytes
  2108 ;; Hardware stack levels used: 1
  2109 ;; Hardware stack levels required when called: 2
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_MensajeLCD_Var
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text12
  2118   00126A                     __ptext12:
  2119                           	callstack 0
  2120   00126A                     _strlen:
  2121                           	callstack 27
  2122                           
  2123                           ;incstack = 0
  2124   00126A  C003  F005         	movff	strlen@s,strlen@cp
  2125   00126E  D001               	goto	l1678
  2126   001270                     l1676:
  2127   001270  2A05               	incf	strlen@cp^0,f,c
  2128   001272                     l1678:
  2129   001272  C005  FFF6         	movff	strlen@cp,tblptrl
  2130   001276                     	if	1	;There is more than 1 active tblptr byte
  2131   001276  0E08               	movlw	high __smallconst
  2132   001278  6EF7               	movwf	tblptrh,c
  2133   00127A                     	endif
  2134   00127A                     	if	0	;tblptru may be non-zero
  2135   00127A                     	endif
  2136   00127A                     	if	0	;tblptru may be non-zero
  2137   00127A                     	endif
  2138   00127A  0008               	tblrd		*
  2139   00127C  50F5               	movf	tablat,w,c
  2140   00127E  0900               	iorlw	0
  2141   001280  A4D8               	btfss	status,2,c
  2142   001282  D7F6               	goto	l1676
  2143   001284  5003               	movf	strlen@s^0,w,c
  2144   001286  5C05               	subwf	strlen@cp^0,w,c
  2145   001288  6E03               	movwf	?_strlen^0,c
  2146   00128A  6A04               	clrf	(?_strlen+1)^0,c
  2147   00128C  BE03               	btfsc	?_strlen^0,7,c
  2148   00128E  0604               	decf	(?_strlen+1)^0,f,c
  2149   001290  0012               	return		;funcret
  2150   001292                     __end_of_strlen:
  2151                           	callstack 0
  2152                           
  2153 ;; *************** function _EscribeLCD_c *****************
  2154 ;; Defined at:
  2155 ;;		line 119 in file "LibLCDXC8.h"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  a               1    wreg     unsigned char 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  a               1    6[COMRAM] unsigned char 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		wreg, status,2, status,0, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2169 ;;      Params:         0       0       0       0       0       0       0       0       0
  2170 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2172 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2173 ;;Total ram usage:        1 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; Hardware stack levels required when called: 4
  2176 ;; This function calls:
  2177 ;;		_EnviaDato
  2178 ;;		_HabilitaLCD
  2179 ;;		_RetardoLCD
  2180 ;; This function is called by:
  2181 ;;		_MensajeLCD_Var
  2182 ;;		_main
  2183 ;;		_TransmitirDatos
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text13
  2188   00132E                     __ptext13:
  2189                           	callstack 0
  2190   00132E                     _EscribeLCD_c:
  2191                           	callstack 25
  2192                           
  2193                           ;incstack = 0
  2194                           ;EscribeLCD_c@a stored from wreg
  2195   00132E  6E07               	movwf	EscribeLCD_c@a^0,c
  2196                           
  2197                           ;LibLCDXC8.h: 123: LATE0=1;
  2198   001330  808D               	bsf	3981,0,c	;volatile
  2199                           
  2200                           ;LibLCDXC8.h: 124: EnviaDato(a);
  2201   001332  5007               	movf	EscribeLCD_c@a^0,w,c
  2202   001334  EC74  F008         	call	_EnviaDato
  2203                           
  2204                           ;LibLCDXC8.h: 125: HabilitaLCD();
  2205   001338  ECBD  F009         	call	_HabilitaLCD	;wreg free
  2206                           
  2207                           ;LibLCDXC8.h: 126: RetardoLCD(4);
  2208   00133C  0E04               	movlw	4
  2209   00133E  ECEF  F007         	call	_RetardoLCD
  2210   001342  0012               	return		;funcret
  2211   001344                     __end_of_EscribeLCD_c:
  2212                           	callstack 0
  2213                           
  2214 ;; *************** function _LeerHT11 *****************
  2215 ;; Defined at:
  2216 ;;		line 121 in file "Lab5.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;		None
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;		None
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		wreg, status,2, status,0, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2230 ;;      Params:         0       0       0       0       0       0       0       0       0
  2231 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2232 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2233 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2234 ;;Total ram usage:        1 bytes
  2235 ;; Hardware stack levels used: 1
  2236 ;; Hardware stack levels required when called: 4
  2237 ;; This function calls:
  2238 ;;		_LeerByte
  2239 ;; This function is called by:
  2240 ;;		_main
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text14
  2245   0011AA                     __ptext14:
  2246                           	callstack 0
  2247   0011AA                     _LeerHT11:
  2248                           	callstack 26
  2249                           
  2250                           ;Lab5.c: 123: TRISC2 = 0;
  2251                           
  2252                           ;incstack = 0
  2253   0011AA  9494               	bcf	3988,2,c	;volatile
  2254                           
  2255                           ;Lab5.c: 124: _delay((unsigned long)((18)*(8000000/4000.0)));
  2256   0011AC  0E2F               	movlw	47
  2257   0011AE  6E07               	movwf	??_LeerHT11^0,c
  2258   0011B0  0EC0               	movlw	192
  2259   0011B2                     u1307:
  2260   0011B2  2EE8               	decfsz	wreg,f,c
  2261   0011B4  D7FE               	bra	u1307
  2262   0011B6  2E07               	decfsz	??_LeerHT11^0,f,c
  2263   0011B8  D7FC               	bra	u1307
  2264                           
  2265                           ;Lab5.c: 125: TRISC2 = 1;
  2266   0011BA  8494               	bsf	3988,2,c	;volatile
  2267   0011BC                     l213:
  2268   0011BC  B482               	btfsc	3970,2,c	;volatile
  2269   0011BE  D7FE               	goto	l213
  2270                           
  2271                           ;Lab5.c: 128: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2272   0011C0  0E50               	movlw	80
  2273   0011C2                     u1317:
  2274   0011C2  2EE8               	decfsz	wreg,f,c
  2275   0011C4  D7FE               	bra	u1317
  2276   0011C6                     l216:
  2277   0011C6  B482               	btfsc	3970,2,c	;volatile
  2278   0011C8  D7FE               	goto	l216
  2279                           
  2280                           ;Lab5.c: 131: Hum = LeerByte();
  2281   0011CA  EC6F  F009         	call	_LeerByte	;wreg free
  2282   0011CE  6E1E               	movwf	_Hum^0,c
  2283                           
  2284                           ;Lab5.c: 132: LeerByte();
  2285   0011D0  EC6F  F009         	call	_LeerByte	;wreg free
  2286                           
  2287                           ;Lab5.c: 133: Temp = LeerByte();
  2288   0011D4  EC6F  F009         	call	_LeerByte	;wreg free
  2289   0011D8  6E1F               	movwf	_Temp^0,c
  2290                           
  2291                           ;Lab5.c: 134: LeerByte();
  2292   0011DA  EC6F  F009         	call	_LeerByte	;wreg free
  2293                           
  2294                           ;Lab5.c: 135: LeerByte();
  2295   0011DE  EC6F  F009         	call	_LeerByte	;wreg free
  2296   0011E2  0012               	return		;funcret
  2297   0011E4                     __end_of_LeerHT11:
  2298                           	callstack 0
  2299                           
  2300 ;; *************** function _LeerByte *****************
  2301 ;; Defined at:
  2302 ;;		line 138 in file "Lab5.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  i               1    5[COMRAM] unsigned char 
  2307 ;;  res             1    4[COMRAM] unsigned char 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      unsigned char 
  2310 ;; Registers used:
  2311 ;;		wreg, status,2, status,0, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2317 ;;      Params:         0       0       0       0       0       0       0       0       0
  2318 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2319 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2320 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2321 ;;Total ram usage:        3 bytes
  2322 ;; Hardware stack levels used: 1
  2323 ;; Hardware stack levels required when called: 3
  2324 ;; This function calls:
  2325 ;;		_LeerBit
  2326 ;; This function is called by:
  2327 ;;		_LeerHT11
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text15
  2332   0012DE                     __ptext15:
  2333                           	callstack 0
  2334   0012DE                     _LeerByte:
  2335                           	callstack 26
  2336                           
  2337                           ;Lab5.c: 139: unsigned char res = 0, i;
  2338                           
  2339                           ;incstack = 0
  2340   0012DE  0E00               	movlw	0
  2341   0012E0  6E05               	movwf	LeerByte@res^0,c
  2342                           
  2343                           ;Lab5.c: 140: for (i = 8; i > 0; i--) {
  2344   0012E2  0E08               	movlw	8
  2345   0012E4  6E06               	movwf	LeerByte@i^0,c
  2346   0012E6                     l1154:
  2347                           
  2348                           ;Lab5.c: 141: res = (res << 1) | LeerBit();
  2349   0012E6  ECF2  F008         	call	_LeerBit	;wreg free
  2350   0012EA  6E04               	movwf	??_LeerByte^0,c
  2351   0012EC  5005               	movf	LeerByte@res^0,w,c
  2352   0012EE  2405               	addwf	LeerByte@res^0,w,c
  2353   0012F0  1004               	iorwf	??_LeerByte^0,w,c
  2354   0012F2  6E05               	movwf	LeerByte@res^0,c
  2355   0012F4  0606               	decf	LeerByte@i^0,f,c
  2356   0012F6  5006               	movf	LeerByte@i^0,w,c
  2357   0012F8  A4D8               	btfss	status,2,c
  2358   0012FA  D7F5               	goto	l1154
  2359                           
  2360                           ;Lab5.c: 142: };Lab5.c: 143: return res;
  2361   0012FC  5005               	movf	LeerByte@res^0,w,c
  2362   0012FE  0012               	return		;funcret
  2363   001300                     __end_of_LeerByte:
  2364                           	callstack 0
  2365                           
  2366 ;; *************** function _LeerBit *****************
  2367 ;; Defined at:
  2368 ;;		line 146 in file "Lab5.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;  res             1    2[COMRAM] unsigned char 
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      unsigned char 
  2375 ;; Registers used:
  2376 ;;		wreg, status,2
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2382 ;;      Params:         0       0       0       0       0       0       0       0       0
  2383 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2384 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2385 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2386 ;;Total ram usage:        1 bytes
  2387 ;; Hardware stack levels used: 1
  2388 ;; Hardware stack levels required when called: 2
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_LeerByte
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text16
  2397   0011E4                     __ptext16:
  2398                           	callstack 0
  2399   0011E4                     _LeerBit:
  2400                           	callstack 26
  2401                           
  2402                           ;Lab5.c: 147: unsigned char res = 0;
  2403                           
  2404                           ;incstack = 0
  2405   0011E4  0E00               	movlw	0
  2406   0011E6  6E03               	movwf	LeerBit@res^0,c
  2407   0011E8                     l227:
  2408   0011E8  A482               	btfss	3970,2,c	;volatile
  2409   0011EA  D7FE               	goto	l227
  2410                           
  2411                           ;Lab5.c: 149: _delay((unsigned long)((13)*(8000000/4000000.0)));
  2412   0011EC  0E08               	movlw	8
  2413   0011EE                     u1327:
  2414   0011EE  2EE8               	decfsz	wreg,f,c
  2415   0011F0  D7FE               	bra	u1327
  2416   0011F2  D000               	nop2	
  2417                           
  2418                           ;Lab5.c: 150: if (RC2 == 1) res = 0;
  2419   0011F4  A482               	btfss	3970,2,c	;volatile
  2420   0011F6  D002               	goto	l1106
  2421   0011F8  0E00               	movlw	0
  2422   0011FA  6E03               	movwf	LeerBit@res^0,c
  2423   0011FC                     l1106:
  2424                           
  2425                           ;Lab5.c: 151: _delay((unsigned long)((22)*(8000000/4000000.0)));
  2426   0011FC  0E0E               	movlw	14
  2427   0011FE                     u1337:
  2428   0011FE  2EE8               	decfsz	wreg,f,c
  2429   001200  D7FE               	bra	u1337
  2430   001202  D000               	nop2	
  2431                           
  2432                           ;Lab5.c: 152: if (RC2 == 1) {
  2433   001204  A482               	btfss	3970,2,c	;volatile
  2434   001206  D004               	goto	u60
  2435                           
  2436                           ;Lab5.c: 153: res = 1;
  2437   001208  0E01               	movlw	1
  2438   00120A  6E03               	movwf	LeerBit@res^0,c
  2439   00120C                     l232:
  2440   00120C  B482               	btfsc	3970,2,c	;volatile
  2441   00120E  D7FE               	goto	l232
  2442   001210                     u60:
  2443                           
  2444                           ;Lab5.c: 155: };Lab5.c: 156: return res;
  2445   001210  5003               	movf	LeerBit@res^0,w,c
  2446   001212  0012               	return		;funcret
  2447   001214                     __end_of_LeerBit:
  2448                           	callstack 0
  2449                           
  2450 ;; *************** function _InicializaLCD *****************
  2451 ;; Defined at:
  2452 ;;		line 64 in file "LibLCDXC8.h"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;		None
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;		None
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg, status,2, status,0, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2466 ;;      Params:         0       0       0       0       0       0       0       0       0
  2467 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2468 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2469 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2470 ;;Total ram usage:        0 bytes
  2471 ;; Hardware stack levels used: 1
  2472 ;; Hardware stack levels required when called: 5
  2473 ;; This function calls:
  2474 ;;		_BorraLCD
  2475 ;;		_EnviaDato
  2476 ;;		_HabilitaLCD
  2477 ;;		_RetardoLCD
  2478 ;; This function is called by:
  2479 ;;		_main
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text17
  2484   000E34                     __ptext17:
  2485                           	callstack 0
  2486   000E34                     _InicializaLCD:
  2487                           	callstack 25
  2488                           
  2489                           ;LibLCDXC8.h: 66: LATE0=0;
  2490                           
  2491                           ;incstack = 0
  2492   000E34  908D               	bcf	3981,0,c	;volatile
  2493                           
  2494                           ;LibLCDXC8.h: 67: if(interfaz==4)
  2495   000E36  0E04               	movlw	4
  2496   000E38  1820               	xorwf	_interfaz^0,w,c
  2497   000E3A  A4D8               	btfss	status,2,c
  2498   000E3C  D004               	goto	l1308
  2499                           
  2500                           ;LibLCDXC8.h: 68: LATD=(LATD & 0b00001111) | 0x30;
  2501   000E3E  508C               	movf	140,w,c	;volatile
  2502   000E40  0B0F               	andlw	15
  2503   000E42  0930               	iorlw	48
  2504   000E44  D001               	goto	L4
  2505   000E46                     l1308:
  2506                           
  2507                           ;LibLCDXC8.h: 69: else;LibLCDXC8.h: 70: LATD=0x3F;
  2508   000E46  0E3F               	movlw	63
  2509   000E48                     L4:
  2510   000E48  6E8C               	movwf	140,c	;volatile
  2511                           
  2512                           ;LibLCDXC8.h: 71: HabilitaLCD();
  2513   000E4A  ECBD  F009         	call	_HabilitaLCD	;wreg free
  2514                           
  2515                           ;LibLCDXC8.h: 72: RetardoLCD(1);
  2516   000E4E  0E01               	movlw	1
  2517   000E50  ECEF  F007         	call	_RetardoLCD
  2518                           
  2519                           ;LibLCDXC8.h: 73: if(interfaz==4)
  2520   000E54  0E04               	movlw	4
  2521   000E56  1820               	xorwf	_interfaz^0,w,c
  2522   000E58  A4D8               	btfss	status,2,c
  2523   000E5A  D004               	goto	l1318
  2524                           
  2525                           ;LibLCDXC8.h: 74: LATD=(LATD & 0b00001111) | 0x30;
  2526   000E5C  508C               	movf	140,w,c	;volatile
  2527   000E5E  0B0F               	andlw	15
  2528   000E60  0930               	iorlw	48
  2529   000E62  D001               	goto	L5
  2530   000E64                     l1318:
  2531                           
  2532                           ;LibLCDXC8.h: 75: else;LibLCDXC8.h: 76: LATD=0x3F;
  2533   000E64  0E3F               	movlw	63
  2534   000E66                     L5:
  2535   000E66  6E8C               	movwf	140,c	;volatile
  2536                           
  2537                           ;LibLCDXC8.h: 77: HabilitaLCD();
  2538   000E68  ECBD  F009         	call	_HabilitaLCD	;wreg free
  2539                           
  2540                           ;LibLCDXC8.h: 78: RetardoLCD(3);
  2541   000E6C  0E03               	movlw	3
  2542   000E6E  ECEF  F007         	call	_RetardoLCD
  2543                           
  2544                           ;LibLCDXC8.h: 79: if(interfaz==4)
  2545   000E72  0E04               	movlw	4
  2546   000E74  1820               	xorwf	_interfaz^0,w,c
  2547   000E76  A4D8               	btfss	status,2,c
  2548   000E78  D004               	goto	l1328
  2549                           
  2550                           ;LibLCDXC8.h: 80: LATD=(LATD & 0b00001111) | 0x30;
  2551   000E7A  508C               	movf	140,w,c	;volatile
  2552   000E7C  0B0F               	andlw	15
  2553   000E7E  0930               	iorlw	48
  2554   000E80  D001               	goto	L6
  2555   000E82                     l1328:
  2556                           
  2557                           ;LibLCDXC8.h: 81: else;LibLCDXC8.h: 82: LATD=0x3F;
  2558   000E82  0E3F               	movlw	63
  2559   000E84                     L6:
  2560   000E84  6E8C               	movwf	140,c	;volatile
  2561                           
  2562                           ;LibLCDXC8.h: 83: HabilitaLCD();
  2563   000E86  ECBD  F009         	call	_HabilitaLCD	;wreg free
  2564                           
  2565                           ;LibLCDXC8.h: 84: RetardoLCD(4);
  2566   000E8A  0E04               	movlw	4
  2567   000E8C  ECEF  F007         	call	_RetardoLCD
  2568                           
  2569                           ;LibLCDXC8.h: 85: if(interfaz==4){
  2570   000E90  0E04               	movlw	4
  2571   000E92  1820               	xorwf	_interfaz^0,w,c
  2572   000E94  A4D8               	btfss	status,2,c
  2573   000E96  D011               	goto	l1348
  2574                           
  2575                           ;LibLCDXC8.h: 86: LATD=(LATD & 0b00001111) | 0x20;
  2576   000E98  508C               	movf	140,w,c	;volatile
  2577   000E9A  0B0F               	andlw	15
  2578   000E9C  0920               	iorlw	32
  2579   000E9E  6E8C               	movwf	140,c	;volatile
  2580                           
  2581                           ;LibLCDXC8.h: 87: HabilitaLCD();
  2582   000EA0  ECBD  F009         	call	_HabilitaLCD	;wreg free
  2583                           
  2584                           ;LibLCDXC8.h: 88: RetardoLCD(4);
  2585   000EA4  0E04               	movlw	4
  2586   000EA6  ECEF  F007         	call	_RetardoLCD
  2587                           
  2588                           ;LibLCDXC8.h: 89: EnviaDato(0x2F);
  2589   000EAA  0E2F               	movlw	47
  2590   000EAC  EC74  F008         	call	_EnviaDato
  2591                           
  2592                           ;LibLCDXC8.h: 90: HabilitaLCD();
  2593   000EB0  ECBD  F009         	call	_HabilitaLCD	;wreg free
  2594                           
  2595                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  2596   000EB4  0E04               	movlw	4
  2597   000EB6  ECEF  F007         	call	_RetardoLCD
  2598   000EBA                     l1348:
  2599                           
  2600                           ;LibLCDXC8.h: 92: };LibLCDXC8.h: 93: BorraLCD();
  2601   000EBA  ECA2  F009         	call	_BorraLCD	;wreg free
  2602                           
  2603                           ;LibLCDXC8.h: 94: EnviaDato(0xF);
  2604   000EBE  0E0F               	movlw	15
  2605   000EC0  EC74  F008         	call	_EnviaDato
  2606                           
  2607                           ;LibLCDXC8.h: 95: HabilitaLCD();
  2608   000EC4  ECBD  F009         	call	_HabilitaLCD	;wreg free
  2609                           
  2610                           ;LibLCDXC8.h: 96: RetardoLCD(4);
  2611   000EC8  0E04               	movlw	4
  2612   000ECA  ECEF  F007         	call	_RetardoLCD
  2613   000ECE  0012               	return		;funcret
  2614   000ED0                     __end_of_InicializaLCD:
  2615                           	callstack 0
  2616                           
  2617 ;; *************** function _BorraLCD *****************
  2618 ;; Defined at:
  2619 ;;		line 105 in file "LibLCDXC8.h"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2633 ;;      Params:         0       0       0       0       0       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2636 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2637 ;;Total ram usage:        0 bytes
  2638 ;; Hardware stack levels used: 1
  2639 ;; Hardware stack levels required when called: 4
  2640 ;; This function calls:
  2641 ;;		_EnviaDato
  2642 ;;		_HabilitaLCD
  2643 ;;		_RetardoLCD
  2644 ;; This function is called by:
  2645 ;;		_InicializaLCD
  2646 ;;		_main
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           	psect	text18
  2651   001344                     __ptext18:
  2652                           	callstack 0
  2653   001344                     _BorraLCD:
  2654                           	callstack 25
  2655                           
  2656                           ;LibLCDXC8.h: 107: LATE0=0;
  2657                           
  2658                           ;incstack = 0
  2659   001344  908D               	bcf	3981,0,c	;volatile
  2660                           
  2661                           ;LibLCDXC8.h: 108: EnviaDato(0x01);
  2662   001346  0E01               	movlw	1
  2663   001348  EC74  F008         	call	_EnviaDato
  2664                           
  2665                           ;LibLCDXC8.h: 109: HabilitaLCD();
  2666   00134C  ECBD  F009         	call	_HabilitaLCD	;wreg free
  2667                           
  2668                           ;LibLCDXC8.h: 110: RetardoLCD(2);
  2669   001350  0E02               	movlw	2
  2670   001352  ECEF  F007         	call	_RetardoLCD
  2671   001356  0012               	return		;funcret
  2672   001358                     __end_of_BorraLCD:
  2673                           	callstack 0
  2674                           
  2675 ;; *************** function _EnviaDato *****************
  2676 ;; Defined at:
  2677 ;;		line 54 in file "LibLCDXC8.h"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  a               1    wreg     unsigned char 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  a               1    5[COMRAM] unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2691 ;;      Params:         0       0       0       0       0       0       0       0       0
  2692 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2693 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2694 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2695 ;;Total ram usage:        2 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 3
  2698 ;; This function calls:
  2699 ;;		_HabilitaLCD
  2700 ;;		_RetardoLCD
  2701 ;; This function is called by:
  2702 ;;		_InicializaLCD
  2703 ;;		_BorraLCD
  2704 ;;		_EscribeLCD_c
  2705 ;;		_DireccionaLCD
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text19
  2710   0010E8                     __ptext19:
  2711                           	callstack 0
  2712   0010E8                     _EnviaDato:
  2713                           	callstack 25
  2714                           
  2715                           ;incstack = 0
  2716                           ;EnviaDato@a stored from wreg
  2717   0010E8  6E06               	movwf	EnviaDato@a^0,c
  2718                           
  2719                           ;LibLCDXC8.h: 55: if(interfaz==4){
  2720   0010EA  0E04               	movlw	4
  2721   0010EC  1820               	xorwf	_interfaz^0,w,c
  2722   0010EE  A4D8               	btfss	status,2,c
  2723   0010F0  D017               	goto	l1094
  2724                           
  2725                           ;LibLCDXC8.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2726   0010F2  C006  F005         	movff	EnviaDato@a,??_EnviaDato
  2727   0010F6  0EF0               	movlw	240
  2728   0010F8  1605               	andwf	??_EnviaDato^0,f,c
  2729   0010FA  508C               	movf	140,w,c	;volatile
  2730   0010FC  0B0F               	andlw	15
  2731   0010FE  1005               	iorwf	??_EnviaDato^0,w,c
  2732   001100  6E8C               	movwf	140,c	;volatile
  2733                           
  2734                           ;LibLCDXC8.h: 57: HabilitaLCD();
  2735   001102  ECBD  F009         	call	_HabilitaLCD	;wreg free
  2736                           
  2737                           ;LibLCDXC8.h: 58: RetardoLCD(1);
  2738   001106  0E01               	movlw	1
  2739   001108  ECEF  F007         	call	_RetardoLCD
  2740                           
  2741                           ;LibLCDXC8.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  2742   00110C  C006  F005         	movff	EnviaDato@a,??_EnviaDato
  2743   001110  3A05               	swapf	??_EnviaDato^0,f,c
  2744   001112  0EF0               	movlw	240
  2745   001114  1605               	andwf	??_EnviaDato^0,f,c
  2746   001116  508C               	movf	140,w,c	;volatile
  2747   001118  0B0F               	andlw	15
  2748   00111A  1005               	iorwf	??_EnviaDato^0,w,c
  2749   00111C  6E8C               	movwf	140,c	;volatile
  2750                           
  2751                           ;LibLCDXC8.h: 60: }else if(interfaz==8){
  2752   00111E  0012               	return	
  2753   001120                     l1094:
  2754   001120  0E08               	movlw	8
  2755   001122  1820               	xorwf	_interfaz^0,w,c
  2756   001124  A4D8               	btfss	status,2,c
  2757   001126  0012               	return	
  2758                           
  2759                           ;LibLCDXC8.h: 61: LATD=a;
  2760   001128  C006  FF8C         	movff	EnviaDato@a,3980	;volatile
  2761   00112C  0012               	return		;funcret
  2762   00112E                     __end_of_EnviaDato:
  2763                           	callstack 0
  2764                           
  2765 ;; *************** function _RetardoLCD *****************
  2766 ;; Defined at:
  2767 ;;		line 265 in file "LibLCDXC8.h"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  a               1    wreg     unsigned char 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  a               1    3[COMRAM] unsigned char 
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      void 
  2774 ;; Registers used:
  2775 ;;		wreg, status,2, status,0
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2781 ;;      Params:         0       0       0       0       0       0       0       0       0
  2782 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2783 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2784 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2785 ;;Total ram usage:        2 bytes
  2786 ;; Hardware stack levels used: 1
  2787 ;; Hardware stack levels required when called: 2
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_EnviaDato
  2792 ;;		_InicializaLCD
  2793 ;;		_BorraLCD
  2794 ;;		_EscribeLCD_c
  2795 ;;		_DireccionaLCD
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           	psect	text20
  2800   000FDE                     __ptext20:
  2801                           	callstack 0
  2802   000FDE                     _RetardoLCD:
  2803                           	callstack 26
  2804                           
  2805                           ;incstack = 0
  2806                           ;RetardoLCD@a stored from wreg
  2807   000FDE  6E04               	movwf	RetardoLCD@a^0,c
  2808                           
  2809                           ;LibLCDXC8.h: 266: switch(a){
  2810   000FE0  D023               	goto	l1082
  2811   000FE2                     l1072:
  2812   000FE2  0E62               	movlw	98
  2813   000FE4  6E03               	movwf	??_RetardoLCD^0,c
  2814   000FE6  0E66               	movlw	102
  2815   000FE8                     u1347:
  2816   000FE8  2EE8               	decfsz	wreg,f,c
  2817   000FEA  D7FE               	bra	u1347
  2818   000FEC  2E03               	decfsz	??_RetardoLCD^0,f,c
  2819   000FEE  D7FC               	bra	u1347
  2820                           
  2821                           ;LibLCDXC8.h: 269: break;
  2822   000FF0  0012               	return	
  2823   000FF2                     l1074:
  2824   000FF2  0E07               	movlw	7
  2825   000FF4  6E03               	movwf	??_RetardoLCD^0,c
  2826   000FF6  0E7D               	movlw	125
  2827   000FF8                     u1357:
  2828   000FF8  2EE8               	decfsz	wreg,f,c
  2829   000FFA  D7FE               	bra	u1357
  2830   000FFC  2E03               	decfsz	??_RetardoLCD^0,f,c
  2831   000FFE  D7FC               	bra	u1357
  2832   001000  F000               	nop	
  2833                           
  2834                           ;LibLCDXC8.h: 271: _delay((unsigned long)((640)*(20000000/4000000.0)));
  2835   001002  0E05               	movlw	5
  2836   001004  6E03               	movwf	??_RetardoLCD^0,c
  2837   001006  0E26               	movlw	38
  2838   001008                     u1367:
  2839   001008  2EE8               	decfsz	wreg,f,c
  2840   00100A  D7FE               	bra	u1367
  2841   00100C  2E03               	decfsz	??_RetardoLCD^0,f,c
  2842   00100E  D7FC               	bra	u1367
  2843   001010  D000               	nop2	
  2844                           
  2845                           ;LibLCDXC8.h: 273: break;
  2846   001012  0012               	return	
  2847   001014                     l1076:
  2848   001014  0EA6               	movlw	166
  2849   001016                     u1377:
  2850   001016  2EE8               	decfsz	wreg,f,c
  2851   001018  D7FE               	bra	u1377
  2852   00101A  D000               	nop2	
  2853                           
  2854                           ;LibLCDXC8.h: 276: break;
  2855   00101C  0012               	return	
  2856   00101E                     l1078:
  2857   00101E  0E42               	movlw	66
  2858   001020                     u1387:
  2859   001020  2EE8               	decfsz	wreg,f,c
  2860   001022  D7FE               	bra	u1387
  2861   001024  D000               	nop2	
  2862                           
  2863                           ;LibLCDXC8.h: 279: break;
  2864   001026  0012               	return	
  2865   001028                     l1082:
  2866   001028  5004               	movf	RetardoLCD@a^0,w,c
  2867                           
  2868                           ; Switch size 1, requested type "simple"
  2869                           ; Number of cases is 4, Range of values is 1 to 4
  2870                           ; switch strategies available:
  2871                           ; Name         Instructions Cycles
  2872                           ; simple_byte           13     7 (average)
  2873                           ;	Chosen strategy is simple_byte
  2874   00102A  0A01               	xorlw	1	; case 1
  2875   00102C  B4D8               	btfsc	status,2,c
  2876   00102E  D7D9               	goto	l1072
  2877   001030  0A03               	xorlw	3	; case 2
  2878   001032  B4D8               	btfsc	status,2,c
  2879   001034  D7DE               	goto	l1074
  2880   001036  0A01               	xorlw	1	; case 3
  2881   001038  B4D8               	btfsc	status,2,c
  2882   00103A  D7EC               	goto	l1076
  2883   00103C  0A07               	xorlw	7	; case 4
  2884   00103E  A4D8               	btfss	status,2,c
  2885   001040  0012               	return	
  2886   001042  D7ED               	goto	l1078
  2887   001044                     __end_of_RetardoLCD:
  2888                           	callstack 0
  2889                           
  2890 ;; *************** function _HabilitaLCD *****************
  2891 ;; Defined at:
  2892 ;;		line 98 in file "LibLCDXC8.h"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;		None
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2906 ;;      Params:         0       0       0       0       0       0       0       0       0
  2907 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2908 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2909 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2910 ;;Total ram usage:        0 bytes
  2911 ;; Hardware stack levels used: 1
  2912 ;; Hardware stack levels required when called: 2
  2913 ;; This function calls:
  2914 ;;		Nothing
  2915 ;; This function is called by:
  2916 ;;		_EnviaDato
  2917 ;;		_InicializaLCD
  2918 ;;		_BorraLCD
  2919 ;;		_EscribeLCD_c
  2920 ;;		_DireccionaLCD
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text21
  2925   00137A                     __ptext21:
  2926                           	callstack 0
  2927   00137A                     _HabilitaLCD:
  2928                           	callstack 26
  2929                           
  2930                           ;LibLCDXC8.h: 100: LATE1=1;
  2931                           
  2932                           ;incstack = 0
  2933   00137A  828D               	bsf	3981,1,c	;volatile
  2934                           
  2935                           ;LibLCDXC8.h: 101: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2936   00137C  0E42               	movlw	66
  2937   00137E                     u1397:
  2938   00137E  2EE8               	decfsz	wreg,f,c
  2939   001380  D7FE               	bra	u1397
  2940   001382  D000               	nop2	
  2941                           
  2942                           ;LibLCDXC8.h: 103: LATE1=0;
  2943   001384  928D               	bcf	3981,1,c	;volatile
  2944   001386  0012               	return		;funcret
  2945   001388                     __end_of_HabilitaLCD:
  2946                           	callstack 0
  2947                           
  2948 ;; *************** function _GuardarDatoEnEEPROM *****************
  2949 ;; Defined at:
  2950 ;;		line 277 in file "Lab5.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  dir             2    2[COMRAM] unsigned int 
  2953 ;;  dato            1    4[COMRAM] unsigned char 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg, status,2
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2965 ;;      Params:         3       0       0       0       0       0       0       0       0
  2966 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2968 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2969 ;;Total ram usage:        3 bytes
  2970 ;; Hardware stack levels used: 1
  2971 ;; Hardware stack levels required when called: 2
  2972 ;; This function calls:
  2973 ;;		Nothing
  2974 ;; This function is called by:
  2975 ;;		_main
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text22
  2980   0012B8                     __ptext22:
  2981                           	callstack 0
  2982   0012B8                     _GuardarDatoEnEEPROM:
  2983                           	callstack 28
  2984                           
  2985                           ;Lab5.c: 278: EEADR = dir;
  2986                           
  2987                           ;incstack = 0
  2988   0012B8  C003  FFA9         	movff	GuardarDatoEnEEPROM@dir,4009	;volatile
  2989                           
  2990                           ;Lab5.c: 279: EEDATA = dato;
  2991   0012BC  C005  FFA8         	movff	GuardarDatoEnEEPROM@dato,4008	;volatile
  2992                           
  2993                           ;Lab5.c: 281: EEPGD = 0;
  2994   0012C0  9EA6               	bcf	4006,7,c	;volsfr
  2995                           
  2996                           ;Lab5.c: 282: CFGS = 0;
  2997   0012C2  9CA6               	bcf	4006,6,c	;volsfr
  2998                           
  2999                           ;Lab5.c: 283: WREN = 1;
  3000   0012C4  84A6               	bsf	4006,2,c	;volsfr
  3001                           
  3002                           ;Lab5.c: 285: GIE = 0;
  3003   0012C6  9EF2               	bcf	4082,7,c	;volatile
  3004                           
  3005                           ;Lab5.c: 287: EECON2 = 0x55;
  3006   0012C8  0E55               	movlw	85
  3007   0012CA  6EA7               	movwf	167,c	;volsfr
  3008                           
  3009                           ;Lab5.c: 288: EECON2 = 0xAA;
  3010   0012CC  0EAA               	movlw	170
  3011   0012CE  6EA7               	movwf	167,c	;volsfr
  3012                           
  3013                           ;Lab5.c: 289: WR = 1;
  3014   0012D0  82A6               	bsf	4006,1,c	;volsfr
  3015                           
  3016                           ;Lab5.c: 290: GIE = 1;
  3017   0012D2  8EF2               	bsf	4082,7,c	;volatile
  3018   0012D4                     l290:
  3019   0012D4  A8A1               	btfss	4001,4,c	;volatile
  3020   0012D6  D7FE               	goto	l290
  3021                           
  3022                           ;Lab5.c: 292: EEIF = 0;
  3023   0012D8  98A1               	bcf	4001,4,c	;volatile
  3024                           
  3025                           ;Lab5.c: 293: WREN = 0;
  3026   0012DA  94A6               	bcf	4006,2,c	;volsfr
  3027   0012DC  0012               	return		;funcret
  3028   0012DE                     __end_of_GuardarDatoEnEEPROM:
  3029                           	callstack 0
  3030                           
  3031 ;; *************** function _Conversion *****************
  3032 ;; Defined at:
  3033 ;;		line 270 in file "Lab5.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  canal           1    wreg     unsigned char 
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  canal           1    2[COMRAM] unsigned char 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  2   80[None  ] unsigned int 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3047 ;;      Params:         0       0       0       0       0       0       0       0       0
  3048 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3050 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3051 ;;Total ram usage:        1 bytes
  3052 ;; Hardware stack levels used: 1
  3053 ;; Hardware stack levels required when called: 2
  3054 ;; This function calls:
  3055 ;;		Nothing
  3056 ;; This function is called by:
  3057 ;;		_main
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text23
  3062   001358                     __ptext23:
  3063                           	callstack 0
  3064   001358                     _Conversion:
  3065                           	callstack 28
  3066                           
  3067                           ;incstack = 0
  3068                           ;Conversion@canal stored from wreg
  3069   001358  6E03               	movwf	Conversion@canal^0,c
  3070                           
  3071                           ;Lab5.c: 271: ADCON0 = 0b00000001 | (canal << 2);
  3072   00135A  4403               	rlncf	Conversion@canal^0,w,c
  3073   00135C  46E8               	rlncf	wreg,f,c
  3074   00135E  0BFC               	andlw	252
  3075   001360  0901               	iorlw	1
  3076   001362  6EC2               	movwf	194,c	;volatile
  3077                           
  3078                           ;Lab5.c: 272: GO = 1;
  3079   001364  82C2               	bsf	4034,1,c	;volatile
  3080   001366                     l284:
  3081   001366  A2C2               	btfss	4034,1,c	;volatile
  3082   001368  0012               	return	
  3083   00136A  D7FD               	goto	l284
  3084   00136C                     __end_of_Conversion:
  3085                           	callstack 0
  3086                           
  3087 ;; *************** function _ConfiguraLCD *****************
  3088 ;; Defined at:
  3089 ;;		line 50 in file "LibLCDXC8.h"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  a               1    wreg     unsigned char 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  a               1    2[COMRAM] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3103 ;;      Params:         0       0       0       0       0       0       0       0       0
  3104 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3106 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3107 ;;Total ram usage:        1 bytes
  3108 ;; Hardware stack levels used: 1
  3109 ;; Hardware stack levels required when called: 2
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text24
  3118   001300                     __ptext24:
  3119                           	callstack 0
  3120   001300                     _ConfiguraLCD:
  3121                           	callstack 28
  3122                           
  3123                           ;incstack = 0
  3124                           ;ConfiguraLCD@a stored from wreg
  3125   001300  6E03               	movwf	ConfiguraLCD@a^0,c
  3126                           
  3127                           ;LibLCDXC8.h: 51: if(a==4 | a ==8)
  3128   001302  0E04               	movlw	4
  3129   001304  1803               	xorwf	ConfiguraLCD@a^0,w,c
  3130   001306  B4D8               	btfsc	status,2,c
  3131   001308  D004               	goto	u270
  3132   00130A  0E08               	movlw	8
  3133   00130C  1803               	xorwf	ConfiguraLCD@a^0,w,c
  3134   00130E  A4D8               	btfss	status,2,c
  3135   001310  0012               	return	
  3136   001312                     u270:
  3137                           
  3138                           ;LibLCDXC8.h: 52: interfaz=a;
  3139   001312  C003  F020         	movff	ConfiguraLCD@a,_interfaz
  3140   001316  0012               	return		;funcret
  3141   001318                     __end_of_ConfiguraLCD:
  3142                           	callstack 0
  3143                           
  3144 ;; *************** function _ColorRGB *****************
  3145 ;; Defined at:
  3146 ;;		line 234 in file "Lab5.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  val             2    2[COMRAM] unsigned int 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3160 ;;      Params:         2       0       0       0       0       0       0       0       0
  3161 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3163 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3164 ;;Total ram usage:        2 bytes
  3165 ;; Hardware stack levels used: 1
  3166 ;; Hardware stack levels required when called: 2
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_main
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           	psect	text25
  3175   000D4C                     __ptext25:
  3176                           	callstack 0
  3177   000D4C                     _ColorRGB:
  3178                           	callstack 28
  3179                           
  3180                           ;Lab5.c: 235: if (val < 22) {
  3181                           
  3182                           ;incstack = 0
  3183   000D4C  5004               	movf	(ColorRGB@val+1)^0,w,c
  3184   000D4E  E108               	bnz	l1844
  3185   000D50  0E16               	movlw	22
  3186   000D52  5C03               	subwf	ColorRGB@val^0,w,c
  3187   000D54  B0D8               	btfsc	status,0,c
  3188   000D56  D004               	goto	l1844
  3189                           
  3190                           ;Lab5.c: 236: RB5 = 0;
  3191   000D58  9A81               	bcf	3969,5,c	;volatile
  3192                           
  3193                           ;Lab5.c: 237: RB6 = 0;
  3194   000D5A  9C81               	bcf	3969,6,c	;volatile
  3195                           
  3196                           ;Lab5.c: 238: RB7 = 0;
  3197   000D5C  9E81               	bcf	3969,7,c	;volatile
  3198                           
  3199                           ;Lab5.c: 239: } else if (val >= 22 && val < 25) {
  3200   000D5E  0012               	return	
  3201   000D60                     l1844:
  3202   000D60  5004               	movf	(ColorRGB@val+1)^0,w,c
  3203   000D62  E104               	bnz	u910
  3204   000D64  0E16               	movlw	22
  3205   000D66  5C03               	subwf	ColorRGB@val^0,w,c
  3206   000D68  A0D8               	btfss	status,0,c
  3207   000D6A  D00A               	goto	l1850
  3208   000D6C                     u910:
  3209   000D6C  5004               	movf	(ColorRGB@val+1)^0,w,c
  3210   000D6E  E108               	bnz	l1850
  3211   000D70  0E19               	movlw	25
  3212   000D72  5C03               	subwf	ColorRGB@val^0,w,c
  3213   000D74  B0D8               	btfsc	status,0,c
  3214   000D76  D004               	goto	l1850
  3215                           
  3216                           ;Lab5.c: 240: RB5 = 1;
  3217   000D78  8A81               	bsf	3969,5,c	;volatile
  3218                           
  3219                           ;Lab5.c: 241: RB6 = 0;
  3220   000D7A  9C81               	bcf	3969,6,c	;volatile
  3221                           
  3222                           ;Lab5.c: 242: RB7 = 1;
  3223   000D7C  8E81               	bsf	3969,7,c	;volatile
  3224                           
  3225                           ;Lab5.c: 243: } else if (val >= 25 && val < 28) {
  3226   000D7E  0012               	return	
  3227   000D80                     l1850:
  3228   000D80  5004               	movf	(ColorRGB@val+1)^0,w,c
  3229   000D82  E104               	bnz	u930
  3230   000D84  0E19               	movlw	25
  3231   000D86  5C03               	subwf	ColorRGB@val^0,w,c
  3232   000D88  A0D8               	btfss	status,0,c
  3233   000D8A  D00A               	goto	l1856
  3234   000D8C                     u930:
  3235   000D8C  5004               	movf	(ColorRGB@val+1)^0,w,c
  3236   000D8E  E108               	bnz	l1856
  3237   000D90  0E1C               	movlw	28
  3238   000D92  5C03               	subwf	ColorRGB@val^0,w,c
  3239   000D94  B0D8               	btfsc	status,0,c
  3240   000D96  D004               	goto	l1856
  3241                           
  3242                           ;Lab5.c: 244: RB5 = 1;
  3243   000D98  8A81               	bsf	3969,5,c	;volatile
  3244                           
  3245                           ;Lab5.c: 245: RB6 = 0;
  3246   000D9A  9C81               	bcf	3969,6,c	;volatile
  3247                           
  3248                           ;Lab5.c: 246: RB7 = 0;
  3249   000D9C  9E81               	bcf	3969,7,c	;volatile
  3250                           
  3251                           ;Lab5.c: 247: } else if (val >= 28 && val < 31) {
  3252   000D9E  0012               	return	
  3253   000DA0                     l1856:
  3254   000DA0  5004               	movf	(ColorRGB@val+1)^0,w,c
  3255   000DA2  E104               	bnz	u950
  3256   000DA4  0E1C               	movlw	28
  3257   000DA6  5C03               	subwf	ColorRGB@val^0,w,c
  3258   000DA8  A0D8               	btfss	status,0,c
  3259   000DAA  D00A               	goto	l1862
  3260   000DAC                     u950:
  3261   000DAC  5004               	movf	(ColorRGB@val+1)^0,w,c
  3262   000DAE  E108               	bnz	l1862
  3263   000DB0  0E1F               	movlw	31
  3264   000DB2  5C03               	subwf	ColorRGB@val^0,w,c
  3265   000DB4  B0D8               	btfsc	status,0,c
  3266   000DB6  D004               	goto	l1862
  3267                           
  3268                           ;Lab5.c: 248: RB5 = 1;
  3269   000DB8  8A81               	bsf	3969,5,c	;volatile
  3270                           
  3271                           ;Lab5.c: 249: RB6 = 1;
  3272   000DBA  8C81               	bsf	3969,6,c	;volatile
  3273                           
  3274                           ;Lab5.c: 250: RB7 = 0;
  3275   000DBC  9E81               	bcf	3969,7,c	;volatile
  3276                           
  3277                           ;Lab5.c: 251: } else if (val >= 31 && val < 34) {
  3278   000DBE  0012               	return	
  3279   000DC0                     l1862:
  3280   000DC0  5004               	movf	(ColorRGB@val+1)^0,w,c
  3281   000DC2  E104               	bnz	u970
  3282   000DC4  0E1F               	movlw	31
  3283   000DC6  5C03               	subwf	ColorRGB@val^0,w,c
  3284   000DC8  A0D8               	btfss	status,0,c
  3285   000DCA  D00A               	goto	l1868
  3286   000DCC                     u970:
  3287   000DCC  5004               	movf	(ColorRGB@val+1)^0,w,c
  3288   000DCE  E108               	bnz	l1868
  3289   000DD0  0E22               	movlw	34
  3290   000DD2  5C03               	subwf	ColorRGB@val^0,w,c
  3291   000DD4  B0D8               	btfsc	status,0,c
  3292   000DD6  D004               	goto	l1868
  3293                           
  3294                           ;Lab5.c: 252: RB5 = 0;
  3295   000DD8  9A81               	bcf	3969,5,c	;volatile
  3296                           
  3297                           ;Lab5.c: 253: RB6 = 1;
  3298   000DDA  8C81               	bsf	3969,6,c	;volatile
  3299                           
  3300                           ;Lab5.c: 254: RB7 = 0;
  3301   000DDC  9E81               	bcf	3969,7,c	;volatile
  3302                           
  3303                           ;Lab5.c: 255: } else if (val >= 34 && val < 37) {
  3304   000DDE  0012               	return	
  3305   000DE0                     l1868:
  3306   000DE0  5004               	movf	(ColorRGB@val+1)^0,w,c
  3307   000DE2  E104               	bnz	u990
  3308   000DE4  0E22               	movlw	34
  3309   000DE6  5C03               	subwf	ColorRGB@val^0,w,c
  3310   000DE8  A0D8               	btfss	status,0,c
  3311   000DEA  D00A               	goto	l1874
  3312   000DEC                     u990:
  3313   000DEC  5004               	movf	(ColorRGB@val+1)^0,w,c
  3314   000DEE  E108               	bnz	l1874
  3315   000DF0  0E25               	movlw	37
  3316   000DF2  5C03               	subwf	ColorRGB@val^0,w,c
  3317   000DF4  B0D8               	btfsc	status,0,c
  3318   000DF6  D004               	goto	l1874
  3319                           
  3320                           ;Lab5.c: 256: RB5 = 0;
  3321   000DF8  9A81               	bcf	3969,5,c	;volatile
  3322                           
  3323                           ;Lab5.c: 257: RB6 = 1;
  3324   000DFA  8C81               	bsf	3969,6,c	;volatile
  3325                           
  3326                           ;Lab5.c: 258: RB7 = 1;
  3327   000DFC  8E81               	bsf	3969,7,c	;volatile
  3328                           
  3329                           ;Lab5.c: 259: } else if (val >= 37 && val < 42) {
  3330   000DFE  0012               	return	
  3331   000E00                     l1874:
  3332   000E00  5004               	movf	(ColorRGB@val+1)^0,w,c
  3333   000E02  E104               	bnz	u1010
  3334   000E04  0E25               	movlw	37
  3335   000E06  5C03               	subwf	ColorRGB@val^0,w,c
  3336   000E08  A0D8               	btfss	status,0,c
  3337   000E0A  D00A               	goto	l1880
  3338   000E0C                     u1010:
  3339   000E0C  5004               	movf	(ColorRGB@val+1)^0,w,c
  3340   000E0E  E108               	bnz	l1880
  3341   000E10  0E2A               	movlw	42
  3342   000E12  5C03               	subwf	ColorRGB@val^0,w,c
  3343   000E14  B0D8               	btfsc	status,0,c
  3344   000E16  D004               	goto	l1880
  3345                           
  3346                           ;Lab5.c: 260: RB5 = 0;
  3347   000E18  9A81               	bcf	3969,5,c	;volatile
  3348                           
  3349                           ;Lab5.c: 261: RB6 = 0;
  3350   000E1A  9C81               	bcf	3969,6,c	;volatile
  3351                           
  3352                           ;Lab5.c: 262: RB7 = 1;
  3353   000E1C  8E81               	bsf	3969,7,c	;volatile
  3354                           
  3355                           ;Lab5.c: 263: } else if (val >= 42) {
  3356   000E1E  0012               	return	
  3357   000E20                     l1880:
  3358   000E20  5004               	movf	(ColorRGB@val+1)^0,w,c
  3359   000E22  E104               	bnz	u1030
  3360   000E24  0E2A               	movlw	42
  3361   000E26  5C03               	subwf	ColorRGB@val^0,w,c
  3362   000E28  A0D8               	btfss	status,0,c
  3363   000E2A  0012               	return	
  3364   000E2C                     u1030:
  3365                           
  3366                           ;Lab5.c: 264: RB5 = 1;
  3367   000E2C  8A81               	bsf	3969,5,c	;volatile
  3368                           
  3369                           ;Lab5.c: 265: RB6 = 1;
  3370   000E2E  8C81               	bsf	3969,6,c	;volatile
  3371                           
  3372                           ;Lab5.c: 266: RB7 = 1;
  3373   000E30  8E81               	bsf	3969,7,c	;volatile
  3374   000E32  0012               	return	
  3375   000E34                     __end_of_ColorRGB:
  3376                           	callstack 0
  3377                           
  3378 ;; *************** function _ISR *****************
  3379 ;; Defined at:
  3380 ;;		line 306 in file "Lab5.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      void 
  3387 ;; Registers used:
  3388 ;;		wreg, status,2, status,0, cstack
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3394 ;;      Params:         0       0       0       0       0       0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3396 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3397 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3398 ;;Total ram usage:        2 bytes
  3399 ;; Hardware stack levels used: 1
  3400 ;; Hardware stack levels required when called: 1
  3401 ;; This function calls:
  3402 ;;		_Recibir
  3403 ;; This function is called by:
  3404 ;;		Interrupt level 2
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	intcode
  3409   000008                     __pintcode:
  3410                           	callstack 0
  3411   000008                     _ISR:
  3412                           	callstack 25
  3413                           
  3414                           ;incstack = 0
  3415   000008  8221               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3416   00000A  ED68  F007         	call	int_func,f	;refresh shadow registers
  3417                           
  3418                           	psect	intcode_body
  3419   000ED0                     __pintcode_body:
  3420                           	callstack 25
  3421   000ED0                     int_func:
  3422                           	callstack 25
  3423   000ED0  0006               	pop		; remove dummy address from shadow register refresh
  3424                           
  3425                           ;Lab5.c: 307: if(TMR0IF){
  3426   000ED2  A4F2               	btfss	4082,2,c	;volatile
  3427   000ED4  D00A               	goto	i2l1652
  3428                           
  3429                           ;Lab5.c: 308: TMR0IF=0;
  3430   000ED6  94F2               	bcf	4082,2,c	;volatile
  3431                           
  3432                           ;Lab5.c: 309: RE2 = !RE2;
  3433   000ED8  B484               	btfsc	3972,2,c	;volatile
  3434   000EDA  D002               	goto	i2u67_40
  3435   000EDC  8484               	bsf	3972,2,c	;volatile
  3436   000EDE  D001               	goto	i2u68_45
  3437   000EE0                     i2u67_40:
  3438   000EE0  9484               	bcf	3972,2,c	;volatile
  3439   000EE2                     i2u68_45:
  3440                           
  3441                           ;Lab5.c: 310: TMR0 = 3036;
  3442   000EE2  0E0B               	movlw	11
  3443   000EE4  6ED7               	movwf	215,c	;volatile
  3444   000EE6  0EDC               	movlw	220
  3445   000EE8  6ED6               	movwf	214,c	;volatile
  3446   000EEA                     i2l1652:
  3447                           
  3448                           ;Lab5.c: 312: };Lab5.c: 313: if(RCIF){
  3449   000EEA  BA9E               	btfsc	3998,5,c	;volatile
  3450   000EEC  D01A               	goto	i2l1666
  3451   000EEE  D033               	goto	i2l310
  3452   000EF0                     i2l1656:
  3453                           
  3454                           ;Lab5.c: 316: A=0;
  3455   000EF0  0E00               	movlw	0
  3456   000EF2  6E1C               	movwf	(_A+1)^0,c
  3457   000EF4  0E00               	movlw	0
  3458   000EF6  6E1B               	movwf	_A^0,c
  3459                           
  3460                           ;Lab5.c: 317: B=0;
  3461   000EF8  0E00               	movlw	0
  3462   000EFA  6E1A               	movwf	(_B+1)^0,c
  3463   000EFC  0E00               	movlw	0
  3464   000EFE  D00F               	goto	L9
  3465   000F00                     i2l1658:
  3466                           
  3467                           ;Lab5.c: 320: A=0;
  3468   000F00  0E00               	movlw	0
  3469   000F02  6E1C               	movwf	(_A+1)^0,c
  3470   000F04  0E00               	movlw	0
  3471   000F06  D007               	goto	L11
  3472   000F08                     i2l1660:
  3473                           
  3474                           ;Lab5.c: 324: A=1;
  3475   000F08  0E00               	movlw	0
  3476   000F0A  6E1C               	movwf	(_A+1)^0,c
  3477   000F0C  0E01               	movlw	1
  3478   000F0E  D7F3               	goto	L10
  3479   000F10                     i2l1662:
  3480                           
  3481                           ;Lab5.c: 328: A=1;
  3482   000F10  0E00               	movlw	0
  3483   000F12  6E1C               	movwf	(_A+1)^0,c
  3484   000F14  0E01               	movlw	1
  3485   000F16                     L11:
  3486   000F16  6E1B               	movwf	_A^0,c
  3487                           
  3488                           ;Lab5.c: 329: B=1;
  3489   000F18  0E00               	movlw	0
  3490   000F1A  6E1A               	movwf	(_B+1)^0,c
  3491   000F1C  0E01               	movlw	1
  3492   000F1E                     L9:
  3493   000F1E  6E19               	movwf	_B^0,c
  3494                           
  3495                           ;Lab5.c: 330: break;
  3496   000F20  D00E               	goto	i2l1668
  3497   000F22                     i2l1666:
  3498   000F22  ECCA  F009         	call	_Recibir	;wreg free
  3499                           
  3500                           ; Switch size 1, requested type "simple"
  3501                           ; Number of cases is 4, Range of values is 67 to 82
  3502                           ; switch strategies available:
  3503                           ; Name         Instructions Cycles
  3504                           ; simple_byte           13     7 (average)
  3505                           ;	Chosen strategy is simple_byte
  3506   000F26  0A43               	xorlw	67	; case 67
  3507   000F28  B4D8               	btfsc	status,2,c
  3508   000F2A  D7E2               	goto	i2l1656
  3509   000F2C  0A05               	xorlw	5	; case 70
  3510   000F2E  B4D8               	btfsc	status,2,c
  3511   000F30  D7EF               	goto	i2l1662
  3512   000F32  0A0D               	xorlw	13	; case 75
  3513   000F34  B4D8               	btfsc	status,2,c
  3514   000F36  D7E4               	goto	i2l1658
  3515   000F38  0A19               	xorlw	25	; case 82
  3516   000F3A  B4D8               	btfsc	status,2,c
  3517   000F3C  D7E5               	goto	i2l1660
  3518   000F3E                     i2l1668:
  3519                           
  3520                           ;Lab5.c: 334: _delay((unsigned long)((100)*(8000000/4000.0)));
  3521   000F3E  0E02               	movlw	2
  3522   000F40  6E02               	movwf	(??_ISR+1)^0,c
  3523   000F42  0E04               	movlw	4
  3524   000F44  6E01               	movwf	??_ISR^0,c
  3525   000F46  0EBA               	movlw	186
  3526   000F48                     i2u140_47:
  3527   000F48  2EE8               	decfsz	wreg,f,c
  3528   000F4A  D7FE               	bra	i2u140_47
  3529   000F4C  2E01               	decfsz	??_ISR^0,f,c
  3530   000F4E  D7FC               	bra	i2u140_47
  3531   000F50  2E02               	decfsz	(??_ISR+1)^0,f,c
  3532   000F52  D7FA               	bra	i2u140_47
  3533   000F54  D000               	nop2	
  3534   000F56                     i2l310:
  3535   000F56  9221               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3536   000F58  0011               	retfie		f
  3537   000F5A                     __end_of_ISR:
  3538                           	callstack 0
  3539                           
  3540 ;; *************** function _Recibir *****************
  3541 ;; Defined at:
  3542 ;;		line 164 in file "Lab5.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;		None
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      unsigned char 
  3549 ;; Registers used:
  3550 ;;		wreg, status,2
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3556 ;;      Params:         0       0       0       0       0       0       0       0       0
  3557 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3558 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3559 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3560 ;;Total ram usage:        0 bytes
  3561 ;; Hardware stack levels used: 1
  3562 ;; This function calls:
  3563 ;;		Nothing
  3564 ;; This function is called by:
  3565 ;;		_ISR
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text27
  3570   001394                     __ptext27:
  3571                           	callstack 0
  3572   001394                     _Recibir:
  3573                           	callstack 25
  3574                           
  3575                           ;Lab5.c: 165: while(RCIF==0);
  3576                           
  3577                           ;incstack = 0
  3578   001394  AA9E               	btfss	3998,5,c	;volatile
  3579   001396  D7FE               	goto	__ptext27
  3580                           
  3581                           ;Lab5.c: 166: return RCREG;
  3582   001398  50AE               	movf	174,w,c	;volatile
  3583   00139A  0012               	return		;funcret
  3584   00139C                     __end_of_Recibir:
  3585                           	callstack 0
  3586                           
  3587                           	psect	rparam
  3588   000000                     
  3589                           	psect	temp
  3590   000021                     btemp:
  3591                           	callstack 0
  3592   000021                     	ds	1
  3593   000000                     int$flags	set	btemp
  3594   000000                     wtemp8	set	btemp+1
  3595   000000                     ttemp5	set	btemp+1
  3596   000000                     ttemp6	set	btemp+4
  3597   000000                     ttemp7	set	btemp+8
  3598                           
  3599                           	psect	idloc
  3600                           
  3601                           ;Config register IDLOC0 @ 0x200000
  3602                           ;	unspecified, using default values
  3603   200000                     	org	2097152
  3604   200000  FF                 	db	255
  3605                           
  3606                           ;Config register IDLOC1 @ 0x200001
  3607                           ;	unspecified, using default values
  3608   200001                     	org	2097153
  3609   200001  FF                 	db	255
  3610                           
  3611                           ;Config register IDLOC2 @ 0x200002
  3612                           ;	unspecified, using default values
  3613   200002                     	org	2097154
  3614   200002  FF                 	db	255
  3615                           
  3616                           ;Config register IDLOC3 @ 0x200003
  3617                           ;	unspecified, using default values
  3618   200003                     	org	2097155
  3619   200003  FF                 	db	255
  3620                           
  3621                           ;Config register IDLOC4 @ 0x200004
  3622                           ;	unspecified, using default values
  3623   200004                     	org	2097156
  3624   200004  FF                 	db	255
  3625                           
  3626                           ;Config register IDLOC5 @ 0x200005
  3627                           ;	unspecified, using default values
  3628   200005                     	org	2097157
  3629   200005  FF                 	db	255
  3630                           
  3631                           ;Config register IDLOC6 @ 0x200006
  3632                           ;	unspecified, using default values
  3633   200006                     	org	2097158
  3634   200006  FF                 	db	255
  3635                           
  3636                           ;Config register IDLOC7 @ 0x200007
  3637                           ;	unspecified, using default values
  3638   200007                     	org	2097159
  3639   200007  FF                 	db	255
  3640                           
  3641                           	psect	config
  3642                           
  3643                           ;Config register CONFIG1L @ 0x300000
  3644                           ;	unspecified, using default values
  3645                           ;	PLL Prescaler Selection bits
  3646                           ;	PLLDIV = 0x0, unprogrammed default
  3647                           ;	System Clock Postscaler Selection bits
  3648                           ;	CPUDIV = 0x0, unprogrammed default
  3649                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3650                           ;	USBDIV = 0x0, unprogrammed default
  3651   300000                     	org	3145728
  3652   300000  00                 	db	0
  3653                           
  3654                           ;Config register CONFIG1H @ 0x300001
  3655                           ;	Oscillator Selection bits
  3656                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3657                           ;	Fail-Safe Clock Monitor Enable bit
  3658                           ;	FCMEN = 0x0, unprogrammed default
  3659                           ;	Internal/External Oscillator Switchover bit
  3660                           ;	IESO = 0x0, unprogrammed default
  3661   300001                     	org	3145729
  3662   300001  09                 	db	9
  3663                           
  3664                           ;Config register CONFIG2L @ 0x300002
  3665                           ;	unspecified, using default values
  3666                           ;	Power-up Timer Enable bit
  3667                           ;	PWRT = 0x1, unprogrammed default
  3668                           ;	Brown-out Reset Enable bits
  3669                           ;	BOR = 0x3, unprogrammed default
  3670                           ;	Brown-out Reset Voltage bits
  3671                           ;	BORV = 0x3, unprogrammed default
  3672                           ;	USB Voltage Regulator Enable bit
  3673                           ;	VREGEN = 0x0, unprogrammed default
  3674   300002                     	org	3145730
  3675   300002  1F                 	db	31
  3676                           
  3677                           ;Config register CONFIG2H @ 0x300003
  3678                           ;	Watchdog Timer Enable bit
  3679                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3680                           ;	Watchdog Timer Postscale Select bits
  3681                           ;	WDTPS = 0xF, unprogrammed default
  3682   300003                     	org	3145731
  3683   300003  1E                 	db	30
  3684                           
  3685                           ; Padding undefined space
  3686   300004                     	org	3145732
  3687   300004  FF                 	db	255
  3688                           
  3689                           ;Config register CONFIG3H @ 0x300005
  3690                           ;	CCP2 MUX bit
  3691                           ;	CCP2MX = 0x1, unprogrammed default
  3692                           ;	PORTB A/D Enable bit
  3693                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3694                           ;	Low-Power Timer 1 Oscillator Enable bit
  3695                           ;	LPT1OSC = 0x0, unprogrammed default
  3696                           ;	MCLR Pin Enable bit
  3697                           ;	MCLRE = 0x1, unprogrammed default
  3698   300005                     	org	3145733
  3699   300005  81                 	db	129
  3700                           
  3701                           ;Config register CONFIG4L @ 0x300006
  3702                           ;	Stack Full/Underflow Reset Enable bit
  3703                           ;	STVREN = 0x1, unprogrammed default
  3704                           ;	Single-Supply ICSP Enable bit
  3705                           ;	LVP = OFF, Single-Supply ICSP disabled
  3706                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3707                           ;	ICPRT = 0x0, unprogrammed default
  3708                           ;	Extended Instruction Set Enable bit
  3709                           ;	XINST = 0x0, unprogrammed default
  3710                           ;	Background Debugger Enable bit
  3711                           ;	DEBUG = 0x1, unprogrammed default
  3712   300006                     	org	3145734
  3713   300006  81                 	db	129
  3714                           
  3715                           ; Padding undefined space
  3716   300007                     	org	3145735
  3717   300007  FF                 	db	255
  3718                           
  3719                           ;Config register CONFIG5L @ 0x300008
  3720                           ;	unspecified, using default values
  3721                           ;	Code Protection bit
  3722                           ;	CP0 = 0x1, unprogrammed default
  3723                           ;	Code Protection bit
  3724                           ;	CP1 = 0x1, unprogrammed default
  3725                           ;	Code Protection bit
  3726                           ;	CP2 = 0x1, unprogrammed default
  3727                           ;	Code Protection bit
  3728                           ;	CP3 = 0x1, unprogrammed default
  3729   300008                     	org	3145736
  3730   300008  0F                 	db	15
  3731                           
  3732                           ;Config register CONFIG5H @ 0x300009
  3733                           ;	unspecified, using default values
  3734                           ;	Boot Block Code Protection bit
  3735                           ;	CPB = 0x1, unprogrammed default
  3736                           ;	Data EEPROM Code Protection bit
  3737                           ;	CPD = 0x1, unprogrammed default
  3738   300009                     	org	3145737
  3739   300009  C0                 	db	192
  3740                           
  3741                           ;Config register CONFIG6L @ 0x30000A
  3742                           ;	unspecified, using default values
  3743                           ;	Write Protection bit
  3744                           ;	WRT0 = 0x1, unprogrammed default
  3745                           ;	Write Protection bit
  3746                           ;	WRT1 = 0x1, unprogrammed default
  3747                           ;	Write Protection bit
  3748                           ;	WRT2 = 0x1, unprogrammed default
  3749                           ;	Write Protection bit
  3750                           ;	WRT3 = 0x1, unprogrammed default
  3751   30000A                     	org	3145738
  3752   30000A  0F                 	db	15
  3753                           
  3754                           ;Config register CONFIG6H @ 0x30000B
  3755                           ;	unspecified, using default values
  3756                           ;	Configuration Register Write Protection bit
  3757                           ;	WRTC = 0x1, unprogrammed default
  3758                           ;	Boot Block Write Protection bit
  3759                           ;	WRTB = 0x1, unprogrammed default
  3760                           ;	Data EEPROM Write Protection bit
  3761                           ;	WRTD = 0x1, unprogrammed default
  3762   30000B                     	org	3145739
  3763   30000B  E0                 	db	224
  3764                           
  3765                           ;Config register CONFIG7L @ 0x30000C
  3766                           ;	unspecified, using default values
  3767                           ;	Table Read Protection bit
  3768                           ;	EBTR0 = 0x1, unprogrammed default
  3769                           ;	Table Read Protection bit
  3770                           ;	EBTR1 = 0x1, unprogrammed default
  3771                           ;	Table Read Protection bit
  3772                           ;	EBTR2 = 0x1, unprogrammed default
  3773                           ;	Table Read Protection bit
  3774                           ;	EBTR3 = 0x1, unprogrammed default
  3775   30000C                     	org	3145740
  3776   30000C  0F                 	db	15
  3777                           
  3778                           ;Config register CONFIG7H @ 0x30000D
  3779                           ;	unspecified, using default values
  3780                           ;	Boot Block Table Read Protection bit
  3781                           ;	EBTRB = 0x1, unprogrammed default
  3782   30000D                     	org	3145741
  3783   30000D  40                 	db	64
  3784                           tosu	equ	0xFFF
  3785                           tosh	equ	0xFFE
  3786                           tosl	equ	0xFFD
  3787                           stkptr	equ	0xFFC
  3788                           pclatu	equ	0xFFB
  3789                           pclath	equ	0xFFA
  3790                           pcl	equ	0xFF9
  3791                           tblptru	equ	0xFF8
  3792                           tblptrh	equ	0xFF7
  3793                           tblptrl	equ	0xFF6
  3794                           tablat	equ	0xFF5
  3795                           prodh	equ	0xFF4
  3796                           prodl	equ	0xFF3
  3797                           indf0	equ	0xFEF
  3798                           postinc0	equ	0xFEE
  3799                           postdec0	equ	0xFED
  3800                           preinc0	equ	0xFEC
  3801                           plusw0	equ	0xFEB
  3802                           fsr0h	equ	0xFEA
  3803                           fsr0l	equ	0xFE9
  3804                           wreg	equ	0xFE8
  3805                           indf1	equ	0xFE7
  3806                           postinc1	equ	0xFE6
  3807                           postdec1	equ	0xFE5
  3808                           preinc1	equ	0xFE4
  3809                           plusw1	equ	0xFE3
  3810                           fsr1h	equ	0xFE2
  3811                           fsr1l	equ	0xFE1
  3812                           bsr	equ	0xFE0
  3813                           indf2	equ	0xFDF
  3814                           postinc2	equ	0xFDE
  3815                           postdec2	equ	0xFDD
  3816                           preinc2	equ	0xFDC
  3817                           plusw2	equ	0xFDB
  3818                           fsr2h	equ	0xFDA
  3819                           fsr2l	equ	0xFD9
  3820                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        1
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     24      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->___awdiv
    _DireccionaLCD->_EnviaDato
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6804
                                             22 COMRAM     2     2      0
                           _BorraLCD
                           _ColorRGB
                       _ConfiguraLCD
                         _Conversion
                      _DireccionaLCD
                       _EscribeLCD_c
                _GuardarDatoEnEEPROM
                      _InicializaLCD
                           _LeerHT11
                     _MensajeLCD_Var
                    _TransmitirDatos
                            ___lbdiv
                            ___lbmod
                   _leerDatoEnEEPROM
 ---------------------------------------------------------------------------------
 (1) _leerDatoEnEEPROM                                     2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     14    10      4    4115
                                             10 COMRAM    12     8      4
                      _DireccionaLCD
                       _EscribeLCD_c
                         _Transmitir
                            ___awdiv
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     387
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     390
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                              6 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       4     3      1     694
                                              7 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              6 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             1     1      0      75
                                              6 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0      75
                                              3 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0      60
                                              4 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GuardarDatoEnEEPROM                                  3     0      3     196
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Conversion                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     0      2     384
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMRAM     2     2      0
                            _Recibir
 ---------------------------------------------------------------------------------
 (6) _Recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _ConfiguraLCD
   _Conversion
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _GuardarDatoEnEEPROM
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Var
     _EscribeLCD_c
     _strlen
   _TransmitirDatos
     _DireccionaLCD
     _EscribeLCD_c
     _Transmitir
     ___awdiv
     ___lbdiv
     ___lbmod
     ___lwdiv
     ___lwmod
     ___wmul
   ___lbdiv
   ___lbmod
   _leerDatoEnEEPROM

 _ISR (ROOT)
   _Recibir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     18      20       1       34.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRlhhl       11      0       0      33        0.0%
BITBIGSFRhlhhh       E      0       0      23        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRll          D      0       0      35        0.0%
BITBIGSFRhlhlh       8      0       0      25        0.0%
BITBIGSFRhllhl       7      0       0      29        0.0%
BITBIGSFRhlhhl       7      0       0      24        0.0%
BITBIGSFRlhhhh       6      0       0      31        0.0%
BITBIGSFRhllhhl      4      0       0      27        0.0%
BITBIGSFRhllll       4      0       0      30        0.0%
BITBIGSFRhllhhl      2      0       0      28        0.0%
BITBIGSFRhllhhh      1      0       0      26        0.0%
BITBIGSFRlhhhl       1      0       0      32        0.0%
BITBIGSFRlhl         1      0       0      34        0.0%
BITBIGSFRhhll        1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      36        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat May 27 13:47:48 2023

                          _A 001B                            _B 0019            Transmitir@BufferT 0003  
                         _GO 007E11                           _RD 007D30                           u60 1210  
                         _WR 007D31                 ___awdiv@sign 0008                   EnviaDato@a 0006  
        ___wmul@multiplicand 0005                          l213 11BC                          l205 0C66  
              _InicializaLCD 0E34                          l232 120C                          l216 11C6  
                        l227 11E8                          l251 0854                          l260 0AA0  
                        l256 0994                          l290 12D4                          l284 1366  
                        l802 1166                          l792 108C                          _GIE 007F97  
                        _RB0 007C08                          _RB1 007C09                          _RB2 007C0A  
                        _RC2 007C12                          _RB5 007C0D                          _RC4 007C14  
                        _RB6 007C0E                          _RB7 007C0F                          _RE2 007C22  
                        u270 1312                          _ISR 0008                          u740 0FA0  
                        u820 1066                          u910 0D6C                          u930 0D8C  
                        u850 1148                          u780 118C                          u950 0DAC  
                        u970 0DCC                          u990 0DEC                          _Hum 001E  
           TransmitirDatos@n 0011                          wreg 000FE8                         ?_ISR 0001  
                       l1106 11FC                         l1072 0FE2                         l2040 0BAE  
                       l1074 0FF2                         l1082 1028                         l1154 12E6  
                       l1076 1014                         l1308 0E46                         l1164 138A  
                       l1078 101E                         l1094 1120                         l1318 0E64  
                       l1328 0E82                         l2080 0D32                         l1348 0EBA  
                       l1710 0F94                         l2078 0D1E                         l1712 0F9C  
                       l1704 0F7E                         l1730 0FD4                         l1722 0FBC  
                       l1810 115C                         l1802 113C                         l1740 1182  
                       l1804 1144                         l1726 0FC6                         l1902 08A2  
                       l1910 08FA                         l1816 10A0                         l1824 10D2  
                       l1752 119E                         l1744 1188                         l1850 0D80  
                       l1770 1262                         l1762 124A                         l1844 0D60  
                       l1676 1270                         l1756 11A6                         l1924 09E6  
                       l1908 08D0                         l1862 0DC0                         l1678 1272  
                       l1782 105A                         l1880 0E20                         l1856 0DA0  
                       l1784 1062                         l1874 0E00                         l1698 0F6E  
                       l1794 1082                         l1868 0DE0                         l1894 0862  
                       l1898 0876                         _CFGS 007D36                         _EEIF 007D0C  
                       STR_1 0801                         STR_2 080E                         STR_3 0818  
                       STR_4 081E                         u1010 0E0C                         u1030 0E2C  
                       u1110 0D04                         u1120 0D06                         u1130 0D12  
                       u1060 09E0                         u1140 0D14                         u1150 0D48  
                       u1207 0BDC                         u1080 0A9A                         u1217 0BF8  
                       u1307 11B2                         u1227 0C14                         u1317 11C2  
                       u1237 0C2E                         u1327 11EE                         u1247 0C4C  
                       _LATD 000F8C                         u1337 11FE                         u1257 0C70  
                       u1177 0AEA                         u1347 0FE8                         u1267 0C86  
                       u1187 0B9C                         u1357 0FF8                         u1277 0CA0  
                       u1197 0BC0                         u1367 1008                         u1287 0CC8  
                       u1377 1016                         u1297 0CEA                         u1387 1020  
                       u1397 137E                         _RCIF 007CF5                         _RBPU 007F8F  
                       _TMR0 000FD6                         _TRMT 007D61                         _WREN 007D32  
             ??_EscribeLCD_c 0007                         _Temp 001F          _GuardarDatoEnEEPROM 12B8  
                       _main 0ADA                         btemp 0021                         prodh 000FF4  
                       prodl 000FF3                         start 000E              __end_of_LeerBit 1214  
               ___param_bank 000000                        ??_ISR 0001              __end_of_Recibir 139C  
       ?_GuardarDatoEnEEPROM 0003               ?_InicializaLCD 0001                        ?_main 0001  
            __end_of___awdiv 0FDE              __end_of___lbdiv 11AA                        _ADRES 000FC3  
                      _EEADR 000FA9                EscribeLCD_c@a 0007              __end_of___lbmod 126A  
                      _EEPGD 007D37                        _T0CON 000FD5              ___awdiv@divisor 0005  
                      _LATC2 007C5A                        _LATE0 007C68                        _LATE1 007C69  
            __end_of___lwdiv 1096              __end_of___lwmod 1170                        i2l310 0F56  
            ___awdiv@counter 0007                        _RCREG 000FAE                        _RCSTA 000FAB  
                      _SPBRG 000FAF                        _USBEN 007B6B                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
                      _TXREG 000FAD                        _TXSTA 000FAC       GuardarDatoEnEEPROM@dir 0003  
                      tablat 000FF5                   _Conversion 1358                  _HabilitaLCD 137A  
                      ttemp5 0022                        ttemp6 0025                        ttemp7 0029  
                      status 000FD8                        wtemp8 0022              ___lbdiv@divisor 0003  
            ___lbdiv@counter 0005             __end_of_BorraLCD 1358             __end_of_LeerHT11 11E4  
           __end_of_ColorRGB 0E34              __initialization 1214             __end_of_LeerByte 1300  
               __end_of_main 0D4C     __end_of_leerDatoEnEEPROM 137A        ??_GuardarDatoEnEEPROM 0006  
                     ??_main 0017         __end_of_ConfiguraLCD 1318                __activetblptr 000002  
                 _TempEEPROM 001D                       _ADCON0 000FC2                       _ADCON1 000FC1  
                     _ADCON2 000FC0                       _EEDATA 000FA8               DireccionaLCD@a 0007  
                     _EECON2 000FA7             ___awdiv@dividend 0003                       i2l1660 0F08  
                     i2l1652 0EEA                       i2l1662 0F10                       i2l1656 0EF0  
                     i2l1658 0F00                       i2l1666 0F22                       i2l1668 0F3E  
                     _OSCCON 000FD3                       _TMR0IE 007F95                       _TMR0IF 007F92  
                     _TMR0ON 007EAF                       _TRISA0 007C90                       _TRISC2 007CA2  
                  ??_LeerBit 0003        __end_of_DireccionaLCD 132E                       _UTRDIS 007B7B  
                 _RetardoLCD 0FDE                    ??_Recibir 0001          TransmitirDatos@Ent1 000B  
        TransmitirDatos@Ent2 000D          TransmitirDatos@Simb 0013                       ___wmul 1292  
                  ??___awdiv 0007                    ??___lbdiv 0004                    ??___lbmod 0004  
                  ??___lwdiv 0007                    ??___lwmod 0007              ??_InicializaLCD 0007  
                     clear_0 122C             ___awdiv@quotient 0009      GuardarDatoEnEEPROM@dato 0005  
                     isa$std 000001         __end_of_EscribeLCD_c 1344                       _strlen 126A  
               __pdataCOMRAM 0020                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                   _Transmitir 1388  
           ___lbdiv@dividend 0004                  ?_Conversion 0001              ___lbmod@divisor 0003  
                 __accesstop 0060      __end_of__initialization 1232              ___lbmod@counter 0005  
              ___rparam_used 000001               __pcstackCOMRAM 0001            __end_of_EnviaDato 112E  
           ___lbdiv@quotient 0006                    ?_BorraLCD 0001                    ?_LeerHT11 0001  
                  ?_ColorRGB 0003               _MensajeLCD_Var 1096                    ?_LeerByte 0001  
            MensajeLCD_Var@a 0008              MensajeLCD_Var@i 000A                  ?_RetardoLCD 0001  
                RetardoLCD@a 0004                      ?___wmul 0003                      _BAUDCON 000FB8  
                    ?_strlen 0003       __end_of_MensajeLCD_Var 10E8                      i2u67_40 0EE0  
                    i2u68_45 0EE2                   ??_BorraLCD 0007                   ??_LeerHT11 0007  
                 ??_ColorRGB 0005                  ?_Transmitir 0001                   ??_LeerByte 0004  
               ?_HabilitaLCD 0001                      _LeerBit 11E4                 _ConfiguraLCD 1300  
                    _Recibir 1394                      __Hparam 0000                      __Lparam 0000  
       TransmitirDatos@TempC 0015                      ___awdiv 0F5A                      ___lbdiv 1170  
                    ___lbmod 1240                      ___lwdiv 1044                      ___lwmod 112E  
          ?_leerDatoEnEEPROM 0003                 __psmallconst 0800                      __pcinit 1214  
                    __ramtop 0800                      __ptext0 0ADA                      __ptext1 136C  
                    __ptext2 0824                      __ptext3 1292                      __ptext4 112E  
                    __ptext5 1044                      __ptext6 1240           ??_leerDatoEnEEPROM 0005  
                    __ptext7 1170                      __ptext8 0F5A                      __ptext9 1388  
            ?_MensajeLCD_Var 0008               __pintcode_body 0ED0         end_of_initialization 1232  
            Conversion@canal 0003                __Lmediumconst 0000                      int_func 0ED0  
               _EscribeLCD_c 132E  __end_of_GuardarDatoEnEEPROM 12DE            ??_TransmitirDatos 000F  
                    postinc0 000FEE                      strlen@s 0003             ___lbmod@dividend 0004  
                  LeerByte@i 0006                 ??_Conversion 0003                  ___lbmod@rem 0006  
             __end_of___wmul 12B8                __pidataCOMRAM 139C        __end_of_InicializaLCD 0ED0  
         __end_of_Conversion 136C                    _EnviaDato 10E8               __end_of_strlen 1292  
        start_initialization 1214                  __end_of_ISR 0F5A                 ??_RetardoLCD 0003  
                   ??___wmul 0007                     ??_strlen 0005                   ?_EnviaDato 0001  
                __pbssCOMRAM 0019           __end_of_RetardoLCD 1044                 ??_Transmitir 0003  
                   ?_LeerBit 0001                _DireccionaLCD 1318                     ?_Recibir 0001  
           ___lwdiv@dividend 0003                    __pintcode 0008                     ?___awdiv 0003  
                   ?___lbdiv 0003                     ?___lbmod 0003                     ?___lwdiv 0003  
                   ?___lwmod 0003           __end_of_Transmitir 1394             ??_MensajeLCD_Var 0009  
                __smallconst 0800             ___lwdiv@quotient 0007              _TransmitirDatos 0824  
             ___wmul@product 0007               ?_DireccionaLCD 0001                     i2u140_47 0F48  
          ___wmul@multiplier 0003                  ??_EnviaDato 0005                     _BorraLCD 1344  
                   _LeerHT11 11AA                     _ColorRGB 0D4C                     _LeerByte 12DE  
        leerDatoEnEEPROM@dir 0003                     __Hrparam 0000                     __Lrparam 0000  
              ConfiguraLCD@a 0003      __end_of_TransmitirDatos 0ADA              ___lwdiv@divisor 0005  
            ___lwdiv@counter 0009                     __ptext10 1318                     __ptext11 1096  
                   __ptext20 0FDE                     __ptext12 126A                     __ptext21 137A  
                   __ptext13 132E                     __ptext22 12B8                     __ptext14 11AA  
                   __ptext23 1358                     __ptext15 12DE                     __ptext24 1300  
                   __ptext16 11E4                     __ptext25 0D4C                     __ptext17 0E34  
                   __ptext18 1344                     __ptext27 1394                     __ptext19 10E8  
            ??_DireccionaLCD 0007                     _interfaz 0020                     isa$xinst 000000  
                   int$flags 0021             _leerDatoEnEEPROM 136C                     intlevel2 0000  
              ??_HabilitaLCD 0003             ___lwmod@dividend 0003                ?_ConfiguraLCD 0001  
                ColorRGB@val 0003              ___lwmod@divisor 0005                     strlen@cp 0005  
            ___lwmod@counter 0007             ?_TransmitirDatos 000B               ??_ConfiguraLCD 0003  
              ?_EscribeLCD_c 0001                   LeerBit@res 0003          __end_of_HabilitaLCD 1388  
                LeerByte@res 0005  
