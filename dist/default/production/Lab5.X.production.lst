

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri May 26 22:50:47 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Version 2.40
    47                           ; Generated 04/07/2022 GMT
    48                           ; 
    49                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F4550 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81   000000                     
    82                           	psect	idataCOMRAM
    83   001396                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for _interfaz
    87   001396  08                 	db	8
    88   000000                     _EECON2	set	4007
    89   000000                     _RCREG	set	4014
    90   000000                     _TXREG	set	4013
    91   000000                     _TRISC	set	3988
    92   000000                     _TRISD	set	3989
    93   000000                     _SPBRG	set	4015
    94   000000                     _BAUDCON	set	4024
    95   000000                     _RD	set	32048
    96   000000                     _WR	set	32049
    97   000000                     _WREN	set	32050
    98   000000                     _CFGS	set	32054
    99   000000                     _GO	set	32273
   100   000000                     _RB7	set	31759
   101   000000                     _RB6	set	31758
   102   000000                     _RB5	set	31757
   103   000000                     _TRMT	set	32097
   104   000000                     _RC2	set	31762
   105   000000                     _TRISC2	set	31906
   106   000000                     _RB0	set	31752
   107   000000                     _RB2	set	31754
   108   000000                     _TMR0ON	set	32431
   109   000000                     _GIE	set	32663
   110   000000                     _TMR0IE	set	32661
   111   000000                     _LATE1	set	31849
   112   000000                     _LATD	set	3980
   113   000000                     _USBEN	set	31595
   114   000000                     _LATC2	set	31834
   115   000000                     _TRISB	set	3987
   116   000000                     _TRISE	set	3990
   117   000000                     _RCSTA	set	4011
   118   000000                     _TXSTA	set	4012
   119   000000                     _OSCCON	set	4051
   120   000000                     _TRISA0	set	31888
   121   000000                     _LATE0	set	31848
   122   000000                     _T0CON	set	4053
   123   000000                     _RBPU	set	32655
   124   000000                     _ADCON2	set	4032
   125   000000                     _ADCON1	set	4033
   126   000000                     _ADCON0	set	4034
   127   000000                     _RCIF	set	31989
   128   000000                     _ADRES	set	4035
   129   000000                     _UTRDIS	set	31611
   130   000000                     _RB1	set	31753
   131   000000                     _RC4	set	31764
   132   000000                     _TMR0IF	set	32658
   133   000000                     _TMR0	set	4054
   134   000000                     _RE2	set	31778
   135   000000                     _EEDATA	set	4008
   136   000000                     _EEADR	set	4009
   137   000000                     _EEIF	set	32012
   138   000000                     _EEPGD	set	32055
   139                           
   140                           	psect	smallconst
   141   000800                     __psmallconst:
   142                           	callstack 0
   143   000800  00                 	db	0
   144   000801                     STR_1:
   145   000801  55                 	db	85	;'U'
   146   000802  6C                 	db	108	;'l'
   147   000803  74                 	db	116	;'t'
   148   000804  69                 	db	105	;'i'
   149   000805  6D                 	db	109	;'m'
   150   000806  61                 	db	97	;'a'
   151   000807  20                 	db	32
   152   000808  74                 	db	116	;'t'
   153   000809  65                 	db	101	;'e'
   154   00080A  6D                 	db	109	;'m'
   155   00080B  70                 	db	112	;'p'
   156   00080C  3A                 	db	58	;':'
   157   00080D  00                 	db	0
   158   00080E                     STR_2:
   159   00080E  49                 	db	73	;'I'
   160   00080F  6E                 	db	110	;'n'
   161   000810  69                 	db	105	;'i'
   162   000811  63                 	db	99	;'c'
   163   000812  69                 	db	105	;'i'
   164   000813  61                 	db	97	;'a'
   165   000814  6E                 	db	110	;'n'
   166   000815  64                 	db	100	;'d'
   167   000816  6F                 	db	111	;'o'
   168   000817  00                 	db	0
   169   000818                     STR_3:
   170   000818  54                 	db	84	;'T'
   171   000819  65                 	db	101	;'e'
   172   00081A  6D                 	db	109	;'m'
   173   00081B  70                 	db	112	;'p'
   174   00081C  3A                 	db	58	;':'
   175   00081D  00                 	db	0
   176   00081E                     STR_4:
   177   00081E  48                 	db	72	;'H'
   178   00081F  75                 	db	117	;'u'
   179   000820  6D                 	db	109	;'m'
   180   000821  3A                 	db	58	;':'
   181   000822  00                 	db	0
   182   000823  00                 	db	0	; dummy byte at the end
   183   000000                     
   184                           ; #config settings
   185                           
   186                           	psect	cinit
   187   00120E                     __pcinit:
   188                           	callstack 0
   189   00120E                     start_initialization:
   190                           	callstack 0
   191   00120E                     __initialization:
   192                           	callstack 0
   193                           
   194                           ; Initialize objects allocated to COMRAM (1 bytes)
   195                           ; load TBLPTR registers with __pidataCOMRAM
   196   00120E  0E96               	movlw	low __pidataCOMRAM
   197   001210  6EF6               	movwf	tblptrl,c
   198   001212  0E13               	movlw	high __pidataCOMRAM
   199   001214  6EF7               	movwf	tblptrh,c
   200   001216  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   201   001218  6EF8               	movwf	tblptru,c
   202   00121A  0009               	tblrd		*+	;fetch initializer
   203   00121C  CFF5 F020          	movff	tablat,__pdataCOMRAM
   204                           
   205                           ; Clear objects allocated to COMRAM (7 bytes)
   206   001220  EE00  F019         	lfsr	0,__pbssCOMRAM
   207   001224  0E07               	movlw	7
   208   001226                     clear_0:
   209   001226  6AEE               	clrf	postinc0,c
   210   001228  06E8               	decf	wreg,f,c
   211   00122A  E1FD               	bnz	clear_0
   212   00122C                     end_of_initialization:
   213                           	callstack 0
   214   00122C                     __end_of__initialization:
   215                           	callstack 0
   216   00122C  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   217   00122E  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   218   001230  0E00               	movlw	low (__Lmediumconst shr (0+16))
   219   001232  6EF8               	movwf	tblptru,c
   220   001234  0100               	movlb	0
   221   001236  EF6A  F005         	goto	_main	;jump to C main() function
   222                           
   223                           	psect	bssCOMRAM
   224   000019                     __pbssCOMRAM:
   225                           	callstack 0
   226   000019                     _B:
   227                           	callstack 0
   228   000019                     	ds	2
   229   00001B                     _A:
   230                           	callstack 0
   231   00001B                     	ds	2
   232   00001D                     _TempEEPROM:
   233                           	callstack 0
   234   00001D                     	ds	1
   235   00001E                     _Hum:
   236                           	callstack 0
   237   00001E                     	ds	1
   238   00001F                     _Temp:
   239                           	callstack 0
   240   00001F                     	ds	1
   241                           
   242                           	psect	dataCOMRAM
   243   000020                     __pdataCOMRAM:
   244                           	callstack 0
   245   000020                     _interfaz:
   246                           	callstack 0
   247   000020                     	ds	1
   248                           
   249                           	psect	cstackCOMRAM
   250   000001                     __pcstackCOMRAM:
   251                           	callstack 0
   252   000001                     ??_ISR:
   253   000001                     
   254                           ; 2 bytes @ 0x0
   255   000001                     	ds	2
   256   000003                     ??_RetardoLCD:
   257   000003                     ?_strlen:
   258                           	callstack 0
   259   000003                     ?___wmul:
   260                           	callstack 0
   261   000003                     ?___awdiv:
   262                           	callstack 0
   263   000003                     ?___lwdiv:
   264                           	callstack 0
   265   000003                     ?___lwmod:
   266                           	callstack 0
   267   000003                     ConfiguraLCD@a:
   268                           	callstack 0
   269   000003                     LeerBit@res:
   270                           	callstack 0
   271   000003                     Transmitir@BufferT:
   272                           	callstack 0
   273   000003                     Conversion@canal:
   274                           	callstack 0
   275   000003                     ___lbdiv@divisor:
   276                           	callstack 0
   277   000003                     ___lbmod@divisor:
   278                           	callstack 0
   279   000003                     strlen@s:
   280                           	callstack 0
   281   000003                     ColorRGB@val:
   282                           	callstack 0
   283   000003                     GuardarDatoEnEEPROM@dir:
   284                           	callstack 0
   285   000003                     leerDatoEnEEPROM@dir:
   286                           	callstack 0
   287   000003                     ___wmul@multiplier:
   288                           	callstack 0
   289   000003                     ___awdiv@dividend:
   290                           	callstack 0
   291   000003                     ___lwdiv@dividend:
   292                           	callstack 0
   293   000003                     ___lwmod@dividend:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x2
   297   000003                     	ds	1
   298   000004                     ??_LeerByte:
   299   000004                     RetardoLCD@a:
   300                           	callstack 0
   301   000004                     ___lbdiv@dividend:
   302                           	callstack 0
   303   000004                     ___lbmod@dividend:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x3
   307   000004                     	ds	1
   308   000005                     ??_EnviaDato:
   309   000005                     LeerByte@res:
   310                           	callstack 0
   311   000005                     GuardarDatoEnEEPROM@dato:
   312                           	callstack 0
   313   000005                     ___lbdiv@counter:
   314                           	callstack 0
   315   000005                     ___lbmod@counter:
   316                           	callstack 0
   317   000005                     strlen@cp:
   318                           	callstack 0
   319   000005                     ___wmul@multiplicand:
   320                           	callstack 0
   321   000005                     ___awdiv@divisor:
   322                           	callstack 0
   323   000005                     ___lwdiv@divisor:
   324                           	callstack 0
   325   000005                     ___lwmod@divisor:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x4
   329   000005                     	ds	1
   330   000006                     EnviaDato@a:
   331                           	callstack 0
   332   000006                     LeerByte@i:
   333                           	callstack 0
   334   000006                     ___lbdiv@quotient:
   335                           	callstack 0
   336   000006                     ___lbmod@rem:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x5
   340   000006                     	ds	1
   341   000007                     ??_LeerHT11:
   342   000007                     EscribeLCD_c@a:
   343                           	callstack 0
   344   000007                     DireccionaLCD@a:
   345                           	callstack 0
   346   000007                     ___awdiv@counter:
   347                           	callstack 0
   348   000007                     ___lwmod@counter:
   349                           	callstack 0
   350   000007                     ___wmul@product:
   351                           	callstack 0
   352   000007                     ___lwdiv@quotient:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x6
   356   000007                     	ds	1
   357   000008                     MensajeLCD_Var@a:
   358                           	callstack 0
   359   000008                     ___awdiv@sign:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x7
   363   000008                     	ds	1
   364   000009                     ??_MensajeLCD_Var:
   365   000009                     ___lwdiv@counter:
   366                           	callstack 0
   367   000009                     ___awdiv@quotient:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x8
   371   000009                     	ds	1
   372   00000A                     MensajeLCD_Var@i:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x9
   376   00000A                     	ds	1
   377   00000B                     TransmitirDatos@Ent1:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0xA
   381   00000B                     	ds	2
   382   00000D                     TransmitirDatos@Ent2:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0xC
   386   00000D                     	ds	2
   387   00000F                     ??_TransmitirDatos:
   388                           
   389                           ; 1 bytes @ 0xE
   390   00000F                     	ds	2
   391   000011                     TransmitirDatos@n:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x10
   395   000011                     	ds	2
   396   000013                     TransmitirDatos@Simb:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x12
   400   000013                     	ds	2
   401   000015                     TransmitirDatos@TempC:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x14
   405   000015                     	ds	2
   406   000017                     ??_main:
   407                           
   408                           ; 1 bytes @ 0x16
   409   000017                     	ds	2
   410                           
   411 ;;
   412 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   413 ;;
   414 ;; *************** function _main *****************
   415 ;; Defined at:
   416 ;;		line 35 in file "Lab5.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   430 ;;      Params:         0       0       0       0       0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0       0       0       0       0
   432 ;;      Temps:          2       0       0       0       0       0       0       0       0
   433 ;;      Totals:         2       0       0       0       0       0       0       0       0
   434 ;;Total ram usage:        2 bytes
   435 ;; Hardware stack levels required when called: 6
   436 ;; This function calls:
   437 ;;		_BorraLCD
   438 ;;		_ColorRGB
   439 ;;		_ConfiguraLCD
   440 ;;		_Conversion
   441 ;;		_DireccionaLCD
   442 ;;		_EscribeLCD_c
   443 ;;		_GuardarDatoEnEEPROM
   444 ;;		_InicializaLCD
   445 ;;		_LeerHT11
   446 ;;		_MensajeLCD_Var
   447 ;;		_TransmitirDatos
   448 ;;		___lbdiv
   449 ;;		___lbmod
   450 ;;		_leerDatoEnEEPROM
   451 ;; This function is called by:
   452 ;;		Startup code after reset
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text0
   457   000AD4                     __ptext0:
   458                           	callstack 0
   459   000AD4                     _main:
   460                           	callstack 25
   461                           
   462                           ;Lab5.c: 38: ConfiguraLCD(4);
   463                           
   464                           ;incstack = 0
   465   000AD4  0E04               	movlw	4
   466   000AD6  EC7D  F009         	call	_ConfiguraLCD
   467                           
   468                           ;Lab5.c: 39: OSCCON = 0b01110110;
   469   000ADA  0E76               	movlw	118
   470   000ADC  6ED3               	movwf	211,c	;volatile
   471                           
   472                           ;Lab5.c: 40: _delay((unsigned long)((1)*(8000000/4000.0)));
   473   000ADE  0E03               	movlw	3
   474   000AE0  6E17               	movwf	??_main^0,c
   475   000AE2  0E98               	movlw	152
   476   000AE4                     u1177:
   477   000AE4  2EE8               	decfsz	wreg,f,c
   478   000AE6  D7FE               	bra	u1177
   479   000AE8  2E17               	decfsz	??_main^0,f,c
   480   000AEA  D7FC               	bra	u1177
   481                           
   482                           ;Lab5.c: 41: LATC2 = 0;
   483   000AEC  948B               	bcf	3979,2,c	;volatile
   484                           
   485                           ;Lab5.c: 42: TXSTA = 0b00100000;
   486   000AEE  0E20               	movlw	32
   487   000AF0  6EAC               	movwf	172,c	;volatile
   488                           
   489                           ;Lab5.c: 43: RCSTA = 0b10010000;
   490   000AF2  0E90               	movlw	144
   491   000AF4  6EAB               	movwf	171,c	;volatile
   492                           
   493                           ;Lab5.c: 44: BAUDCON = 0b00000000;
   494   000AF6  0E00               	movlw	0
   495   000AF8  6EB8               	movwf	184,c	;volatile
   496                           
   497                           ;Lab5.c: 46: TRISE=0;
   498   000AFA  0E00               	movlw	0
   499   000AFC  6E96               	movwf	150,c	;volatile
   500                           
   501                           ;Lab5.c: 47: SPBRG = 12;
   502   000AFE  0E0C               	movlw	12
   503   000B00  6EAF               	movwf	175,c	;volatile
   504                           
   505                           ;Lab5.c: 49: ADCON0 = 0b00000001;
   506   000B02  0E01               	movlw	1
   507   000B04  6EC2               	movwf	194,c	;volatile
   508                           
   509                           ;Lab5.c: 50: ADCON1 = 14;
   510   000B06  0E0E               	movlw	14
   511   000B08  6EC1               	movwf	193,c	;volatile
   512                           
   513                           ;Lab5.c: 51: ADCON2 = 0b10001000;
   514   000B0A  0E88               	movlw	136
   515   000B0C  6EC0               	movwf	192,c	;volatile
   516                           
   517                           ;Lab5.c: 54: TRISB = 0b00001110;
   518   000B0E  0E0E               	movlw	14
   519   000B10  6E93               	movwf	147,c	;volatile
   520                           
   521                           ;Lab5.c: 55: TRISD = 0;
   522   000B12  0E00               	movlw	0
   523   000B14  6E95               	movwf	149,c	;volatile
   524                           
   525                           ;Lab5.c: 56: TRISA0 = 1;
   526   000B16  8092               	bsf	3986,0,c	;volatile
   527                           
   528                           ;Lab5.c: 57: TRISC = 0b11010111;
   529   000B18  0ED7               	movlw	215
   530   000B1A  6E94               	movwf	148,c	;volatile
   531                           
   532                           ;Lab5.c: 58: USBEN = 0;
   533   000B1C  966D               	bcf	3949,3,c	;volatile
   534                           
   535                           ;Lab5.c: 59: UTRDIS = 1;
   536   000B1E  866F               	bsf	3951,3,c	;volatile
   537                           
   538                           ;Lab5.c: 60: RBPU = 0;
   539   000B20  9EF1               	bcf	4081,7,c	;volatile
   540                           
   541                           ;Lab5.c: 62: TempEEPROM = leerDatoEnEEPROM(0);
   542   000B22  0E00               	movlw	0
   543   000B24  6E04               	movwf	(leerDatoEnEEPROM@dir+1)^0,c
   544   000B26  0E00               	movlw	0
   545   000B28  6E03               	movwf	leerDatoEnEEPROM@dir^0,c
   546   000B2A  ECB3  F009         	call	_leerDatoEnEEPROM	;wreg free
   547   000B2E  6E1D               	movwf	_TempEEPROM^0,c
   548                           
   549                           ;Lab5.c: 64: InicializaLCD();
   550   000B30  EC17  F007         	call	_InicializaLCD	;wreg free
   551                           
   552                           ;Lab5.c: 66: T0CON=0b00000011;
   553   000B34  0E03               	movlw	3
   554   000B36  6ED5               	movwf	213,c	;volatile
   555                           
   556                           ;Lab5.c: 67: TMR0IF=0;
   557   000B38  94F2               	bcf	4082,2,c	;volatile
   558                           
   559                           ;Lab5.c: 68: TMR0=3036;
   560   000B3A  0E0B               	movlw	11
   561   000B3C  6ED7               	movwf	215,c	;volatile
   562   000B3E  0EDC               	movlw	220
   563   000B40  6ED6               	movwf	214,c	;volatile
   564                           
   565                           ;Lab5.c: 69: TMR0IE=1;
   566   000B42  8AF2               	bsf	4082,5,c	;volatile
   567                           
   568                           ;Lab5.c: 70: GIE=1;
   569   000B44  8EF2               	bsf	4082,7,c	;volatile
   570                           
   571                           ;Lab5.c: 71: TMR0ON=1;
   572   000B46  8ED5               	bsf	4053,7,c	;volatile
   573                           
   574                           ;Lab5.c: 73: BorraLCD();
   575   000B48  EC9F  F009         	call	_BorraLCD	;wreg free
   576                           
   577                           ;Lab5.c: 75: if (TempEEPROM != 0xFF) {
   578   000B4C  281D               	incf	_TempEEPROM^0,w,c
   579   000B4E  B4D8               	btfsc	status,2,c
   580   000B50  D02B               	goto	l2040
   581                           
   582                           ;Lab5.c: 76: MensajeLCD_Var("Ultima temp:");
   583   000B52  0E01               	movlw	low STR_1
   584   000B54  6E08               	movwf	MensajeLCD_Var@a^0,c
   585   000B56  EC48  F008         	call	_MensajeLCD_Var	;wreg free
   586                           
   587                           ;Lab5.c: 77: DireccionaLCD(192);
   588   000B5A  0EC0               	movlw	192
   589   000B5C  EC89  F009         	call	_DireccionaLCD
   590                           
   591                           ;Lab5.c: 78: EscribeLCD_c(TempEEPROM / 10 + 48);
   592   000B60  0E0A               	movlw	10
   593   000B62  6E03               	movwf	___lbdiv@divisor^0,c
   594   000B64  501D               	movf	_TempEEPROM^0,w,c
   595   000B66  ECB5  F008         	call	___lbdiv
   596   000B6A  0F30               	addlw	48
   597   000B6C  EC94  F009         	call	_EscribeLCD_c
   598                           
   599                           ;Lab5.c: 79: EscribeLCD_c(TempEEPROM % 10 + 48);
   600   000B70  0E0A               	movlw	10
   601   000B72  6E03               	movwf	___lbmod@divisor^0,c
   602   000B74  501D               	movf	_TempEEPROM^0,w,c
   603   000B76  EC1D  F009         	call	___lbmod
   604   000B7A  0F30               	addlw	48
   605   000B7C  EC94  F009         	call	_EscribeLCD_c
   606                           
   607                           ;Lab5.c: 80: EscribeLCD_c(223);
   608   000B80  0EDF               	movlw	223
   609   000B82  EC94  F009         	call	_EscribeLCD_c
   610                           
   611                           ;Lab5.c: 81: EscribeLCD_c('C');
   612   000B86  0E43               	movlw	67
   613   000B88  EC94  F009         	call	_EscribeLCD_c
   614                           
   615                           ;Lab5.c: 82: _delay((unsigned long)((2000)*(8000000/4000.0)));
   616   000B8C  0E15               	movlw	21
   617   000B8E  6E18               	movwf	(??_main+1)^0,c
   618   000B90  0E4B               	movlw	75
   619   000B92  6E17               	movwf	??_main^0,c
   620   000B94  0EBE               	movlw	190
   621   000B96                     u1187:
   622   000B96  2EE8               	decfsz	wreg,f,c
   623   000B98  D7FE               	bra	u1187
   624   000B9A  2E17               	decfsz	??_main^0,f,c
   625   000B9C  D7FC               	bra	u1187
   626   000B9E  2E18               	decfsz	(??_main+1)^0,f,c
   627   000BA0  D7FA               	bra	u1187
   628   000BA2  D000               	nop2	
   629                           
   630                           ;Lab5.c: 83: BorraLCD();
   631   000BA4  EC9F  F009         	call	_BorraLCD	;wreg free
   632   000BA8                     l2040:
   633                           
   634                           ;Lab5.c: 84: };Lab5.c: 86: MensajeLCD_Var("Iniciando");
   635   000BA8  0E0E               	movlw	low STR_2
   636   000BAA  6E08               	movwf	MensajeLCD_Var@a^0,c
   637   000BAC  EC48  F008         	call	_MensajeLCD_Var	;wreg free
   638                           
   639                           ;Lab5.c: 87: _delay((unsigned long)((500)*(8000000/4000.0)));
   640   000BB0  0E06               	movlw	6
   641   000BB2  6E18               	movwf	(??_main+1)^0,c
   642   000BB4  0E13               	movlw	19
   643   000BB6  6E17               	movwf	??_main^0,c
   644   000BB8  0EAE               	movlw	174
   645   000BBA                     u1197:
   646   000BBA  2EE8               	decfsz	wreg,f,c
   647   000BBC  D7FE               	bra	u1197
   648   000BBE  2E17               	decfsz	??_main^0,f,c
   649   000BC0  D7FC               	bra	u1197
   650   000BC2  2E18               	decfsz	(??_main+1)^0,f,c
   651   000BC4  D7FA               	bra	u1197
   652                           
   653                           ;Lab5.c: 88: EscribeLCD_c('.');
   654   000BC6  0E2E               	movlw	46
   655   000BC8  EC94  F009         	call	_EscribeLCD_c
   656                           
   657                           ;Lab5.c: 89: _delay((unsigned long)((500)*(8000000/4000.0)));
   658   000BCC  0E06               	movlw	6
   659   000BCE  6E18               	movwf	(??_main+1)^0,c
   660   000BD0  0E13               	movlw	19
   661   000BD2  6E17               	movwf	??_main^0,c
   662   000BD4  0EAE               	movlw	174
   663   000BD6                     u1207:
   664   000BD6  2EE8               	decfsz	wreg,f,c
   665   000BD8  D7FE               	bra	u1207
   666   000BDA  2E17               	decfsz	??_main^0,f,c
   667   000BDC  D7FC               	bra	u1207
   668   000BDE  2E18               	decfsz	(??_main+1)^0,f,c
   669   000BE0  D7FA               	bra	u1207
   670                           
   671                           ;Lab5.c: 90: EscribeLCD_c('.');
   672   000BE2  0E2E               	movlw	46
   673   000BE4  EC94  F009         	call	_EscribeLCD_c
   674                           
   675                           ;Lab5.c: 91: _delay((unsigned long)((500)*(8000000/4000.0)));
   676   000BE8  0E06               	movlw	6
   677   000BEA  6E18               	movwf	(??_main+1)^0,c
   678   000BEC  0E13               	movlw	19
   679   000BEE  6E17               	movwf	??_main^0,c
   680   000BF0  0EAE               	movlw	174
   681   000BF2                     u1217:
   682   000BF2  2EE8               	decfsz	wreg,f,c
   683   000BF4  D7FE               	bra	u1217
   684   000BF6  2E17               	decfsz	??_main^0,f,c
   685   000BF8  D7FC               	bra	u1217
   686   000BFA  2E18               	decfsz	(??_main+1)^0,f,c
   687   000BFC  D7FA               	bra	u1217
   688                           
   689                           ;Lab5.c: 92: EscribeLCD_c('.');
   690   000BFE  0E2E               	movlw	46
   691   000C00  EC94  F009         	call	_EscribeLCD_c
   692                           
   693                           ;Lab5.c: 93: _delay((unsigned long)((500)*(8000000/4000.0)));
   694   000C04  0E06               	movlw	6
   695   000C06  6E18               	movwf	(??_main+1)^0,c
   696   000C08  0E13               	movlw	19
   697   000C0A  6E17               	movwf	??_main^0,c
   698   000C0C  0EAE               	movlw	174
   699   000C0E                     u1227:
   700   000C0E  2EE8               	decfsz	wreg,f,c
   701   000C10  D7FE               	bra	u1227
   702   000C12  2E17               	decfsz	??_main^0,f,c
   703   000C14  D7FC               	bra	u1227
   704   000C16  2E18               	decfsz	(??_main+1)^0,f,c
   705   000C18  D7FA               	bra	u1227
   706                           
   707                           ;Lab5.c: 94: BorraLCD();
   708   000C1A  EC9F  F009         	call	_BorraLCD	;wreg free
   709                           
   710                           ;Lab5.c: 95: _delay((unsigned long)((500)*(8000000/4000.0)));
   711   000C1E  0E06               	movlw	6
   712   000C20  6E18               	movwf	(??_main+1)^0,c
   713   000C22  0E13               	movlw	19
   714   000C24  6E17               	movwf	??_main^0,c
   715   000C26  0EAE               	movlw	174
   716   000C28                     u1237:
   717   000C28  2EE8               	decfsz	wreg,f,c
   718   000C2A  D7FE               	bra	u1237
   719   000C2C  2E17               	decfsz	??_main^0,f,c
   720   000C2E  D7FC               	bra	u1237
   721   000C30  2E18               	decfsz	(??_main+1)^0,f,c
   722   000C32  D7FA               	bra	u1237
   723                           
   724                           ;Lab5.c: 97: MensajeLCD_Var("Temp:");
   725   000C34  0E18               	movlw	low STR_3
   726   000C36  6E08               	movwf	MensajeLCD_Var@a^0,c
   727   000C38  EC48  F008         	call	_MensajeLCD_Var	;wreg free
   728                           
   729                           ;Lab5.c: 98: _delay((unsigned long)((500)*(8000000/4000.0)));
   730   000C3C  0E06               	movlw	6
   731   000C3E  6E18               	movwf	(??_main+1)^0,c
   732   000C40  0E13               	movlw	19
   733   000C42  6E17               	movwf	??_main^0,c
   734   000C44  0EAE               	movlw	174
   735   000C46                     u1247:
   736   000C46  2EE8               	decfsz	wreg,f,c
   737   000C48  D7FE               	bra	u1247
   738   000C4A  2E17               	decfsz	??_main^0,f,c
   739   000C4C  D7FC               	bra	u1247
   740   000C4E  2E18               	decfsz	(??_main+1)^0,f,c
   741   000C50  D7FA               	bra	u1247
   742                           
   743                           ;Lab5.c: 99: DireccionaLCD(0xC0);
   744   000C52  0EC0               	movlw	192
   745   000C54  EC89  F009         	call	_DireccionaLCD
   746                           
   747                           ;Lab5.c: 100: MensajeLCD_Var("Hum:");
   748   000C58  0E1E               	movlw	low STR_4
   749   000C5A  6E08               	movwf	MensajeLCD_Var@a^0,c
   750   000C5C  EC48  F008         	call	_MensajeLCD_Var	;wreg free
   751   000C60                     l205:
   752                           
   753                           ;Lab5.c: 102: _delay((unsigned long)((500)*(8000000/4000.0)));
   754   000C60  0E06               	movlw	6
   755   000C62  6E18               	movwf	(??_main+1)^0,c
   756   000C64  0E13               	movlw	19
   757   000C66  6E17               	movwf	??_main^0,c
   758   000C68  0EAE               	movlw	174
   759   000C6A                     u1257:
   760   000C6A  2EE8               	decfsz	wreg,f,c
   761   000C6C  D7FE               	bra	u1257
   762   000C6E  2E17               	decfsz	??_main^0,f,c
   763   000C70  D7FC               	bra	u1257
   764   000C72  2E18               	decfsz	(??_main+1)^0,f,c
   765   000C74  D7FA               	bra	u1257
   766                           
   767                           ;Lab5.c: 104: _delay((unsigned long)((500)*(8000000/4000.0)));
   768   000C76  0E06               	movlw	6
   769   000C78  6E18               	movwf	(??_main+1)^0,c
   770   000C7A  0E13               	movlw	19
   771   000C7C  6E17               	movwf	??_main^0,c
   772   000C7E  0EAE               	movlw	174
   773   000C80                     u1267:
   774   000C80  2EE8               	decfsz	wreg,f,c
   775   000C82  D7FE               	bra	u1267
   776   000C84  2E17               	decfsz	??_main^0,f,c
   777   000C86  D7FC               	bra	u1267
   778   000C88  2E18               	decfsz	(??_main+1)^0,f,c
   779   000C8A  D7FA               	bra	u1267
   780                           
   781                           ;Lab5.c: 106: LeerHT11();
   782   000C8C  ECD2  F008         	call	_LeerHT11	;wreg free
   783                           
   784                           ;Lab5.c: 107: _delay((unsigned long)((100)*(8000000/4000.0)));
   785   000C90  0E02               	movlw	2
   786   000C92  6E18               	movwf	(??_main+1)^0,c
   787   000C94  0E04               	movlw	4
   788   000C96  6E17               	movwf	??_main^0,c
   789   000C98  0EBA               	movlw	186
   790   000C9A                     u1277:
   791   000C9A  2EE8               	decfsz	wreg,f,c
   792   000C9C  D7FE               	bra	u1277
   793   000C9E  2E17               	decfsz	??_main^0,f,c
   794   000CA0  D7FC               	bra	u1277
   795   000CA2  2E18               	decfsz	(??_main+1)^0,f,c
   796   000CA4  D7FA               	bra	u1277
   797   000CA6  D000               	nop2	
   798                           
   799                           ;Lab5.c: 109: GuardarDatoEnEEPROM(0, Temp);
   800   000CA8  0E00               	movlw	0
   801   000CAA  6E04               	movwf	(GuardarDatoEnEEPROM@dir+1)^0,c
   802   000CAC  0E00               	movlw	0
   803   000CAE  6E03               	movwf	GuardarDatoEnEEPROM@dir^0,c
   804   000CB0  C01F  F005         	movff	_Temp,GuardarDatoEnEEPROM@dato
   805   000CB4  EC59  F009         	call	_GuardarDatoEnEEPROM	;wreg free
   806                           
   807                           ;Lab5.c: 110: _delay((unsigned long)((100)*(8000000/4000.0)));
   808   000CB8  0E02               	movlw	2
   809   000CBA  6E18               	movwf	(??_main+1)^0,c
   810   000CBC  0E04               	movlw	4
   811   000CBE  6E17               	movwf	??_main^0,c
   812   000CC0  0EBA               	movlw	186
   813   000CC2                     u1287:
   814   000CC2  2EE8               	decfsz	wreg,f,c
   815   000CC4  D7FE               	bra	u1287
   816   000CC6  2E17               	decfsz	??_main^0,f,c
   817   000CC8  D7FC               	bra	u1287
   818   000CCA  2E18               	decfsz	(??_main+1)^0,f,c
   819   000CCC  D7FA               	bra	u1287
   820   000CCE  D000               	nop2	
   821                           
   822                           ;Lab5.c: 111: ColorRGB(Temp);
   823   000CD0  C01F  F003         	movff	_Temp,ColorRGB@val
   824   000CD4  6A04               	clrf	(ColorRGB@val+1)^0,c
   825   000CD6  ECA3  F006         	call	_ColorRGB	;wreg free
   826                           
   827                           ;Lab5.c: 112: _delay((unsigned long)((100)*(8000000/4000.0)));
   828   000CDA  0E02               	movlw	2
   829   000CDC  6E18               	movwf	(??_main+1)^0,c
   830   000CDE  0E04               	movlw	4
   831   000CE0  6E17               	movwf	??_main^0,c
   832   000CE2  0EBA               	movlw	186
   833   000CE4                     u1297:
   834   000CE4  2EE8               	decfsz	wreg,f,c
   835   000CE6  D7FE               	bra	u1297
   836   000CE8  2E17               	decfsz	??_main^0,f,c
   837   000CEA  D7FC               	bra	u1297
   838   000CEC  2E18               	decfsz	(??_main+1)^0,f,c
   839   000CEE  D7FA               	bra	u1297
   840   000CF0  D000               	nop2	
   841                           
   842                           ;Lab5.c: 114: if(!RC4) TransmitirDatos(RB1, RB2);
   843   000CF2  B882               	btfsc	3970,4,c	;volatile
   844   000CF4  D011               	goto	l2078
   845   000CF6  A281               	btfss	3969,1,c	;volatile
   846   000CF8  D002               	goto	u1110
   847   000CFA  0E01               	movlw	1
   848   000CFC  D001               	goto	u1120
   849   000CFE                     u1110:
   850   000CFE  0E00               	movlw	0
   851   000D00                     u1120:
   852   000D00  6E0B               	movwf	TransmitirDatos@Ent1^0,c
   853   000D02  6A0C               	clrf	(TransmitirDatos@Ent1+1)^0,c
   854   000D04  A481               	btfss	3969,2,c	;volatile
   855   000D06  D002               	goto	u1130
   856   000D08  0E01               	movlw	1
   857   000D0A  D001               	goto	u1140
   858   000D0C                     u1130:
   859   000D0C  0E00               	movlw	0
   860   000D0E                     u1140:
   861   000D0E  6E0D               	movwf	TransmitirDatos@Ent2^0,c
   862   000D10  6A0E               	clrf	(TransmitirDatos@Ent2+1)^0,c
   863   000D12  EC12  F004         	call	_TransmitirDatos	;wreg free
   864   000D16  D00A               	goto	l2080
   865   000D18                     l2078:
   866                           
   867                           ;Lab5.c: 115: else TransmitirDatos(A, B);
   868   000D18  C01B  F00B         	movff	_A,TransmitirDatos@Ent1
   869   000D1C  C01C  F00C         	movff	_A+1,TransmitirDatos@Ent1+1
   870   000D20  C019  F00D         	movff	_B,TransmitirDatos@Ent2
   871   000D24  C01A  F00E         	movff	_B+1,TransmitirDatos@Ent2+1
   872   000D28  EC12  F004         	call	_TransmitirDatos	;wreg free
   873   000D2C                     l2080:
   874                           
   875                           ;Lab5.c: 116: Conversion(0);
   876   000D2C  0E00               	movlw	0
   877   000D2E  ECA9  F009         	call	_Conversion
   878                           
   879                           ;Lab5.c: 117: RB0 = (ADRES <= 511) ? 0 : 1;
   880   000D32  0E00               	movlw	0
   881   000D34  5CC3               	subwf	195,w,c	;volatile
   882   000D36  0E02               	movlw	2
   883   000D38  58C4               	subwfb	196,w,c	;volatile
   884   000D3A  A0D8               	btfss	status,0,c
   885   000D3C  D002               	goto	u1150
   886   000D3E  8081               	bsf	3969,0,c	;volatile
   887   000D40  D78F               	goto	l205
   888   000D42                     u1150:
   889   000D42  9081               	bcf	3969,0,c	;volatile
   890   000D44  D78D               	goto	l205
   891   000D46                     __end_of_main:
   892                           	callstack 0
   893                           
   894 ;; *************** function _leerDatoEnEEPROM *****************
   895 ;; Defined at:
   896 ;;		line 296 in file "Lab5.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  dir             2    2[COMRAM] unsigned int 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      unsigned char 
   903 ;; Registers used:
   904 ;;		wreg, status,2
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   910 ;;      Params:         2       0       0       0       0       0       0       0       0
   911 ;;      Locals:         0       0       0       0       0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0       0       0       0       0
   913 ;;      Totals:         2       0       0       0       0       0       0       0       0
   914 ;;Total ram usage:        2 bytes
   915 ;; Hardware stack levels used: 1
   916 ;; Hardware stack levels required when called: 2
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text1
   925   001366                     __ptext1:
   926                           	callstack 0
   927   001366                     _leerDatoEnEEPROM:
   928                           	callstack 28
   929                           
   930                           ;Lab5.c: 297: EEADR = dir;
   931                           
   932                           ;incstack = 0
   933   001366  C003  FFA9         	movff	leerDatoEnEEPROM@dir,4009	;volatile
   934                           
   935                           ;Lab5.c: 298: EEPGD = 0;
   936   00136A  9EA6               	bcf	4006,7,c	;volsfr
   937                           
   938                           ;Lab5.c: 299: CFGS = 0;
   939   00136C  9CA6               	bcf	4006,6,c	;volsfr
   940                           
   941                           ;Lab5.c: 300: RD = 1;
   942   00136E  80A6               	bsf	4006,0,c	;volsfr
   943                           
   944                           ;Lab5.c: 302: return EEDATA;
   945   001370  50A8               	movf	168,w,c	;volatile
   946   001372  0012               	return		;funcret
   947   001374                     __end_of_leerDatoEnEEPROM:
   948                           	callstack 0
   949                           
   950 ;; *************** function _TransmitirDatos *****************
   951 ;; Defined at:
   952 ;;		line 169 in file "Lab5.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  Ent1            2   10[COMRAM] unsigned int 
   955 ;;  Ent2            2   12[COMRAM] unsigned int 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  TempC           2   20[COMRAM] unsigned int 
   958 ;;  Simb            2   18[COMRAM] unsigned int 
   959 ;;  n               2   16[COMRAM] unsigned int 
   960 ;;  HumC            2    0        unsigned int 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   970 ;;      Params:         4       0       0       0       0       0       0       0       0
   971 ;;      Locals:         6       0       0       0       0       0       0       0       0
   972 ;;      Temps:          2       0       0       0       0       0       0       0       0
   973 ;;      Totals:        12       0       0       0       0       0       0       0       0
   974 ;;Total ram usage:       12 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; Hardware stack levels required when called: 5
   977 ;; This function calls:
   978 ;;		_DireccionaLCD
   979 ;;		_EscribeLCD_c
   980 ;;		_Transmitir
   981 ;;		___awdiv
   982 ;;		___lbdiv
   983 ;;		___lbmod
   984 ;;		___lwdiv
   985 ;;		___lwmod
   986 ;;		___wmul
   987 ;; This function is called by:
   988 ;;		_main
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text2
   993   000824                     __ptext2:
   994                           	callstack 0
   995   000824                     _TransmitirDatos:
   996                           	callstack 25
   997                           
   998                           ;Lab5.c: 170: unsigned int n = Ent1 * 10 + Ent2, TempC = Temp, HumC = Hum;
   999                           
  1000                           ;incstack = 0
  1001   000824  C00B  F003         	movff	TransmitirDatos@Ent1,___wmul@multiplier
  1002   000828  C00C  F004         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
  1003   00082C  0E00               	movlw	0
  1004   00082E  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  1005   000830  0E0A               	movlw	10
  1006   000832  6E05               	movwf	___wmul@multiplicand^0,c
  1007   000834  EC46  F009         	call	___wmul	;wreg free
  1008   000838  500D               	movf	TransmitirDatos@Ent2^0,w,c
  1009   00083A  2403               	addwf	?___wmul^0,w,c
  1010   00083C  6E11               	movwf	TransmitirDatos@n^0,c
  1011   00083E  500E               	movf	(TransmitirDatos@Ent2+1)^0,w,c
  1012   000840  2004               	addwfc	(?___wmul+1)^0,w,c
  1013   000842  6E12               	movwf	(TransmitirDatos@n+1)^0,c
  1014   000844  C01F  F015         	movff	_Temp,TransmitirDatos@TempC
  1015   000848  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
  1016                           
  1017                           ;Lab5.c: 171: unsigned int Simb = 67;
  1018   00084A  0E00               	movlw	0
  1019   00084C  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
  1020   00084E  0E43               	movlw	67
  1021   000850  6E13               	movwf	TransmitirDatos@Simb^0,c
  1022                           
  1023                           ;Lab5.c: 173: switch (n) {
  1024   000852  D03E               	goto	l1908
  1025   000854                     l251:
  1026                           
  1027                           ;Lab5.c: 175: TempC = Temp;
  1028   000854  C01F  F015         	movff	_Temp,TransmitirDatos@TempC
  1029   000858  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
  1030                           
  1031                           ;Lab5.c: 176: Simb = 67;
  1032   00085A  0E00               	movlw	0
  1033   00085C  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
  1034   00085E  0E43               	movlw	67
  1035   000860  D035               	goto	L3
  1036   000862                     l1894:
  1037                           
  1038                           ;Lab5.c: 179: TempC = Temp + 273;
  1039   000862  0E11               	movlw	17
  1040   000864  241F               	addwf	_Temp^0,w,c
  1041   000866  6E15               	movwf	TransmitirDatos@TempC^0,c
  1042   000868  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
  1043   00086A  0E01               	movlw	1
  1044   00086C  2216               	addwfc	(TransmitirDatos@TempC+1)^0,f,c
  1045                           
  1046                           ;Lab5.c: 180: Simb = 75;
  1047   00086E  0E00               	movlw	0
  1048   000870  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
  1049   000872  0E4B               	movlw	75
  1050   000874  D02B               	goto	L3
  1051   000876                     l1898:
  1052                           
  1053                           ;Lab5.c: 183: TempC = Temp * 9 / 5 + 492;
  1054   000876  501F               	movf	_Temp^0,w,c
  1055   000878  0D09               	mullw	9
  1056   00087A  CFF3 F003          	movff	prodl,___awdiv@dividend
  1057   00087E  CFF4 F004          	movff	prodh,___awdiv@dividend+1
  1058   000882  0E00               	movlw	0
  1059   000884  6E06               	movwf	(___awdiv@divisor+1)^0,c
  1060   000886  0E05               	movlw	5
  1061   000888  6E05               	movwf	___awdiv@divisor^0,c
  1062   00088A  ECAA  F007         	call	___awdiv	;wreg free
  1063   00088E  0EEC               	movlw	236
  1064   000890  2403               	addwf	?___awdiv^0,w,c
  1065   000892  6E15               	movwf	TransmitirDatos@TempC^0,c
  1066   000894  0E01               	movlw	1
  1067   000896  2004               	addwfc	(?___awdiv+1)^0,w,c
  1068   000898  6E16               	movwf	(TransmitirDatos@TempC+1)^0,c
  1069                           
  1070                           ;Lab5.c: 184: Simb = 82;
  1071   00089A  0E00               	movlw	0
  1072   00089C  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
  1073   00089E  0E52               	movlw	82
  1074   0008A0  D015               	goto	L3
  1075   0008A2                     l1902:
  1076                           
  1077                           ;Lab5.c: 187: TempC = Temp * 9 / 5 + 32;
  1078   0008A2  501F               	movf	_Temp^0,w,c
  1079   0008A4  0D09               	mullw	9
  1080   0008A6  CFF3 F003          	movff	prodl,___awdiv@dividend
  1081   0008AA  CFF4 F004          	movff	prodh,___awdiv@dividend+1
  1082   0008AE  0E00               	movlw	0
  1083   0008B0  6E06               	movwf	(___awdiv@divisor+1)^0,c
  1084   0008B2  0E05               	movlw	5
  1085   0008B4  6E05               	movwf	___awdiv@divisor^0,c
  1086   0008B6  ECAA  F007         	call	___awdiv	;wreg free
  1087   0008BA  0E20               	movlw	32
  1088   0008BC  2403               	addwf	?___awdiv^0,w,c
  1089   0008BE  6E15               	movwf	TransmitirDatos@TempC^0,c
  1090   0008C0  0E00               	movlw	0
  1091   0008C2  2004               	addwfc	(?___awdiv+1)^0,w,c
  1092   0008C4  6E16               	movwf	(TransmitirDatos@TempC+1)^0,c
  1093                           
  1094                           ;Lab5.c: 188: Simb = 70;
  1095   0008C6  0E00               	movlw	0
  1096   0008C8  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
  1097   0008CA  0E46               	movlw	70
  1098   0008CC                     L3:
  1099   0008CC  6E13               	movwf	TransmitirDatos@Simb^0,c
  1100                           
  1101                           ;Lab5.c: 189: break;
  1102   0008CE  D015               	goto	l1910
  1103   0008D0                     l1908:
  1104   0008D0  C011  F00F         	movff	TransmitirDatos@n,??_TransmitirDatos
  1105   0008D4  C012  F010         	movff	TransmitirDatos@n+1,??_TransmitirDatos+1
  1106                           
  1107                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1108                           ; Switch size 1, requested type "simple"
  1109                           ; Number of cases is 1, Range of values is 0 to 0
  1110                           ; switch strategies available:
  1111                           ; Name         Instructions Cycles
  1112                           ; simple_byte            4     3 (average)
  1113                           ;	Chosen strategy is simple_byte
  1114   0008D8  5010               	movf	(??_TransmitirDatos+1)^0,w,c
  1115   0008DA  0A00               	xorlw	0	; case 0
  1116   0008DC  A4D8               	btfss	status,2,c
  1117   0008DE  D00D               	goto	l1910
  1118                           
  1119                           ; Switch size 1, requested type "simple"
  1120                           ; Number of cases is 4, Range of values is 0 to 11
  1121                           ; switch strategies available:
  1122                           ; Name         Instructions Cycles
  1123                           ; simple_byte           13     7 (average)
  1124                           ;	Chosen strategy is simple_byte
  1125   0008E0  500F               	movf	??_TransmitirDatos^0,w,c
  1126   0008E2  0A00               	xorlw	0	; case 0
  1127   0008E4  B4D8               	btfsc	status,2,c
  1128   0008E6  D7B6               	goto	l251
  1129   0008E8  0A01               	xorlw	1	; case 1
  1130   0008EA  B4D8               	btfsc	status,2,c
  1131   0008EC  D7BA               	goto	l1894
  1132   0008EE  0A0B               	xorlw	11	; case 10
  1133   0008F0  B4D8               	btfsc	status,2,c
  1134   0008F2  D7C1               	goto	l1898
  1135   0008F4  0A01               	xorlw	1	; case 11
  1136   0008F6  B4D8               	btfsc	status,2,c
  1137   0008F8  D7D4               	goto	l1902
  1138   0008FA                     l1910:
  1139                           
  1140                           ;Lab5.c: 191: Transmitir('T');
  1141   0008FA  0E54               	movlw	84
  1142   0008FC  ECC1  F009         	call	_Transmitir
  1143                           
  1144                           ;Lab5.c: 192: Transmitir('e');
  1145   000900  0E65               	movlw	101
  1146   000902  ECC1  F009         	call	_Transmitir
  1147                           
  1148                           ;Lab5.c: 193: Transmitir('m');
  1149   000906  0E6D               	movlw	109
  1150   000908  ECC1  F009         	call	_Transmitir
  1151                           
  1152                           ;Lab5.c: 194: Transmitir('p');
  1153   00090C  0E70               	movlw	112
  1154   00090E  ECC1  F009         	call	_Transmitir
  1155                           
  1156                           ;Lab5.c: 195: Transmitir(':');
  1157   000912  0E3A               	movlw	58
  1158   000914  ECC1  F009         	call	_Transmitir
  1159                           
  1160                           ;Lab5.c: 196: Transmitir(' ');
  1161   000918  0E20               	movlw	32
  1162   00091A  ECC1  F009         	call	_Transmitir
  1163                           
  1164                           ;Lab5.c: 198: DireccionaLCD(0x85);
  1165   00091E  0E85               	movlw	133
  1166   000920  EC89  F009         	call	_DireccionaLCD
  1167                           
  1168                           ;Lab5.c: 199: if (TempC / 100 > 0) {
  1169   000924  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1170   000928  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1171   00092C  0E00               	movlw	0
  1172   00092E  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1173   000930  0E64               	movlw	100
  1174   000932  6E05               	movwf	___lwdiv@divisor^0,c
  1175   000934  EC1F  F008         	call	___lwdiv	;wreg free
  1176   000938  5003               	movf	?___lwdiv^0,w,c
  1177   00093A  1004               	iorwf	(?___lwdiv+1)^0,w,c
  1178   00093C  B4D8               	btfsc	status,2,c
  1179   00093E  D02A               	goto	l256
  1180                           
  1181                           ;Lab5.c: 200: Transmitir(TempC / 100 + 48);
  1182   000940  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1183   000944  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1184   000948  0E00               	movlw	0
  1185   00094A  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1186   00094C  0E64               	movlw	100
  1187   00094E  6E05               	movwf	___lwdiv@divisor^0,c
  1188   000950  EC1F  F008         	call	___lwdiv	;wreg free
  1189   000954  5003               	movf	?___lwdiv^0,w,c
  1190   000956  0F30               	addlw	48
  1191   000958  ECC1  F009         	call	_Transmitir
  1192                           
  1193                           ;Lab5.c: 201: EscribeLCD_c(TempC / 100 + 48);
  1194   00095C  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1195   000960  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1196   000964  0E00               	movlw	0
  1197   000966  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1198   000968  0E64               	movlw	100
  1199   00096A  6E05               	movwf	___lwdiv@divisor^0,c
  1200   00096C  EC1F  F008         	call	___lwdiv	;wreg free
  1201   000970  5003               	movf	?___lwdiv^0,w,c
  1202   000972  0F30               	addlw	48
  1203   000974  EC94  F009         	call	_EscribeLCD_c
  1204                           
  1205                           ;Lab5.c: 202: TempC = TempC % 100;
  1206   000978  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1207   00097C  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1208   000980  0E00               	movlw	0
  1209   000982  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1210   000984  0E64               	movlw	100
  1211   000986  6E05               	movwf	___lwmod@divisor^0,c
  1212   000988  EC94  F008         	call	___lwmod	;wreg free
  1213   00098C  C003  F015         	movff	?___lwmod,TransmitirDatos@TempC
  1214   000990  C004  F016         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1215   000994                     l256:
  1216                           
  1217                           ;Lab5.c: 203: };Lab5.c: 204: Transmitir(TempC / 10 + 48);
  1218   000994  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1219   000998  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1220   00099C  0E00               	movlw	0
  1221   00099E  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1222   0009A0  0E0A               	movlw	10
  1223   0009A2  6E05               	movwf	___lwdiv@divisor^0,c
  1224   0009A4  EC1F  F008         	call	___lwdiv	;wreg free
  1225   0009A8  5003               	movf	?___lwdiv^0,w,c
  1226   0009AA  0F30               	addlw	48
  1227   0009AC  ECC1  F009         	call	_Transmitir
  1228                           
  1229                           ;Lab5.c: 205: Transmitir(TempC % 10 + 48);
  1230   0009B0  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1231   0009B4  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1232   0009B8  0E00               	movlw	0
  1233   0009BA  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1234   0009BC  0E0A               	movlw	10
  1235   0009BE  6E05               	movwf	___lwmod@divisor^0,c
  1236   0009C0  EC94  F008         	call	___lwmod	;wreg free
  1237   0009C4  5003               	movf	?___lwmod^0,w,c
  1238   0009C6  0F30               	addlw	48
  1239   0009C8  ECC1  F009         	call	_Transmitir
  1240                           
  1241                           ;Lab5.c: 206: if (Simb==70 | Simb == 67) Transmitir(223);
  1242   0009CC  0E46               	movlw	70
  1243   0009CE  1813               	xorwf	TransmitirDatos@Simb^0,w,c
  1244   0009D0  1014               	iorwf	(TransmitirDatos@Simb+1)^0,w,c
  1245   0009D2  B4D8               	btfsc	status,2,c
  1246   0009D4  D005               	goto	u1060
  1247   0009D6  0E43               	movlw	67
  1248   0009D8  1813               	xorwf	TransmitirDatos@Simb^0,w,c
  1249   0009DA  1014               	iorwf	(TransmitirDatos@Simb+1)^0,w,c
  1250   0009DC  A4D8               	btfss	status,2,c
  1251   0009DE  D003               	goto	l1924
  1252   0009E0                     u1060:
  1253   0009E0  0EDF               	movlw	223
  1254   0009E2  ECC1  F009         	call	_Transmitir
  1255   0009E6                     l1924:
  1256                           
  1257                           ;Lab5.c: 207: Transmitir(Simb);
  1258   0009E6  5013               	movf	TransmitirDatos@Simb^0,w,c
  1259   0009E8  ECC1  F009         	call	_Transmitir
  1260                           
  1261                           ;Lab5.c: 208: Transmitir(' ');
  1262   0009EC  0E20               	movlw	32
  1263   0009EE  ECC1  F009         	call	_Transmitir
  1264                           
  1265                           ;Lab5.c: 209: Transmitir('\n');
  1266   0009F2  0E0A               	movlw	10
  1267   0009F4  ECC1  F009         	call	_Transmitir
  1268                           
  1269                           ;Lab5.c: 210: Transmitir('H');
  1270   0009F8  0E48               	movlw	72
  1271   0009FA  ECC1  F009         	call	_Transmitir
  1272                           
  1273                           ;Lab5.c: 211: Transmitir('u');
  1274   0009FE  0E75               	movlw	117
  1275   000A00  ECC1  F009         	call	_Transmitir
  1276                           
  1277                           ;Lab5.c: 212: Transmitir('m');
  1278   000A04  0E6D               	movlw	109
  1279   000A06  ECC1  F009         	call	_Transmitir
  1280                           
  1281                           ;Lab5.c: 213: Transmitir(':');
  1282   000A0A  0E3A               	movlw	58
  1283   000A0C  ECC1  F009         	call	_Transmitir
  1284                           
  1285                           ;Lab5.c: 214: Transmitir(' ');
  1286   000A10  0E20               	movlw	32
  1287   000A12  ECC1  F009         	call	_Transmitir
  1288                           
  1289                           ;Lab5.c: 215: Transmitir(Hum / 10 + 48);
  1290   000A16  0E0A               	movlw	10
  1291   000A18  6E03               	movwf	___lbdiv@divisor^0,c
  1292   000A1A  501E               	movf	_Hum^0,w,c
  1293   000A1C  ECB5  F008         	call	___lbdiv
  1294   000A20  0F30               	addlw	48
  1295   000A22  ECC1  F009         	call	_Transmitir
  1296                           
  1297                           ;Lab5.c: 216: Transmitir(Hum % 10 + 48);
  1298   000A26  0E0A               	movlw	10
  1299   000A28  6E03               	movwf	___lbmod@divisor^0,c
  1300   000A2A  501E               	movf	_Hum^0,w,c
  1301   000A2C  EC1D  F009         	call	___lbmod
  1302   000A30  0F30               	addlw	48
  1303   000A32  ECC1  F009         	call	_Transmitir
  1304                           
  1305                           ;Lab5.c: 217: Transmitir(' ');
  1306   000A36  0E20               	movlw	32
  1307   000A38  ECC1  F009         	call	_Transmitir
  1308                           
  1309                           ;Lab5.c: 218: Transmitir('%');
  1310   000A3C  0E25               	movlw	37
  1311   000A3E  ECC1  F009         	call	_Transmitir
  1312                           
  1313                           ;Lab5.c: 219: Transmitir('\n');
  1314   000A42  0E0A               	movlw	10
  1315   000A44  ECC1  F009         	call	_Transmitir
  1316                           
  1317                           ;Lab5.c: 220: Transmitir(' ');
  1318   000A48  0E20               	movlw	32
  1319   000A4A  ECC1  F009         	call	_Transmitir
  1320                           
  1321                           ;Lab5.c: 222: EscribeLCD_c(TempC / 10 + 48);
  1322   000A4E  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1323   000A52  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1324   000A56  0E00               	movlw	0
  1325   000A58  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1326   000A5A  0E0A               	movlw	10
  1327   000A5C  6E05               	movwf	___lwdiv@divisor^0,c
  1328   000A5E  EC1F  F008         	call	___lwdiv	;wreg free
  1329   000A62  5003               	movf	?___lwdiv^0,w,c
  1330   000A64  0F30               	addlw	48
  1331   000A66  EC94  F009         	call	_EscribeLCD_c
  1332                           
  1333                           ;Lab5.c: 223: EscribeLCD_c(TempC % 10 + 48);
  1334   000A6A  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1335   000A6E  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1336   000A72  0E00               	movlw	0
  1337   000A74  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1338   000A76  0E0A               	movlw	10
  1339   000A78  6E05               	movwf	___lwmod@divisor^0,c
  1340   000A7A  EC94  F008         	call	___lwmod	;wreg free
  1341   000A7E  5003               	movf	?___lwmod^0,w,c
  1342   000A80  0F30               	addlw	48
  1343   000A82  EC94  F009         	call	_EscribeLCD_c
  1344                           
  1345                           ;Lab5.c: 224: if (Simb==70 | Simb == 67) EscribeLCD_c(223);
  1346   000A86  0E46               	movlw	70
  1347   000A88  1813               	xorwf	TransmitirDatos@Simb^0,w,c
  1348   000A8A  1014               	iorwf	(TransmitirDatos@Simb+1)^0,w,c
  1349   000A8C  B4D8               	btfsc	status,2,c
  1350   000A8E  D005               	goto	u1080
  1351   000A90  0E43               	movlw	67
  1352   000A92  1813               	xorwf	TransmitirDatos@Simb^0,w,c
  1353   000A94  1014               	iorwf	(TransmitirDatos@Simb+1)^0,w,c
  1354   000A96  A4D8               	btfss	status,2,c
  1355   000A98  D003               	goto	l260
  1356   000A9A                     u1080:
  1357   000A9A  0EDF               	movlw	223
  1358   000A9C  EC94  F009         	call	_EscribeLCD_c
  1359   000AA0                     l260:
  1360                           
  1361                           ;Lab5.c: 225: EscribeLCD_c(Simb);
  1362   000AA0  5013               	movf	TransmitirDatos@Simb^0,w,c
  1363   000AA2  EC94  F009         	call	_EscribeLCD_c
  1364                           
  1365                           ;Lab5.c: 226: DireccionaLCD(0xC4);
  1366   000AA6  0EC4               	movlw	196
  1367   000AA8  EC89  F009         	call	_DireccionaLCD
  1368                           
  1369                           ;Lab5.c: 227: EscribeLCD_c(Hum / 10 + 48);
  1370   000AAC  0E0A               	movlw	10
  1371   000AAE  6E03               	movwf	___lbdiv@divisor^0,c
  1372   000AB0  501E               	movf	_Hum^0,w,c
  1373   000AB2  ECB5  F008         	call	___lbdiv
  1374   000AB6  0F30               	addlw	48
  1375   000AB8  EC94  F009         	call	_EscribeLCD_c
  1376                           
  1377                           ;Lab5.c: 228: EscribeLCD_c(Hum % 10 + 48);
  1378   000ABC  0E0A               	movlw	10
  1379   000ABE  6E03               	movwf	___lbmod@divisor^0,c
  1380   000AC0  501E               	movf	_Hum^0,w,c
  1381   000AC2  EC1D  F009         	call	___lbmod
  1382   000AC6  0F30               	addlw	48
  1383   000AC8  EC94  F009         	call	_EscribeLCD_c
  1384                           
  1385                           ;Lab5.c: 229: EscribeLCD_c('%');
  1386   000ACC  0E25               	movlw	37
  1387   000ACE  EC94  F009         	call	_EscribeLCD_c
  1388   000AD2  0012               	return		;funcret
  1389   000AD4                     __end_of_TransmitirDatos:
  1390                           	callstack 0
  1391                           
  1392 ;; *************** function ___wmul *****************
  1393 ;; Defined at:
  1394 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  multiplier      2    2[COMRAM] unsigned int 
  1397 ;;  multiplicand    2    4[COMRAM] unsigned int 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;  product         2    6[COMRAM] unsigned int 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  2    2[COMRAM] unsigned int 
  1402 ;; Registers used:
  1403 ;;		wreg, status,2, status,0, prodl, prodh
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1409 ;;      Params:         4       0       0       0       0       0       0       0       0
  1410 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1411 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1412 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1413 ;;Total ram usage:        6 bytes
  1414 ;; Hardware stack levels used: 1
  1415 ;; Hardware stack levels required when called: 2
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_TransmitirDatos
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text3
  1424   00128C                     __ptext3:
  1425                           	callstack 0
  1426   00128C                     ___wmul:
  1427                           	callstack 27
  1428                           
  1429                           ;incstack = 0
  1430   00128C  5003               	movf	___wmul@multiplier^0,w,c
  1431   00128E  0205               	mulwf	___wmul@multiplicand^0,c
  1432   001290  CFF3 F007          	movff	prodl,___wmul@product
  1433   001294  CFF4 F008          	movff	prodh,___wmul@product+1
  1434   001298  5003               	movf	___wmul@multiplier^0,w,c
  1435   00129A  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  1436   00129C  50F3               	movf	243,w,c
  1437   00129E  2608               	addwf	(___wmul@product+1)^0,f,c
  1438   0012A0  5004               	movf	(___wmul@multiplier+1)^0,w,c
  1439   0012A2  0205               	mulwf	___wmul@multiplicand^0,c
  1440   0012A4  50F3               	movf	243,w,c
  1441   0012A6  2608               	addwf	(___wmul@product+1)^0,f,c
  1442   0012A8  C007  F003         	movff	___wmul@product,?___wmul
  1443   0012AC  C008  F004         	movff	___wmul@product+1,?___wmul+1
  1444   0012B0  0012               	return		;funcret
  1445   0012B2                     __end_of___wmul:
  1446                           	callstack 0
  1447                           
  1448 ;; *************** function ___lwmod *****************
  1449 ;; Defined at:
  1450 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  dividend        2    2[COMRAM] unsigned int 
  1453 ;;  divisor         2    4[COMRAM] unsigned int 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  counter         1    6[COMRAM] unsigned char 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  2    2[COMRAM] unsigned int 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1465 ;;      Params:         4       0       0       0       0       0       0       0       0
  1466 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1467 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1468 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1469 ;;Total ram usage:        5 bytes
  1470 ;; Hardware stack levels used: 1
  1471 ;; Hardware stack levels required when called: 2
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_TransmitirDatos
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text4
  1480   001128                     __ptext4:
  1481                           	callstack 0
  1482   001128                     ___lwmod:
  1483                           	callstack 27
  1484                           
  1485                           ;incstack = 0
  1486   001128  5005               	movf	___lwmod@divisor^0,w,c
  1487   00112A  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  1488   00112C  B4D8               	btfsc	status,2,c
  1489   00112E  D018               	goto	l802
  1490   001130  0E01               	movlw	1
  1491   001132  6E07               	movwf	___lwmod@counter^0,c
  1492   001134  D004               	goto	l1804
  1493   001136                     l1802:
  1494   001136  90D8               	bcf	status,0,c
  1495   001138  3605               	rlcf	___lwmod@divisor^0,f,c
  1496   00113A  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  1497   00113C  2A07               	incf	___lwmod@counter^0,f,c
  1498   00113E                     l1804:
  1499   00113E  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  1500   001140  D7FA               	goto	l1802
  1501   001142                     u850:
  1502   001142  5005               	movf	___lwmod@divisor^0,w,c
  1503   001144  5C03               	subwf	___lwmod@dividend^0,w,c
  1504   001146  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1505   001148  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  1506   00114A  A0D8               	btfss	status,0,c
  1507   00114C  D004               	goto	l1810
  1508   00114E  5005               	movf	___lwmod@divisor^0,w,c
  1509   001150  5E03               	subwf	___lwmod@dividend^0,f,c
  1510   001152  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1511   001154  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  1512   001156                     l1810:
  1513   001156  90D8               	bcf	status,0,c
  1514   001158  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  1515   00115A  3205               	rrcf	___lwmod@divisor^0,f,c
  1516   00115C  2E07               	decfsz	___lwmod@counter^0,f,c
  1517   00115E  D7F1               	goto	u850
  1518   001160                     l802:
  1519   001160  C003  F003         	movff	___lwmod@dividend,?___lwmod
  1520   001164  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  1521   001168  0012               	return		;funcret
  1522   00116A                     __end_of___lwmod:
  1523                           	callstack 0
  1524                           
  1525 ;; *************** function ___lwdiv *****************
  1526 ;; Defined at:
  1527 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  dividend        2    2[COMRAM] unsigned int 
  1530 ;;  divisor         2    4[COMRAM] unsigned int 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  quotient        2    6[COMRAM] unsigned int 
  1533 ;;  counter         1    8[COMRAM] unsigned char 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  2    2[COMRAM] unsigned int 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2, status,0
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1543 ;;      Params:         4       0       0       0       0       0       0       0       0
  1544 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1546 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1547 ;;Total ram usage:        7 bytes
  1548 ;; Hardware stack levels used: 1
  1549 ;; Hardware stack levels required when called: 2
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_TransmitirDatos
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text5
  1558   00103E                     __ptext5:
  1559                           	callstack 0
  1560   00103E                     ___lwdiv:
  1561                           	callstack 27
  1562                           
  1563                           ;incstack = 0
  1564   00103E  0E00               	movlw	0
  1565   001040  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  1566   001042  0E00               	movlw	0
  1567   001044  6E07               	movwf	___lwdiv@quotient^0,c
  1568   001046  5005               	movf	___lwdiv@divisor^0,w,c
  1569   001048  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1570   00104A  B4D8               	btfsc	status,2,c
  1571   00104C  D01C               	goto	l792
  1572   00104E  0E01               	movlw	1
  1573   001050  6E09               	movwf	___lwdiv@counter^0,c
  1574   001052  D004               	goto	l1784
  1575   001054                     l1782:
  1576   001054  90D8               	bcf	status,0,c
  1577   001056  3605               	rlcf	___lwdiv@divisor^0,f,c
  1578   001058  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1579   00105A  2A09               	incf	___lwdiv@counter^0,f,c
  1580   00105C                     l1784:
  1581   00105C  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  1582   00105E  D7FA               	goto	l1782
  1583   001060                     u820:
  1584   001060  90D8               	bcf	status,0,c
  1585   001062  3607               	rlcf	___lwdiv@quotient^0,f,c
  1586   001064  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1587   001066  5005               	movf	___lwdiv@divisor^0,w,c
  1588   001068  5C03               	subwf	___lwdiv@dividend^0,w,c
  1589   00106A  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1590   00106C  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1591   00106E  A0D8               	btfss	status,0,c
  1592   001070  D005               	goto	l1794
  1593   001072  5005               	movf	___lwdiv@divisor^0,w,c
  1594   001074  5E03               	subwf	___lwdiv@dividend^0,f,c
  1595   001076  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1596   001078  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1597   00107A  8007               	bsf	___lwdiv@quotient^0,0,c
  1598   00107C                     l1794:
  1599   00107C  90D8               	bcf	status,0,c
  1600   00107E  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1601   001080  3205               	rrcf	___lwdiv@divisor^0,f,c
  1602   001082  2E09               	decfsz	___lwdiv@counter^0,f,c
  1603   001084  D7ED               	goto	u820
  1604   001086                     l792:
  1605   001086  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  1606   00108A  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1607   00108E  0012               	return		;funcret
  1608   001090                     __end_of___lwdiv:
  1609                           	callstack 0
  1610                           
  1611 ;; *************** function ___lbmod *****************
  1612 ;; Defined at:
  1613 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  dividend        1    wreg     unsigned char 
  1616 ;;  divisor         1    2[COMRAM] unsigned char 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;  dividend        1    3[COMRAM] unsigned char 
  1619 ;;  rem             1    5[COMRAM] unsigned char 
  1620 ;;  counter         1    4[COMRAM] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      unsigned char 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1630 ;;      Params:         1       0       0       0       0       0       0       0       0
  1631 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1632 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1633 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1634 ;;Total ram usage:        4 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 2
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		_main
  1641 ;;		_TransmitirDatos
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text6
  1646   00123A                     __ptext6:
  1647                           	callstack 0
  1648   00123A                     ___lbmod:
  1649                           	callstack 28
  1650                           
  1651                           ;incstack = 0
  1652                           ;___lbmod@dividend stored from wreg
  1653   00123A  6E04               	movwf	___lbmod@dividend^0,c
  1654   00123C  0E08               	movlw	8
  1655   00123E  6E05               	movwf	___lbmod@counter^0,c
  1656   001240  0E00               	movlw	0
  1657   001242  6E06               	movwf	___lbmod@rem^0,c
  1658   001244                     l1762:
  1659   001244  90D8               	bcf	status,0,c
  1660   001246  3404               	rlcf	___lbmod@dividend^0,w,c
  1661   001248  3406               	rlcf	___lbmod@rem^0,w,c
  1662   00124A  6E06               	movwf	___lbmod@rem^0,c
  1663   00124C  90D8               	bcf	status,0,c
  1664   00124E  3604               	rlcf	___lbmod@dividend^0,f,c
  1665   001250  5003               	movf	___lbmod@divisor^0,w,c
  1666   001252  5C06               	subwf	___lbmod@rem^0,w,c
  1667   001254  A0D8               	btfss	status,0,c
  1668   001256  D002               	goto	l1770
  1669   001258  5003               	movf	___lbmod@divisor^0,w,c
  1670   00125A  5E06               	subwf	___lbmod@rem^0,f,c
  1671   00125C                     l1770:
  1672   00125C  2E05               	decfsz	___lbmod@counter^0,f,c
  1673   00125E  D7F2               	goto	l1762
  1674   001260  5006               	movf	___lbmod@rem^0,w,c
  1675   001262  0012               	return		;funcret
  1676   001264                     __end_of___lbmod:
  1677                           	callstack 0
  1678                           
  1679 ;; *************** function ___lbdiv *****************
  1680 ;; Defined at:
  1681 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  dividend        1    wreg     unsigned char 
  1684 ;;  divisor         1    2[COMRAM] unsigned char 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  dividend        1    3[COMRAM] unsigned char 
  1687 ;;  quotient        1    5[COMRAM] unsigned char 
  1688 ;;  counter         1    4[COMRAM] unsigned char 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      unsigned char 
  1691 ;; Registers used:
  1692 ;;		wreg, status,2, status,0
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1698 ;;      Params:         1       0       0       0       0       0       0       0       0
  1699 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1700 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1701 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1702 ;;Total ram usage:        4 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; Hardware stack levels required when called: 2
  1705 ;; This function calls:
  1706 ;;		Nothing
  1707 ;; This function is called by:
  1708 ;;		_main
  1709 ;;		_TransmitirDatos
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text7
  1714   00116A                     __ptext7:
  1715                           	callstack 0
  1716   00116A                     ___lbdiv:
  1717                           	callstack 28
  1718                           
  1719                           ;incstack = 0
  1720                           ;___lbdiv@dividend stored from wreg
  1721   00116A  6E04               	movwf	___lbdiv@dividend^0,c
  1722   00116C  0E00               	movlw	0
  1723   00116E  6E06               	movwf	___lbdiv@quotient^0,c
  1724   001170  5003               	movf	___lbdiv@divisor^0,w,c
  1725   001172  B4D8               	btfsc	status,2,c
  1726   001174  D015               	goto	l1756
  1727   001176  0E01               	movlw	1
  1728   001178  6E05               	movwf	___lbdiv@counter^0,c
  1729   00117A  D003               	goto	l1744
  1730   00117C                     l1740:
  1731   00117C  90D8               	bcf	status,0,c
  1732   00117E  3603               	rlcf	___lbdiv@divisor^0,f,c
  1733   001180  2A05               	incf	___lbdiv@counter^0,f,c
  1734   001182                     l1744:
  1735   001182  AE03               	btfss	___lbdiv@divisor^0,7,c
  1736   001184  D7FB               	goto	l1740
  1737   001186                     u780:
  1738   001186  90D8               	bcf	status,0,c
  1739   001188  3606               	rlcf	___lbdiv@quotient^0,f,c
  1740   00118A  5003               	movf	___lbdiv@divisor^0,w,c
  1741   00118C  5C04               	subwf	___lbdiv@dividend^0,w,c
  1742   00118E  A0D8               	btfss	status,0,c
  1743   001190  D003               	goto	l1752
  1744   001192  5003               	movf	___lbdiv@divisor^0,w,c
  1745   001194  5E04               	subwf	___lbdiv@dividend^0,f,c
  1746   001196  8006               	bsf	___lbdiv@quotient^0,0,c
  1747   001198                     l1752:
  1748   001198  90D8               	bcf	status,0,c
  1749   00119A  3203               	rrcf	___lbdiv@divisor^0,f,c
  1750   00119C  2E05               	decfsz	___lbdiv@counter^0,f,c
  1751   00119E  D7F3               	goto	u780
  1752   0011A0                     l1756:
  1753   0011A0  5006               	movf	___lbdiv@quotient^0,w,c
  1754   0011A2  0012               	return		;funcret
  1755   0011A4                     __end_of___lbdiv:
  1756                           	callstack 0
  1757                           
  1758 ;; *************** function ___awdiv *****************
  1759 ;; Defined at:
  1760 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  dividend        2    2[COMRAM] int 
  1763 ;;  divisor         2    4[COMRAM] int 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  quotient        2    8[COMRAM] int 
  1766 ;;  sign            1    7[COMRAM] unsigned char 
  1767 ;;  counter         1    6[COMRAM] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  2    2[COMRAM] int 
  1770 ;; Registers used:
  1771 ;;		wreg, status,2, status,0
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1777 ;;      Params:         4       0       0       0       0       0       0       0       0
  1778 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1780 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1781 ;;Total ram usage:        8 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 2
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_TransmitirDatos
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text8
  1792   000F54                     __ptext8:
  1793                           	callstack 0
  1794   000F54                     ___awdiv:
  1795                           	callstack 27
  1796                           
  1797                           ;incstack = 0
  1798   000F54  0E00               	movlw	0
  1799   000F56  6E08               	movwf	___awdiv@sign^0,c
  1800   000F58  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1801   000F5A  D006               	goto	l1698
  1802   000F5C  6C05               	negf	___awdiv@divisor^0,c
  1803   000F5E  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  1804   000F60  B0D8               	btfsc	status,0,c
  1805   000F62  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  1806   000F64  0E01               	movlw	1
  1807   000F66  6E08               	movwf	___awdiv@sign^0,c
  1808   000F68                     l1698:
  1809   000F68  AE04               	btfss	(___awdiv@dividend+1)^0,7,c
  1810   000F6A  D006               	goto	l1704
  1811   000F6C  6C03               	negf	___awdiv@dividend^0,c
  1812   000F6E  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  1813   000F70  B0D8               	btfsc	status,0,c
  1814   000F72  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  1815   000F74  0E01               	movlw	1
  1816   000F76  1A08               	xorwf	___awdiv@sign^0,f,c
  1817   000F78                     l1704:
  1818   000F78  0E00               	movlw	0
  1819   000F7A  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  1820   000F7C  0E00               	movlw	0
  1821   000F7E  6E09               	movwf	___awdiv@quotient^0,c
  1822   000F80  5005               	movf	___awdiv@divisor^0,w,c
  1823   000F82  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  1824   000F84  B4D8               	btfsc	status,2,c
  1825   000F86  D01C               	goto	l1726
  1826   000F88  0E01               	movlw	1
  1827   000F8A  6E07               	movwf	___awdiv@counter^0,c
  1828   000F8C  D004               	goto	l1712
  1829   000F8E                     l1710:
  1830   000F8E  90D8               	bcf	status,0,c
  1831   000F90  3605               	rlcf	___awdiv@divisor^0,f,c
  1832   000F92  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  1833   000F94  2A07               	incf	___awdiv@counter^0,f,c
  1834   000F96                     l1712:
  1835   000F96  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1836   000F98  D7FA               	goto	l1710
  1837   000F9A                     u740:
  1838   000F9A  90D8               	bcf	status,0,c
  1839   000F9C  3609               	rlcf	___awdiv@quotient^0,f,c
  1840   000F9E  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  1841   000FA0  5005               	movf	___awdiv@divisor^0,w,c
  1842   000FA2  5C03               	subwf	___awdiv@dividend^0,w,c
  1843   000FA4  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1844   000FA6  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  1845   000FA8  A0D8               	btfss	status,0,c
  1846   000FAA  D005               	goto	l1722
  1847   000FAC  5005               	movf	___awdiv@divisor^0,w,c
  1848   000FAE  5E03               	subwf	___awdiv@dividend^0,f,c
  1849   000FB0  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1850   000FB2  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  1851   000FB4  8009               	bsf	___awdiv@quotient^0,0,c
  1852   000FB6                     l1722:
  1853   000FB6  90D8               	bcf	status,0,c
  1854   000FB8  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  1855   000FBA  3205               	rrcf	___awdiv@divisor^0,f,c
  1856   000FBC  2E07               	decfsz	___awdiv@counter^0,f,c
  1857   000FBE  D7ED               	goto	u740
  1858   000FC0                     l1726:
  1859   000FC0  5008               	movf	___awdiv@sign^0,w,c
  1860   000FC2  B4D8               	btfsc	status,2,c
  1861   000FC4  D004               	goto	l1730
  1862   000FC6  6C09               	negf	___awdiv@quotient^0,c
  1863   000FC8  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  1864   000FCA  B0D8               	btfsc	status,0,c
  1865   000FCC  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  1866   000FCE                     l1730:
  1867   000FCE  C009  F003         	movff	___awdiv@quotient,?___awdiv
  1868   000FD2  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  1869   000FD6  0012               	return		;funcret
  1870   000FD8                     __end_of___awdiv:
  1871                           	callstack 0
  1872                           
  1873 ;; *************** function _Transmitir *****************
  1874 ;; Defined at:
  1875 ;;		line 159 in file "Lab5.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  BufferT         1    wreg     unsigned char 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  BufferT         1    2[COMRAM] unsigned char 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1889 ;;      Params:         0       0       0       0       0       0       0       0       0
  1890 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1892 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1893 ;;Total ram usage:        1 bytes
  1894 ;; Hardware stack levels used: 1
  1895 ;; Hardware stack levels required when called: 2
  1896 ;; This function calls:
  1897 ;;		Nothing
  1898 ;; This function is called by:
  1899 ;;		_TransmitirDatos
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text9
  1904   001382                     __ptext9:
  1905                           	callstack 0
  1906   001382                     _Transmitir:
  1907                           	callstack 27
  1908                           
  1909                           ;incstack = 0
  1910                           ;Transmitir@BufferT stored from wreg
  1911   001382  6E03               	movwf	Transmitir@BufferT^0,c
  1912   001384                     
  1913                           ;Lab5.c: 160: while (TRMT == 0);
  1914   001384  A2AC               	btfss	4012,1,c	;volatile
  1915   001386  D7FE               	goto	l1164
  1916                           
  1917                           ;Lab5.c: 161: TXREG = BufferT;
  1918   001388  C003  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1919   00138C  0012               	return		;funcret
  1920   00138E                     __end_of_Transmitir:
  1921                           	callstack 0
  1922                           
  1923 ;; *************** function _DireccionaLCD *****************
  1924 ;; Defined at:
  1925 ;;		line 229 in file "LibLCDXC8.h"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  a               1    wreg     unsigned char 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  a               1    6[COMRAM] unsigned char 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1939 ;;      Params:         0       0       0       0       0       0       0       0       0
  1940 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1942 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1943 ;;Total ram usage:        1 bytes
  1944 ;; Hardware stack levels used: 1
  1945 ;; Hardware stack levels required when called: 4
  1946 ;; This function calls:
  1947 ;;		_EnviaDato
  1948 ;;		_HabilitaLCD
  1949 ;;		_RetardoLCD
  1950 ;; This function is called by:
  1951 ;;		_main
  1952 ;;		_TransmitirDatos
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text10
  1957   001312                     __ptext10:
  1958                           	callstack 0
  1959   001312                     _DireccionaLCD:
  1960                           	callstack 25
  1961                           
  1962                           ;incstack = 0
  1963                           ;DireccionaLCD@a stored from wreg
  1964   001312  6E07               	movwf	DireccionaLCD@a^0,c
  1965                           
  1966                           ;LibLCDXC8.h: 232: LATE0=0;
  1967   001314  908D               	bcf	3981,0,c	;volatile
  1968                           
  1969                           ;LibLCDXC8.h: 233: EnviaDato(a);
  1970   001316  5007               	movf	DireccionaLCD@a^0,w,c
  1971   001318  EC71  F008         	call	_EnviaDato
  1972                           
  1973                           ;LibLCDXC8.h: 234: HabilitaLCD();
  1974   00131C  ECBA  F009         	call	_HabilitaLCD	;wreg free
  1975                           
  1976                           ;LibLCDXC8.h: 235: RetardoLCD(4);
  1977   001320  0E04               	movlw	4
  1978   001322  ECEC  F007         	call	_RetardoLCD
  1979   001326  0012               	return		;funcret
  1980   001328                     __end_of_DireccionaLCD:
  1981                           	callstack 0
  1982                           
  1983 ;; *************** function _MensajeLCD_Var *****************
  1984 ;; Defined at:
  1985 ;;		line 217 in file "LibLCDXC8.h"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  a               1    7[COMRAM] PTR unsigned char 
  1988 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  i               2    9[COMRAM] int 
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2000 ;;      Params:         1       0       0       0       0       0       0       0       0
  2001 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2002 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2003 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2004 ;;Total ram usage:        4 bytes
  2005 ;; Hardware stack levels used: 1
  2006 ;; Hardware stack levels required when called: 5
  2007 ;; This function calls:
  2008 ;;		_EscribeLCD_c
  2009 ;;		_strlen
  2010 ;; This function is called by:
  2011 ;;		_main
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text11
  2016   001090                     __ptext11:
  2017                           	callstack 0
  2018   001090                     _MensajeLCD_Var:
  2019                           	callstack 25
  2020                           
  2021                           ;LibLCDXC8.h: 221: for(int i = 0; i<strlen(a); i++){
  2022                           
  2023                           ;incstack = 0
  2024   001090  0E00               	movlw	0
  2025   001092  6E0B               	movwf	(MensajeLCD_Var@i+1)^0,c
  2026   001094  0E00               	movlw	0
  2027   001096  6E0A               	movwf	MensajeLCD_Var@i^0,c
  2028   001098  D019               	goto	l1824
  2029   00109A                     l1816:
  2030                           
  2031                           ;LibLCDXC8.h: 222: if(a[i] == (0)){
  2032   00109A  5008               	movf	MensajeLCD_Var@a^0,w,c
  2033   00109C  240A               	addwf	MensajeLCD_Var@i^0,w,c
  2034   00109E  6E09               	movwf	??_MensajeLCD_Var^0,c
  2035   0010A0  C009  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  2036   0010A4                     	if	1	;There is more than 1 active tblptr byte
  2037   0010A4  0E08               	movlw	high __smallconst
  2038   0010A6  6EF7               	movwf	tblptrh,c
  2039   0010A8                     	endif
  2040   0010A8                     	if	0	;tblptru may be non-zero
  2041   0010A8                     	endif
  2042   0010A8                     	if	0	;tblptru may be non-zero
  2043   0010A8                     	endif
  2044   0010A8  0008               	tblrd		*
  2045   0010AA  50F5               	movf	tablat,w,c
  2046   0010AC  0900               	iorlw	0
  2047   0010AE  B4D8               	btfsc	status,2,c
  2048   0010B0  0012               	return	
  2049                           
  2050                           ;LibLCDXC8.h: 224: };LibLCDXC8.h: 225: EscribeLCD_c(a[i]);
  2051   0010B2  5008               	movf	MensajeLCD_Var@a^0,w,c
  2052   0010B4  240A               	addwf	MensajeLCD_Var@i^0,w,c
  2053   0010B6  6E09               	movwf	??_MensajeLCD_Var^0,c
  2054   0010B8  C009  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  2055   0010BC                     	if	1	;There is more than 1 active tblptr byte
  2056   0010BC  0E08               	movlw	high __smallconst
  2057   0010BE  6EF7               	movwf	tblptrh,c
  2058   0010C0                     	endif
  2059   0010C0                     	if	0	;tblptru may be non-zero
  2060   0010C0                     	endif
  2061   0010C0                     	if	0	;tblptru may be non-zero
  2062   0010C0                     	endif
  2063   0010C0  0008               	tblrd		*
  2064   0010C2  50F5               	movf	tablat,w,c
  2065   0010C4  EC94  F009         	call	_EscribeLCD_c
  2066   0010C8  4A0A               	infsnz	MensajeLCD_Var@i^0,f,c
  2067   0010CA  2A0B               	incf	(MensajeLCD_Var@i+1)^0,f,c
  2068   0010CC                     l1824:
  2069   0010CC  C008  F003         	movff	MensajeLCD_Var@a,strlen@s
  2070   0010D0  EC32  F009         	call	_strlen	;wreg free
  2071   0010D4  5003               	movf	?_strlen^0,w,c
  2072   0010D6  5C0A               	subwf	MensajeLCD_Var@i^0,w,c
  2073   0010D8  5004               	movf	(?_strlen+1)^0,w,c
  2074   0010DA  580B               	subwfb	(MensajeLCD_Var@i+1)^0,w,c
  2075   0010DC  B0D8               	btfsc	status,0,c
  2076   0010DE  0012               	return	
  2077   0010E0  D7DC               	goto	l1816
  2078   0010E2                     __end_of_MensajeLCD_Var:
  2079                           	callstack 0
  2080                           
  2081 ;; *************** function _strlen *****************
  2082 ;; Defined at:
  2083 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  s               1    2[COMRAM] PTR const unsigned char 
  2086 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;  cp              1    4[COMRAM] PTR const unsigned char 
  2089 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  2    2[COMRAM] unsigned int 
  2092 ;; Registers used:
  2093 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2099 ;;      Params:         2       0       0       0       0       0       0       0       0
  2100 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2102 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2103 ;;Total ram usage:        3 bytes
  2104 ;; Hardware stack levels used: 1
  2105 ;; Hardware stack levels required when called: 2
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_MensajeLCD_Var
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           	psect	text12
  2114   001264                     __ptext12:
  2115                           	callstack 0
  2116   001264                     _strlen:
  2117                           	callstack 27
  2118                           
  2119                           ;incstack = 0
  2120   001264  C003  F005         	movff	strlen@s,strlen@cp
  2121   001268  D001               	goto	l1678
  2122   00126A                     l1676:
  2123   00126A  2A05               	incf	strlen@cp^0,f,c
  2124   00126C                     l1678:
  2125   00126C  C005  FFF6         	movff	strlen@cp,tblptrl
  2126   001270                     	if	1	;There is more than 1 active tblptr byte
  2127   001270  0E08               	movlw	high __smallconst
  2128   001272  6EF7               	movwf	tblptrh,c
  2129   001274                     	endif
  2130   001274                     	if	0	;tblptru may be non-zero
  2131   001274                     	endif
  2132   001274                     	if	0	;tblptru may be non-zero
  2133   001274                     	endif
  2134   001274  0008               	tblrd		*
  2135   001276  50F5               	movf	tablat,w,c
  2136   001278  0900               	iorlw	0
  2137   00127A  A4D8               	btfss	status,2,c
  2138   00127C  D7F6               	goto	l1676
  2139   00127E  5003               	movf	strlen@s^0,w,c
  2140   001280  5C05               	subwf	strlen@cp^0,w,c
  2141   001282  6E03               	movwf	?_strlen^0,c
  2142   001284  6A04               	clrf	(?_strlen+1)^0,c
  2143   001286  BE03               	btfsc	?_strlen^0,7,c
  2144   001288  0604               	decf	(?_strlen+1)^0,f,c
  2145   00128A  0012               	return		;funcret
  2146   00128C                     __end_of_strlen:
  2147                           	callstack 0
  2148                           
  2149 ;; *************** function _EscribeLCD_c *****************
  2150 ;; Defined at:
  2151 ;;		line 119 in file "LibLCDXC8.h"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  a               1    wreg     unsigned char 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  a               1    6[COMRAM] unsigned char 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2165 ;;      Params:         0       0       0       0       0       0       0       0       0
  2166 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2167 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2168 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2169 ;;Total ram usage:        1 bytes
  2170 ;; Hardware stack levels used: 1
  2171 ;; Hardware stack levels required when called: 4
  2172 ;; This function calls:
  2173 ;;		_EnviaDato
  2174 ;;		_HabilitaLCD
  2175 ;;		_RetardoLCD
  2176 ;; This function is called by:
  2177 ;;		_MensajeLCD_Var
  2178 ;;		_main
  2179 ;;		_TransmitirDatos
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text13
  2184   001328                     __ptext13:
  2185                           	callstack 0
  2186   001328                     _EscribeLCD_c:
  2187                           	callstack 25
  2188                           
  2189                           ;incstack = 0
  2190                           ;EscribeLCD_c@a stored from wreg
  2191   001328  6E07               	movwf	EscribeLCD_c@a^0,c
  2192                           
  2193                           ;LibLCDXC8.h: 123: LATE0=1;
  2194   00132A  808D               	bsf	3981,0,c	;volatile
  2195                           
  2196                           ;LibLCDXC8.h: 124: EnviaDato(a);
  2197   00132C  5007               	movf	EscribeLCD_c@a^0,w,c
  2198   00132E  EC71  F008         	call	_EnviaDato
  2199                           
  2200                           ;LibLCDXC8.h: 125: HabilitaLCD();
  2201   001332  ECBA  F009         	call	_HabilitaLCD	;wreg free
  2202                           
  2203                           ;LibLCDXC8.h: 126: RetardoLCD(4);
  2204   001336  0E04               	movlw	4
  2205   001338  ECEC  F007         	call	_RetardoLCD
  2206   00133C  0012               	return		;funcret
  2207   00133E                     __end_of_EscribeLCD_c:
  2208                           	callstack 0
  2209                           
  2210 ;; *************** function _LeerHT11 *****************
  2211 ;; Defined at:
  2212 ;;		line 121 in file "Lab5.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, status,2, status,0, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2226 ;;      Params:         0       0       0       0       0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2228 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2229 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2230 ;;Total ram usage:        1 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 4
  2233 ;; This function calls:
  2234 ;;		_LeerByte
  2235 ;; This function is called by:
  2236 ;;		_main
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text14
  2241   0011A4                     __ptext14:
  2242                           	callstack 0
  2243   0011A4                     _LeerHT11:
  2244                           	callstack 26
  2245                           
  2246                           ;Lab5.c: 123: TRISC2 = 0;
  2247                           
  2248                           ;incstack = 0
  2249   0011A4  9494               	bcf	3988,2,c	;volatile
  2250                           
  2251                           ;Lab5.c: 124: _delay((unsigned long)((18)*(8000000/4000.0)));
  2252   0011A6  0E2F               	movlw	47
  2253   0011A8  6E07               	movwf	??_LeerHT11^0,c
  2254   0011AA  0EC0               	movlw	192
  2255   0011AC                     u1307:
  2256   0011AC  2EE8               	decfsz	wreg,f,c
  2257   0011AE  D7FE               	bra	u1307
  2258   0011B0  2E07               	decfsz	??_LeerHT11^0,f,c
  2259   0011B2  D7FC               	bra	u1307
  2260                           
  2261                           ;Lab5.c: 125: TRISC2 = 1;
  2262   0011B4  8494               	bsf	3988,2,c	;volatile
  2263   0011B6                     l213:
  2264   0011B6  B482               	btfsc	3970,2,c	;volatile
  2265   0011B8  D7FE               	goto	l213
  2266                           
  2267                           ;Lab5.c: 128: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2268   0011BA  0E50               	movlw	80
  2269   0011BC                     u1317:
  2270   0011BC  2EE8               	decfsz	wreg,f,c
  2271   0011BE  D7FE               	bra	u1317
  2272   0011C0                     l216:
  2273   0011C0  B482               	btfsc	3970,2,c	;volatile
  2274   0011C2  D7FE               	goto	l216
  2275                           
  2276                           ;Lab5.c: 131: Hum = LeerByte();
  2277   0011C4  EC6C  F009         	call	_LeerByte	;wreg free
  2278   0011C8  6E1E               	movwf	_Hum^0,c
  2279                           
  2280                           ;Lab5.c: 132: LeerByte();
  2281   0011CA  EC6C  F009         	call	_LeerByte	;wreg free
  2282                           
  2283                           ;Lab5.c: 133: Temp = LeerByte();
  2284   0011CE  EC6C  F009         	call	_LeerByte	;wreg free
  2285   0011D2  6E1F               	movwf	_Temp^0,c
  2286                           
  2287                           ;Lab5.c: 134: LeerByte();
  2288   0011D4  EC6C  F009         	call	_LeerByte	;wreg free
  2289                           
  2290                           ;Lab5.c: 135: LeerByte();
  2291   0011D8  EC6C  F009         	call	_LeerByte	;wreg free
  2292   0011DC  0012               	return		;funcret
  2293   0011DE                     __end_of_LeerHT11:
  2294                           	callstack 0
  2295                           
  2296 ;; *************** function _LeerByte *****************
  2297 ;; Defined at:
  2298 ;;		line 138 in file "Lab5.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;		None
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  i               1    5[COMRAM] unsigned char 
  2303 ;;  res             1    4[COMRAM] unsigned char 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  1    wreg      unsigned char 
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, status,0, cstack
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2313 ;;      Params:         0       0       0       0       0       0       0       0       0
  2314 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2315 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2316 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2317 ;;Total ram usage:        3 bytes
  2318 ;; Hardware stack levels used: 1
  2319 ;; Hardware stack levels required when called: 3
  2320 ;; This function calls:
  2321 ;;		_LeerBit
  2322 ;; This function is called by:
  2323 ;;		_LeerHT11
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text15
  2328   0012D8                     __ptext15:
  2329                           	callstack 0
  2330   0012D8                     _LeerByte:
  2331                           	callstack 26
  2332                           
  2333                           ;Lab5.c: 139: unsigned char res = 0, i;
  2334                           
  2335                           ;incstack = 0
  2336   0012D8  0E00               	movlw	0
  2337   0012DA  6E05               	movwf	LeerByte@res^0,c
  2338                           
  2339                           ;Lab5.c: 140: for (i = 8; i > 0; i--) {
  2340   0012DC  0E08               	movlw	8
  2341   0012DE  6E06               	movwf	LeerByte@i^0,c
  2342   0012E0                     l1154:
  2343                           
  2344                           ;Lab5.c: 141: res = (res << 1) | LeerBit();
  2345   0012E0  ECEF  F008         	call	_LeerBit	;wreg free
  2346   0012E4  6E04               	movwf	??_LeerByte^0,c
  2347   0012E6  5005               	movf	LeerByte@res^0,w,c
  2348   0012E8  2405               	addwf	LeerByte@res^0,w,c
  2349   0012EA  1004               	iorwf	??_LeerByte^0,w,c
  2350   0012EC  6E05               	movwf	LeerByte@res^0,c
  2351   0012EE  0606               	decf	LeerByte@i^0,f,c
  2352   0012F0  5006               	movf	LeerByte@i^0,w,c
  2353   0012F2  A4D8               	btfss	status,2,c
  2354   0012F4  D7F5               	goto	l1154
  2355                           
  2356                           ;Lab5.c: 142: };Lab5.c: 143: return res;
  2357   0012F6  5005               	movf	LeerByte@res^0,w,c
  2358   0012F8  0012               	return		;funcret
  2359   0012FA                     __end_of_LeerByte:
  2360                           	callstack 0
  2361                           
  2362 ;; *************** function _LeerBit *****************
  2363 ;; Defined at:
  2364 ;;		line 146 in file "Lab5.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;		None
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  res             1    2[COMRAM] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      unsigned char 
  2371 ;; Registers used:
  2372 ;;		wreg, status,2
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2378 ;;      Params:         0       0       0       0       0       0       0       0       0
  2379 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2380 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2381 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2382 ;;Total ram usage:        1 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; Hardware stack levels required when called: 2
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_LeerByte
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text16
  2393   0011DE                     __ptext16:
  2394                           	callstack 0
  2395   0011DE                     _LeerBit:
  2396                           	callstack 26
  2397                           
  2398                           ;Lab5.c: 147: unsigned char res = 0;
  2399                           
  2400                           ;incstack = 0
  2401   0011DE  0E00               	movlw	0
  2402   0011E0  6E03               	movwf	LeerBit@res^0,c
  2403   0011E2                     l227:
  2404   0011E2  A482               	btfss	3970,2,c	;volatile
  2405   0011E4  D7FE               	goto	l227
  2406                           
  2407                           ;Lab5.c: 149: _delay((unsigned long)((13)*(8000000/4000000.0)));
  2408   0011E6  0E08               	movlw	8
  2409   0011E8                     u1327:
  2410   0011E8  2EE8               	decfsz	wreg,f,c
  2411   0011EA  D7FE               	bra	u1327
  2412   0011EC  D000               	nop2	
  2413                           
  2414                           ;Lab5.c: 150: if (RC2 == 1) res = 0;
  2415   0011EE  A482               	btfss	3970,2,c	;volatile
  2416   0011F0  D002               	goto	l1106
  2417   0011F2  0E00               	movlw	0
  2418   0011F4  6E03               	movwf	LeerBit@res^0,c
  2419   0011F6                     l1106:
  2420                           
  2421                           ;Lab5.c: 151: _delay((unsigned long)((22)*(8000000/4000000.0)));
  2422   0011F6  0E0E               	movlw	14
  2423   0011F8                     u1337:
  2424   0011F8  2EE8               	decfsz	wreg,f,c
  2425   0011FA  D7FE               	bra	u1337
  2426   0011FC  D000               	nop2	
  2427                           
  2428                           ;Lab5.c: 152: if (RC2 == 1) {
  2429   0011FE  A482               	btfss	3970,2,c	;volatile
  2430   001200  D004               	goto	u60
  2431                           
  2432                           ;Lab5.c: 153: res = 1;
  2433   001202  0E01               	movlw	1
  2434   001204  6E03               	movwf	LeerBit@res^0,c
  2435   001206                     l232:
  2436   001206  B482               	btfsc	3970,2,c	;volatile
  2437   001208  D7FE               	goto	l232
  2438   00120A                     u60:
  2439                           
  2440                           ;Lab5.c: 155: };Lab5.c: 156: return res;
  2441   00120A  5003               	movf	LeerBit@res^0,w,c
  2442   00120C  0012               	return		;funcret
  2443   00120E                     __end_of_LeerBit:
  2444                           	callstack 0
  2445                           
  2446 ;; *************** function _InicializaLCD *****************
  2447 ;; Defined at:
  2448 ;;		line 64 in file "LibLCDXC8.h"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;		None
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, status,0, cstack
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2462 ;;      Params:         0       0       0       0       0       0       0       0       0
  2463 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2464 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2465 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2466 ;;Total ram usage:        0 bytes
  2467 ;; Hardware stack levels used: 1
  2468 ;; Hardware stack levels required when called: 5
  2469 ;; This function calls:
  2470 ;;		_BorraLCD
  2471 ;;		_EnviaDato
  2472 ;;		_HabilitaLCD
  2473 ;;		_RetardoLCD
  2474 ;; This function is called by:
  2475 ;;		_main
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text17
  2480   000E2E                     __ptext17:
  2481                           	callstack 0
  2482   000E2E                     _InicializaLCD:
  2483                           	callstack 25
  2484                           
  2485                           ;LibLCDXC8.h: 66: LATE0=0;
  2486                           
  2487                           ;incstack = 0
  2488   000E2E  908D               	bcf	3981,0,c	;volatile
  2489                           
  2490                           ;LibLCDXC8.h: 67: if(interfaz==4)
  2491   000E30  0E04               	movlw	4
  2492   000E32  1820               	xorwf	_interfaz^0,w,c
  2493   000E34  A4D8               	btfss	status,2,c
  2494   000E36  D004               	goto	l1308
  2495                           
  2496                           ;LibLCDXC8.h: 68: LATD=(LATD & 0b00001111) | 0x30;
  2497   000E38  508C               	movf	140,w,c	;volatile
  2498   000E3A  0B0F               	andlw	15
  2499   000E3C  0930               	iorlw	48
  2500   000E3E  D001               	goto	L4
  2501   000E40                     l1308:
  2502                           
  2503                           ;LibLCDXC8.h: 69: else;LibLCDXC8.h: 70: LATD=0x3F;
  2504   000E40  0E3F               	movlw	63
  2505   000E42                     L4:
  2506   000E42  6E8C               	movwf	140,c	;volatile
  2507                           
  2508                           ;LibLCDXC8.h: 71: HabilitaLCD();
  2509   000E44  ECBA  F009         	call	_HabilitaLCD	;wreg free
  2510                           
  2511                           ;LibLCDXC8.h: 72: RetardoLCD(1);
  2512   000E48  0E01               	movlw	1
  2513   000E4A  ECEC  F007         	call	_RetardoLCD
  2514                           
  2515                           ;LibLCDXC8.h: 73: if(interfaz==4)
  2516   000E4E  0E04               	movlw	4
  2517   000E50  1820               	xorwf	_interfaz^0,w,c
  2518   000E52  A4D8               	btfss	status,2,c
  2519   000E54  D004               	goto	l1318
  2520                           
  2521                           ;LibLCDXC8.h: 74: LATD=(LATD & 0b00001111) | 0x30;
  2522   000E56  508C               	movf	140,w,c	;volatile
  2523   000E58  0B0F               	andlw	15
  2524   000E5A  0930               	iorlw	48
  2525   000E5C  D001               	goto	L5
  2526   000E5E                     l1318:
  2527                           
  2528                           ;LibLCDXC8.h: 75: else;LibLCDXC8.h: 76: LATD=0x3F;
  2529   000E5E  0E3F               	movlw	63
  2530   000E60                     L5:
  2531   000E60  6E8C               	movwf	140,c	;volatile
  2532                           
  2533                           ;LibLCDXC8.h: 77: HabilitaLCD();
  2534   000E62  ECBA  F009         	call	_HabilitaLCD	;wreg free
  2535                           
  2536                           ;LibLCDXC8.h: 78: RetardoLCD(3);
  2537   000E66  0E03               	movlw	3
  2538   000E68  ECEC  F007         	call	_RetardoLCD
  2539                           
  2540                           ;LibLCDXC8.h: 79: if(interfaz==4)
  2541   000E6C  0E04               	movlw	4
  2542   000E6E  1820               	xorwf	_interfaz^0,w,c
  2543   000E70  A4D8               	btfss	status,2,c
  2544   000E72  D004               	goto	l1328
  2545                           
  2546                           ;LibLCDXC8.h: 80: LATD=(LATD & 0b00001111) | 0x30;
  2547   000E74  508C               	movf	140,w,c	;volatile
  2548   000E76  0B0F               	andlw	15
  2549   000E78  0930               	iorlw	48
  2550   000E7A  D001               	goto	L6
  2551   000E7C                     l1328:
  2552                           
  2553                           ;LibLCDXC8.h: 81: else;LibLCDXC8.h: 82: LATD=0x3F;
  2554   000E7C  0E3F               	movlw	63
  2555   000E7E                     L6:
  2556   000E7E  6E8C               	movwf	140,c	;volatile
  2557                           
  2558                           ;LibLCDXC8.h: 83: HabilitaLCD();
  2559   000E80  ECBA  F009         	call	_HabilitaLCD	;wreg free
  2560                           
  2561                           ;LibLCDXC8.h: 84: RetardoLCD(4);
  2562   000E84  0E04               	movlw	4
  2563   000E86  ECEC  F007         	call	_RetardoLCD
  2564                           
  2565                           ;LibLCDXC8.h: 85: if(interfaz==4){
  2566   000E8A  0E04               	movlw	4
  2567   000E8C  1820               	xorwf	_interfaz^0,w,c
  2568   000E8E  A4D8               	btfss	status,2,c
  2569   000E90  D011               	goto	l1348
  2570                           
  2571                           ;LibLCDXC8.h: 86: LATD=(LATD & 0b00001111) | 0x20;
  2572   000E92  508C               	movf	140,w,c	;volatile
  2573   000E94  0B0F               	andlw	15
  2574   000E96  0920               	iorlw	32
  2575   000E98  6E8C               	movwf	140,c	;volatile
  2576                           
  2577                           ;LibLCDXC8.h: 87: HabilitaLCD();
  2578   000E9A  ECBA  F009         	call	_HabilitaLCD	;wreg free
  2579                           
  2580                           ;LibLCDXC8.h: 88: RetardoLCD(4);
  2581   000E9E  0E04               	movlw	4
  2582   000EA0  ECEC  F007         	call	_RetardoLCD
  2583                           
  2584                           ;LibLCDXC8.h: 89: EnviaDato(0x2F);
  2585   000EA4  0E2F               	movlw	47
  2586   000EA6  EC71  F008         	call	_EnviaDato
  2587                           
  2588                           ;LibLCDXC8.h: 90: HabilitaLCD();
  2589   000EAA  ECBA  F009         	call	_HabilitaLCD	;wreg free
  2590                           
  2591                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  2592   000EAE  0E04               	movlw	4
  2593   000EB0  ECEC  F007         	call	_RetardoLCD
  2594   000EB4                     l1348:
  2595                           
  2596                           ;LibLCDXC8.h: 92: };LibLCDXC8.h: 93: BorraLCD();
  2597   000EB4  EC9F  F009         	call	_BorraLCD	;wreg free
  2598                           
  2599                           ;LibLCDXC8.h: 94: EnviaDato(0xF);
  2600   000EB8  0E0F               	movlw	15
  2601   000EBA  EC71  F008         	call	_EnviaDato
  2602                           
  2603                           ;LibLCDXC8.h: 95: HabilitaLCD();
  2604   000EBE  ECBA  F009         	call	_HabilitaLCD	;wreg free
  2605                           
  2606                           ;LibLCDXC8.h: 96: RetardoLCD(4);
  2607   000EC2  0E04               	movlw	4
  2608   000EC4  ECEC  F007         	call	_RetardoLCD
  2609   000EC8  0012               	return		;funcret
  2610   000ECA                     __end_of_InicializaLCD:
  2611                           	callstack 0
  2612                           
  2613 ;; *************** function _BorraLCD *****************
  2614 ;; Defined at:
  2615 ;;		line 105 in file "LibLCDXC8.h"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;		None
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2629 ;;      Params:         0       0       0       0       0       0       0       0       0
  2630 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2632 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2633 ;;Total ram usage:        0 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 4
  2636 ;; This function calls:
  2637 ;;		_EnviaDato
  2638 ;;		_HabilitaLCD
  2639 ;;		_RetardoLCD
  2640 ;; This function is called by:
  2641 ;;		_InicializaLCD
  2642 ;;		_main
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text18
  2647   00133E                     __ptext18:
  2648                           	callstack 0
  2649   00133E                     _BorraLCD:
  2650                           	callstack 25
  2651                           
  2652                           ;LibLCDXC8.h: 107: LATE0=0;
  2653                           
  2654                           ;incstack = 0
  2655   00133E  908D               	bcf	3981,0,c	;volatile
  2656                           
  2657                           ;LibLCDXC8.h: 108: EnviaDato(0x01);
  2658   001340  0E01               	movlw	1
  2659   001342  EC71  F008         	call	_EnviaDato
  2660                           
  2661                           ;LibLCDXC8.h: 109: HabilitaLCD();
  2662   001346  ECBA  F009         	call	_HabilitaLCD	;wreg free
  2663                           
  2664                           ;LibLCDXC8.h: 110: RetardoLCD(2);
  2665   00134A  0E02               	movlw	2
  2666   00134C  ECEC  F007         	call	_RetardoLCD
  2667   001350  0012               	return		;funcret
  2668   001352                     __end_of_BorraLCD:
  2669                           	callstack 0
  2670                           
  2671 ;; *************** function _EnviaDato *****************
  2672 ;; Defined at:
  2673 ;;		line 54 in file "LibLCDXC8.h"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  a               1    wreg     unsigned char 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  a               1    5[COMRAM] unsigned char 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      void 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2687 ;;      Params:         0       0       0       0       0       0       0       0       0
  2688 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2689 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2690 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2691 ;;Total ram usage:        2 bytes
  2692 ;; Hardware stack levels used: 1
  2693 ;; Hardware stack levels required when called: 3
  2694 ;; This function calls:
  2695 ;;		_HabilitaLCD
  2696 ;;		_RetardoLCD
  2697 ;; This function is called by:
  2698 ;;		_InicializaLCD
  2699 ;;		_BorraLCD
  2700 ;;		_EscribeLCD_c
  2701 ;;		_DireccionaLCD
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text19
  2706   0010E2                     __ptext19:
  2707                           	callstack 0
  2708   0010E2                     _EnviaDato:
  2709                           	callstack 25
  2710                           
  2711                           ;incstack = 0
  2712                           ;EnviaDato@a stored from wreg
  2713   0010E2  6E06               	movwf	EnviaDato@a^0,c
  2714                           
  2715                           ;LibLCDXC8.h: 55: if(interfaz==4){
  2716   0010E4  0E04               	movlw	4
  2717   0010E6  1820               	xorwf	_interfaz^0,w,c
  2718   0010E8  A4D8               	btfss	status,2,c
  2719   0010EA  D017               	goto	l1094
  2720                           
  2721                           ;LibLCDXC8.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2722   0010EC  C006  F005         	movff	EnviaDato@a,??_EnviaDato
  2723   0010F0  0EF0               	movlw	240
  2724   0010F2  1605               	andwf	??_EnviaDato^0,f,c
  2725   0010F4  508C               	movf	140,w,c	;volatile
  2726   0010F6  0B0F               	andlw	15
  2727   0010F8  1005               	iorwf	??_EnviaDato^0,w,c
  2728   0010FA  6E8C               	movwf	140,c	;volatile
  2729                           
  2730                           ;LibLCDXC8.h: 57: HabilitaLCD();
  2731   0010FC  ECBA  F009         	call	_HabilitaLCD	;wreg free
  2732                           
  2733                           ;LibLCDXC8.h: 58: RetardoLCD(1);
  2734   001100  0E01               	movlw	1
  2735   001102  ECEC  F007         	call	_RetardoLCD
  2736                           
  2737                           ;LibLCDXC8.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  2738   001106  C006  F005         	movff	EnviaDato@a,??_EnviaDato
  2739   00110A  3A05               	swapf	??_EnviaDato^0,f,c
  2740   00110C  0EF0               	movlw	240
  2741   00110E  1605               	andwf	??_EnviaDato^0,f,c
  2742   001110  508C               	movf	140,w,c	;volatile
  2743   001112  0B0F               	andlw	15
  2744   001114  1005               	iorwf	??_EnviaDato^0,w,c
  2745   001116  6E8C               	movwf	140,c	;volatile
  2746                           
  2747                           ;LibLCDXC8.h: 60: }else if(interfaz==8){
  2748   001118  0012               	return	
  2749   00111A                     l1094:
  2750   00111A  0E08               	movlw	8
  2751   00111C  1820               	xorwf	_interfaz^0,w,c
  2752   00111E  A4D8               	btfss	status,2,c
  2753   001120  0012               	return	
  2754                           
  2755                           ;LibLCDXC8.h: 61: LATD=a;
  2756   001122  C006  FF8C         	movff	EnviaDato@a,3980	;volatile
  2757   001126  0012               	return		;funcret
  2758   001128                     __end_of_EnviaDato:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _RetardoLCD *****************
  2762 ;; Defined at:
  2763 ;;		line 265 in file "LibLCDXC8.h"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  a               1    wreg     unsigned char 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  a               1    3[COMRAM] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2777 ;;      Params:         0       0       0       0       0       0       0       0       0
  2778 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2779 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2780 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2781 ;;Total ram usage:        2 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; Hardware stack levels required when called: 2
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_EnviaDato
  2788 ;;		_InicializaLCD
  2789 ;;		_BorraLCD
  2790 ;;		_EscribeLCD_c
  2791 ;;		_DireccionaLCD
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text20
  2796   000FD8                     __ptext20:
  2797                           	callstack 0
  2798   000FD8                     _RetardoLCD:
  2799                           	callstack 26
  2800                           
  2801                           ;incstack = 0
  2802                           ;RetardoLCD@a stored from wreg
  2803   000FD8  6E04               	movwf	RetardoLCD@a^0,c
  2804                           
  2805                           ;LibLCDXC8.h: 266: switch(a){
  2806   000FDA  D023               	goto	l1082
  2807   000FDC                     l1072:
  2808   000FDC  0E62               	movlw	98
  2809   000FDE  6E03               	movwf	??_RetardoLCD^0,c
  2810   000FE0  0E66               	movlw	102
  2811   000FE2                     u1347:
  2812   000FE2  2EE8               	decfsz	wreg,f,c
  2813   000FE4  D7FE               	bra	u1347
  2814   000FE6  2E03               	decfsz	??_RetardoLCD^0,f,c
  2815   000FE8  D7FC               	bra	u1347
  2816                           
  2817                           ;LibLCDXC8.h: 269: break;
  2818   000FEA  0012               	return	
  2819   000FEC                     l1074:
  2820   000FEC  0E07               	movlw	7
  2821   000FEE  6E03               	movwf	??_RetardoLCD^0,c
  2822   000FF0  0E7D               	movlw	125
  2823   000FF2                     u1357:
  2824   000FF2  2EE8               	decfsz	wreg,f,c
  2825   000FF4  D7FE               	bra	u1357
  2826   000FF6  2E03               	decfsz	??_RetardoLCD^0,f,c
  2827   000FF8  D7FC               	bra	u1357
  2828   000FFA  F000               	nop	
  2829                           
  2830                           ;LibLCDXC8.h: 271: _delay((unsigned long)((640)*(20000000/4000000.0)));
  2831   000FFC  0E05               	movlw	5
  2832   000FFE  6E03               	movwf	??_RetardoLCD^0,c
  2833   001000  0E26               	movlw	38
  2834   001002                     u1367:
  2835   001002  2EE8               	decfsz	wreg,f,c
  2836   001004  D7FE               	bra	u1367
  2837   001006  2E03               	decfsz	??_RetardoLCD^0,f,c
  2838   001008  D7FC               	bra	u1367
  2839   00100A  D000               	nop2	
  2840                           
  2841                           ;LibLCDXC8.h: 273: break;
  2842   00100C  0012               	return	
  2843   00100E                     l1076:
  2844   00100E  0EA6               	movlw	166
  2845   001010                     u1377:
  2846   001010  2EE8               	decfsz	wreg,f,c
  2847   001012  D7FE               	bra	u1377
  2848   001014  D000               	nop2	
  2849                           
  2850                           ;LibLCDXC8.h: 276: break;
  2851   001016  0012               	return	
  2852   001018                     l1078:
  2853   001018  0E42               	movlw	66
  2854   00101A                     u1387:
  2855   00101A  2EE8               	decfsz	wreg,f,c
  2856   00101C  D7FE               	bra	u1387
  2857   00101E  D000               	nop2	
  2858                           
  2859                           ;LibLCDXC8.h: 279: break;
  2860   001020  0012               	return	
  2861   001022                     l1082:
  2862   001022  5004               	movf	RetardoLCD@a^0,w,c
  2863                           
  2864                           ; Switch size 1, requested type "simple"
  2865                           ; Number of cases is 4, Range of values is 1 to 4
  2866                           ; switch strategies available:
  2867                           ; Name         Instructions Cycles
  2868                           ; simple_byte           13     7 (average)
  2869                           ;	Chosen strategy is simple_byte
  2870   001024  0A01               	xorlw	1	; case 1
  2871   001026  B4D8               	btfsc	status,2,c
  2872   001028  D7D9               	goto	l1072
  2873   00102A  0A03               	xorlw	3	; case 2
  2874   00102C  B4D8               	btfsc	status,2,c
  2875   00102E  D7DE               	goto	l1074
  2876   001030  0A01               	xorlw	1	; case 3
  2877   001032  B4D8               	btfsc	status,2,c
  2878   001034  D7EC               	goto	l1076
  2879   001036  0A07               	xorlw	7	; case 4
  2880   001038  A4D8               	btfss	status,2,c
  2881   00103A  0012               	return	
  2882   00103C  D7ED               	goto	l1078
  2883   00103E                     __end_of_RetardoLCD:
  2884                           	callstack 0
  2885                           
  2886 ;; *************** function _HabilitaLCD *****************
  2887 ;; Defined at:
  2888 ;;		line 98 in file "LibLCDXC8.h"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      void 
  2895 ;; Registers used:
  2896 ;;		wreg
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2902 ;;      Params:         0       0       0       0       0       0       0       0       0
  2903 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2905 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2906 ;;Total ram usage:        0 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; Hardware stack levels required when called: 2
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_EnviaDato
  2913 ;;		_InicializaLCD
  2914 ;;		_BorraLCD
  2915 ;;		_EscribeLCD_c
  2916 ;;		_DireccionaLCD
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text21
  2921   001374                     __ptext21:
  2922                           	callstack 0
  2923   001374                     _HabilitaLCD:
  2924                           	callstack 26
  2925                           
  2926                           ;LibLCDXC8.h: 100: LATE1=1;
  2927                           
  2928                           ;incstack = 0
  2929   001374  828D               	bsf	3981,1,c	;volatile
  2930                           
  2931                           ;LibLCDXC8.h: 101: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2932   001376  0E42               	movlw	66
  2933   001378                     u1397:
  2934   001378  2EE8               	decfsz	wreg,f,c
  2935   00137A  D7FE               	bra	u1397
  2936   00137C  D000               	nop2	
  2937                           
  2938                           ;LibLCDXC8.h: 103: LATE1=0;
  2939   00137E  928D               	bcf	3981,1,c	;volatile
  2940   001380  0012               	return		;funcret
  2941   001382                     __end_of_HabilitaLCD:
  2942                           	callstack 0
  2943                           
  2944 ;; *************** function _GuardarDatoEnEEPROM *****************
  2945 ;; Defined at:
  2946 ;;		line 276 in file "Lab5.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  dir             2    2[COMRAM] unsigned int 
  2949 ;;  dato            1    4[COMRAM] unsigned char 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      void 
  2954 ;; Registers used:
  2955 ;;		wreg, status,2
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2961 ;;      Params:         3       0       0       0       0       0       0       0       0
  2962 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2964 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2965 ;;Total ram usage:        3 bytes
  2966 ;; Hardware stack levels used: 1
  2967 ;; Hardware stack levels required when called: 2
  2968 ;; This function calls:
  2969 ;;		Nothing
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text22
  2976   0012B2                     __ptext22:
  2977                           	callstack 0
  2978   0012B2                     _GuardarDatoEnEEPROM:
  2979                           	callstack 28
  2980                           
  2981                           ;Lab5.c: 277: EEADR = dir;
  2982                           
  2983                           ;incstack = 0
  2984   0012B2  C003  FFA9         	movff	GuardarDatoEnEEPROM@dir,4009	;volatile
  2985                           
  2986                           ;Lab5.c: 278: EEDATA = dato;
  2987   0012B6  C005  FFA8         	movff	GuardarDatoEnEEPROM@dato,4008	;volatile
  2988                           
  2989                           ;Lab5.c: 280: EEPGD = 0;
  2990   0012BA  9EA6               	bcf	4006,7,c	;volsfr
  2991                           
  2992                           ;Lab5.c: 281: CFGS = 0;
  2993   0012BC  9CA6               	bcf	4006,6,c	;volsfr
  2994                           
  2995                           ;Lab5.c: 282: WREN = 1;
  2996   0012BE  84A6               	bsf	4006,2,c	;volsfr
  2997                           
  2998                           ;Lab5.c: 284: GIE = 0;
  2999   0012C0  9EF2               	bcf	4082,7,c	;volatile
  3000                           
  3001                           ;Lab5.c: 286: EECON2 = 0x55;
  3002   0012C2  0E55               	movlw	85
  3003   0012C4  6EA7               	movwf	167,c	;volsfr
  3004                           
  3005                           ;Lab5.c: 287: EECON2 = 0xAA;
  3006   0012C6  0EAA               	movlw	170
  3007   0012C8  6EA7               	movwf	167,c	;volsfr
  3008                           
  3009                           ;Lab5.c: 288: WR = 1;
  3010   0012CA  82A6               	bsf	4006,1,c	;volsfr
  3011                           
  3012                           ;Lab5.c: 289: GIE = 1;
  3013   0012CC  8EF2               	bsf	4082,7,c	;volatile
  3014   0012CE                     l290:
  3015   0012CE  A8A1               	btfss	4001,4,c	;volatile
  3016   0012D0  D7FE               	goto	l290
  3017                           
  3018                           ;Lab5.c: 291: EEIF = 0;
  3019   0012D2  98A1               	bcf	4001,4,c	;volatile
  3020                           
  3021                           ;Lab5.c: 292: WREN = 0;
  3022   0012D4  94A6               	bcf	4006,2,c	;volsfr
  3023   0012D6  0012               	return		;funcret
  3024   0012D8                     __end_of_GuardarDatoEnEEPROM:
  3025                           	callstack 0
  3026                           
  3027 ;; *************** function _Conversion *****************
  3028 ;; Defined at:
  3029 ;;		line 269 in file "Lab5.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  canal           1    wreg     unsigned char 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  canal           1    2[COMRAM] unsigned char 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  2   80[None  ] unsigned int 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3043 ;;      Params:         0       0       0       0       0       0       0       0       0
  3044 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3046 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3047 ;;Total ram usage:        1 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 2
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_main
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text23
  3058   001352                     __ptext23:
  3059                           	callstack 0
  3060   001352                     _Conversion:
  3061                           	callstack 28
  3062                           
  3063                           ;incstack = 0
  3064                           ;Conversion@canal stored from wreg
  3065   001352  6E03               	movwf	Conversion@canal^0,c
  3066                           
  3067                           ;Lab5.c: 270: ADCON0 = 0b00000001 | (canal << 2);
  3068   001354  4403               	rlncf	Conversion@canal^0,w,c
  3069   001356  46E8               	rlncf	wreg,f,c
  3070   001358  0BFC               	andlw	252
  3071   00135A  0901               	iorlw	1
  3072   00135C  6EC2               	movwf	194,c	;volatile
  3073                           
  3074                           ;Lab5.c: 271: GO = 1;
  3075   00135E  82C2               	bsf	4034,1,c	;volatile
  3076   001360                     l284:
  3077   001360  A2C2               	btfss	4034,1,c	;volatile
  3078   001362  0012               	return	
  3079   001364  D7FD               	goto	l284
  3080   001366                     __end_of_Conversion:
  3081                           	callstack 0
  3082                           
  3083 ;; *************** function _ConfiguraLCD *****************
  3084 ;; Defined at:
  3085 ;;		line 50 in file "LibLCDXC8.h"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  a               1    wreg     unsigned char 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  a               1    2[COMRAM] unsigned char 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, status,0
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3099 ;;      Params:         0       0       0       0       0       0       0       0       0
  3100 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3102 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3103 ;;Total ram usage:        1 bytes
  3104 ;; Hardware stack levels used: 1
  3105 ;; Hardware stack levels required when called: 2
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_main
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text24
  3114   0012FA                     __ptext24:
  3115                           	callstack 0
  3116   0012FA                     _ConfiguraLCD:
  3117                           	callstack 28
  3118                           
  3119                           ;incstack = 0
  3120                           ;ConfiguraLCD@a stored from wreg
  3121   0012FA  6E03               	movwf	ConfiguraLCD@a^0,c
  3122                           
  3123                           ;LibLCDXC8.h: 51: if(a==4 | a ==8)
  3124   0012FC  0E04               	movlw	4
  3125   0012FE  1803               	xorwf	ConfiguraLCD@a^0,w,c
  3126   001300  B4D8               	btfsc	status,2,c
  3127   001302  D004               	goto	u270
  3128   001304  0E08               	movlw	8
  3129   001306  1803               	xorwf	ConfiguraLCD@a^0,w,c
  3130   001308  A4D8               	btfss	status,2,c
  3131   00130A  0012               	return	
  3132   00130C                     u270:
  3133                           
  3134                           ;LibLCDXC8.h: 52: interfaz=a;
  3135   00130C  C003  F020         	movff	ConfiguraLCD@a,_interfaz
  3136   001310  0012               	return		;funcret
  3137   001312                     __end_of_ConfiguraLCD:
  3138                           	callstack 0
  3139                           
  3140 ;; *************** function _ColorRGB *****************
  3141 ;; Defined at:
  3142 ;;		line 233 in file "Lab5.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  val             2    2[COMRAM] unsigned int 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3156 ;;      Params:         2       0       0       0       0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3159 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3160 ;;Total ram usage:        2 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; Hardware stack levels required when called: 2
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_main
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text25
  3171   000D46                     __ptext25:
  3172                           	callstack 0
  3173   000D46                     _ColorRGB:
  3174                           	callstack 28
  3175                           
  3176                           ;Lab5.c: 234: if (val < 22) {
  3177                           
  3178                           ;incstack = 0
  3179   000D46  5004               	movf	(ColorRGB@val+1)^0,w,c
  3180   000D48  E108               	bnz	l1844
  3181   000D4A  0E16               	movlw	22
  3182   000D4C  5C03               	subwf	ColorRGB@val^0,w,c
  3183   000D4E  B0D8               	btfsc	status,0,c
  3184   000D50  D004               	goto	l1844
  3185                           
  3186                           ;Lab5.c: 235: RB5 = 0;
  3187   000D52  9A81               	bcf	3969,5,c	;volatile
  3188                           
  3189                           ;Lab5.c: 236: RB6 = 0;
  3190   000D54  9C81               	bcf	3969,6,c	;volatile
  3191                           
  3192                           ;Lab5.c: 237: RB7 = 0;
  3193   000D56  9E81               	bcf	3969,7,c	;volatile
  3194                           
  3195                           ;Lab5.c: 238: } else if (val >= 22 && val < 25) {
  3196   000D58  0012               	return	
  3197   000D5A                     l1844:
  3198   000D5A  5004               	movf	(ColorRGB@val+1)^0,w,c
  3199   000D5C  E104               	bnz	u910
  3200   000D5E  0E16               	movlw	22
  3201   000D60  5C03               	subwf	ColorRGB@val^0,w,c
  3202   000D62  A0D8               	btfss	status,0,c
  3203   000D64  D00A               	goto	l1850
  3204   000D66                     u910:
  3205   000D66  5004               	movf	(ColorRGB@val+1)^0,w,c
  3206   000D68  E108               	bnz	l1850
  3207   000D6A  0E19               	movlw	25
  3208   000D6C  5C03               	subwf	ColorRGB@val^0,w,c
  3209   000D6E  B0D8               	btfsc	status,0,c
  3210   000D70  D004               	goto	l1850
  3211                           
  3212                           ;Lab5.c: 239: RB5 = 1;
  3213   000D72  8A81               	bsf	3969,5,c	;volatile
  3214                           
  3215                           ;Lab5.c: 240: RB6 = 0;
  3216   000D74  9C81               	bcf	3969,6,c	;volatile
  3217                           
  3218                           ;Lab5.c: 241: RB7 = 1;
  3219   000D76  8E81               	bsf	3969,7,c	;volatile
  3220                           
  3221                           ;Lab5.c: 242: } else if (val >= 25 && val < 28) {
  3222   000D78  0012               	return	
  3223   000D7A                     l1850:
  3224   000D7A  5004               	movf	(ColorRGB@val+1)^0,w,c
  3225   000D7C  E104               	bnz	u930
  3226   000D7E  0E19               	movlw	25
  3227   000D80  5C03               	subwf	ColorRGB@val^0,w,c
  3228   000D82  A0D8               	btfss	status,0,c
  3229   000D84  D00A               	goto	l1856
  3230   000D86                     u930:
  3231   000D86  5004               	movf	(ColorRGB@val+1)^0,w,c
  3232   000D88  E108               	bnz	l1856
  3233   000D8A  0E1C               	movlw	28
  3234   000D8C  5C03               	subwf	ColorRGB@val^0,w,c
  3235   000D8E  B0D8               	btfsc	status,0,c
  3236   000D90  D004               	goto	l1856
  3237                           
  3238                           ;Lab5.c: 243: RB5 = 1;
  3239   000D92  8A81               	bsf	3969,5,c	;volatile
  3240                           
  3241                           ;Lab5.c: 244: RB6 = 0;
  3242   000D94  9C81               	bcf	3969,6,c	;volatile
  3243                           
  3244                           ;Lab5.c: 245: RB7 = 0;
  3245   000D96  9E81               	bcf	3969,7,c	;volatile
  3246                           
  3247                           ;Lab5.c: 246: } else if (val >= 28 && val < 31) {
  3248   000D98  0012               	return	
  3249   000D9A                     l1856:
  3250   000D9A  5004               	movf	(ColorRGB@val+1)^0,w,c
  3251   000D9C  E104               	bnz	u950
  3252   000D9E  0E1C               	movlw	28
  3253   000DA0  5C03               	subwf	ColorRGB@val^0,w,c
  3254   000DA2  A0D8               	btfss	status,0,c
  3255   000DA4  D00A               	goto	l1862
  3256   000DA6                     u950:
  3257   000DA6  5004               	movf	(ColorRGB@val+1)^0,w,c
  3258   000DA8  E108               	bnz	l1862
  3259   000DAA  0E1F               	movlw	31
  3260   000DAC  5C03               	subwf	ColorRGB@val^0,w,c
  3261   000DAE  B0D8               	btfsc	status,0,c
  3262   000DB0  D004               	goto	l1862
  3263                           
  3264                           ;Lab5.c: 247: RB5 = 1;
  3265   000DB2  8A81               	bsf	3969,5,c	;volatile
  3266                           
  3267                           ;Lab5.c: 248: RB6 = 1;
  3268   000DB4  8C81               	bsf	3969,6,c	;volatile
  3269                           
  3270                           ;Lab5.c: 249: RB7 = 0;
  3271   000DB6  9E81               	bcf	3969,7,c	;volatile
  3272                           
  3273                           ;Lab5.c: 250: } else if (val >= 31 && val < 34) {
  3274   000DB8  0012               	return	
  3275   000DBA                     l1862:
  3276   000DBA  5004               	movf	(ColorRGB@val+1)^0,w,c
  3277   000DBC  E104               	bnz	u970
  3278   000DBE  0E1F               	movlw	31
  3279   000DC0  5C03               	subwf	ColorRGB@val^0,w,c
  3280   000DC2  A0D8               	btfss	status,0,c
  3281   000DC4  D00A               	goto	l1868
  3282   000DC6                     u970:
  3283   000DC6  5004               	movf	(ColorRGB@val+1)^0,w,c
  3284   000DC8  E108               	bnz	l1868
  3285   000DCA  0E22               	movlw	34
  3286   000DCC  5C03               	subwf	ColorRGB@val^0,w,c
  3287   000DCE  B0D8               	btfsc	status,0,c
  3288   000DD0  D004               	goto	l1868
  3289                           
  3290                           ;Lab5.c: 251: RB5 = 0;
  3291   000DD2  9A81               	bcf	3969,5,c	;volatile
  3292                           
  3293                           ;Lab5.c: 252: RB6 = 1;
  3294   000DD4  8C81               	bsf	3969,6,c	;volatile
  3295                           
  3296                           ;Lab5.c: 253: RB7 = 0;
  3297   000DD6  9E81               	bcf	3969,7,c	;volatile
  3298                           
  3299                           ;Lab5.c: 254: } else if (val >= 34 && val < 37) {
  3300   000DD8  0012               	return	
  3301   000DDA                     l1868:
  3302   000DDA  5004               	movf	(ColorRGB@val+1)^0,w,c
  3303   000DDC  E104               	bnz	u990
  3304   000DDE  0E22               	movlw	34
  3305   000DE0  5C03               	subwf	ColorRGB@val^0,w,c
  3306   000DE2  A0D8               	btfss	status,0,c
  3307   000DE4  D00A               	goto	l1874
  3308   000DE6                     u990:
  3309   000DE6  5004               	movf	(ColorRGB@val+1)^0,w,c
  3310   000DE8  E108               	bnz	l1874
  3311   000DEA  0E25               	movlw	37
  3312   000DEC  5C03               	subwf	ColorRGB@val^0,w,c
  3313   000DEE  B0D8               	btfsc	status,0,c
  3314   000DF0  D004               	goto	l1874
  3315                           
  3316                           ;Lab5.c: 255: RB5 = 0;
  3317   000DF2  9A81               	bcf	3969,5,c	;volatile
  3318                           
  3319                           ;Lab5.c: 256: RB6 = 1;
  3320   000DF4  8C81               	bsf	3969,6,c	;volatile
  3321                           
  3322                           ;Lab5.c: 257: RB7 = 1;
  3323   000DF6  8E81               	bsf	3969,7,c	;volatile
  3324                           
  3325                           ;Lab5.c: 258: } else if (val >= 37 && val < 42) {
  3326   000DF8  0012               	return	
  3327   000DFA                     l1874:
  3328   000DFA  5004               	movf	(ColorRGB@val+1)^0,w,c
  3329   000DFC  E104               	bnz	u1010
  3330   000DFE  0E25               	movlw	37
  3331   000E00  5C03               	subwf	ColorRGB@val^0,w,c
  3332   000E02  A0D8               	btfss	status,0,c
  3333   000E04  D00A               	goto	l1880
  3334   000E06                     u1010:
  3335   000E06  5004               	movf	(ColorRGB@val+1)^0,w,c
  3336   000E08  E108               	bnz	l1880
  3337   000E0A  0E2A               	movlw	42
  3338   000E0C  5C03               	subwf	ColorRGB@val^0,w,c
  3339   000E0E  B0D8               	btfsc	status,0,c
  3340   000E10  D004               	goto	l1880
  3341                           
  3342                           ;Lab5.c: 259: RB5 = 0;
  3343   000E12  9A81               	bcf	3969,5,c	;volatile
  3344                           
  3345                           ;Lab5.c: 260: RB6 = 0;
  3346   000E14  9C81               	bcf	3969,6,c	;volatile
  3347                           
  3348                           ;Lab5.c: 261: RB7 = 1;
  3349   000E16  8E81               	bsf	3969,7,c	;volatile
  3350                           
  3351                           ;Lab5.c: 262: } else if (val >= 42) {
  3352   000E18  0012               	return	
  3353   000E1A                     l1880:
  3354   000E1A  5004               	movf	(ColorRGB@val+1)^0,w,c
  3355   000E1C  E104               	bnz	u1030
  3356   000E1E  0E2A               	movlw	42
  3357   000E20  5C03               	subwf	ColorRGB@val^0,w,c
  3358   000E22  A0D8               	btfss	status,0,c
  3359   000E24  0012               	return	
  3360   000E26                     u1030:
  3361                           
  3362                           ;Lab5.c: 263: RB5 = 1;
  3363   000E26  8A81               	bsf	3969,5,c	;volatile
  3364                           
  3365                           ;Lab5.c: 264: RB6 = 1;
  3366   000E28  8C81               	bsf	3969,6,c	;volatile
  3367                           
  3368                           ;Lab5.c: 265: RB7 = 1;
  3369   000E2A  8E81               	bsf	3969,7,c	;volatile
  3370   000E2C  0012               	return	
  3371   000E2E                     __end_of_ColorRGB:
  3372                           	callstack 0
  3373                           
  3374 ;; *************** function _ISR *****************
  3375 ;; Defined at:
  3376 ;;		line 305 in file "Lab5.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3390 ;;      Params:         0       0       0       0       0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3392 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3393 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3394 ;;Total ram usage:        2 bytes
  3395 ;; Hardware stack levels used: 1
  3396 ;; Hardware stack levels required when called: 1
  3397 ;; This function calls:
  3398 ;;		_Recibir
  3399 ;; This function is called by:
  3400 ;;		Interrupt level 2
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	intcode
  3405   000008                     __pintcode:
  3406                           	callstack 0
  3407   000008                     _ISR:
  3408                           	callstack 25
  3409                           
  3410                           ;incstack = 0
  3411   000008  8221               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3412   00000A  ED65  F007         	call	int_func,f	;refresh shadow registers
  3413                           
  3414                           	psect	intcode_body
  3415   000ECA                     __pintcode_body:
  3416                           	callstack 25
  3417   000ECA                     int_func:
  3418                           	callstack 25
  3419   000ECA  0006               	pop		; remove dummy address from shadow register refresh
  3420                           
  3421                           ;Lab5.c: 306: if(TMR0IF){
  3422   000ECC  A4F2               	btfss	4082,2,c	;volatile
  3423   000ECE  D00A               	goto	i2l1652
  3424                           
  3425                           ;Lab5.c: 307: TMR0IF=0;
  3426   000ED0  94F2               	bcf	4082,2,c	;volatile
  3427                           
  3428                           ;Lab5.c: 308: RE2 = !RE2;
  3429   000ED2  B484               	btfsc	3972,2,c	;volatile
  3430   000ED4  D002               	goto	i2u67_40
  3431   000ED6  8484               	bsf	3972,2,c	;volatile
  3432   000ED8  D001               	goto	i2u68_45
  3433   000EDA                     i2u67_40:
  3434   000EDA  9484               	bcf	3972,2,c	;volatile
  3435   000EDC                     i2u68_45:
  3436                           
  3437                           ;Lab5.c: 309: TMR0 = 3036;
  3438   000EDC  0E0B               	movlw	11
  3439   000EDE  6ED7               	movwf	215,c	;volatile
  3440   000EE0  0EDC               	movlw	220
  3441   000EE2  6ED6               	movwf	214,c	;volatile
  3442   000EE4                     i2l1652:
  3443                           
  3444                           ;Lab5.c: 311: };Lab5.c: 312: if(RCIF){
  3445   000EE4  BA9E               	btfsc	3998,5,c	;volatile
  3446   000EE6  D01A               	goto	i2l1666
  3447   000EE8  D033               	goto	i2l310
  3448   000EEA                     i2l1656:
  3449                           
  3450                           ;Lab5.c: 315: A=0;
  3451   000EEA  0E00               	movlw	0
  3452   000EEC  6E1C               	movwf	(_A+1)^0,c
  3453   000EEE  0E00               	movlw	0
  3454   000EF0  6E1B               	movwf	_A^0,c
  3455                           
  3456                           ;Lab5.c: 316: B=0;
  3457   000EF2  0E00               	movlw	0
  3458   000EF4  6E1A               	movwf	(_B+1)^0,c
  3459   000EF6  0E00               	movlw	0
  3460   000EF8  D00F               	goto	L9
  3461   000EFA                     i2l1658:
  3462                           
  3463                           ;Lab5.c: 319: A=0;
  3464   000EFA  0E00               	movlw	0
  3465   000EFC  6E1C               	movwf	(_A+1)^0,c
  3466   000EFE  0E00               	movlw	0
  3467   000F00  D007               	goto	L11
  3468   000F02                     i2l1660:
  3469                           
  3470                           ;Lab5.c: 323: A=1;
  3471   000F02  0E00               	movlw	0
  3472   000F04  6E1C               	movwf	(_A+1)^0,c
  3473   000F06  0E01               	movlw	1
  3474   000F08  D7F3               	goto	L10
  3475   000F0A                     i2l1662:
  3476                           
  3477                           ;Lab5.c: 327: A=1;
  3478   000F0A  0E00               	movlw	0
  3479   000F0C  6E1C               	movwf	(_A+1)^0,c
  3480   000F0E  0E01               	movlw	1
  3481   000F10                     L11:
  3482   000F10  6E1B               	movwf	_A^0,c
  3483                           
  3484                           ;Lab5.c: 328: B=1;
  3485   000F12  0E00               	movlw	0
  3486   000F14  6E1A               	movwf	(_B+1)^0,c
  3487   000F16  0E01               	movlw	1
  3488   000F18                     L9:
  3489   000F18  6E19               	movwf	_B^0,c
  3490                           
  3491                           ;Lab5.c: 329: break;
  3492   000F1A  D00E               	goto	i2l1668
  3493   000F1C                     i2l1666:
  3494   000F1C  ECC7  F009         	call	_Recibir	;wreg free
  3495                           
  3496                           ; Switch size 1, requested type "simple"
  3497                           ; Number of cases is 4, Range of values is 67 to 82
  3498                           ; switch strategies available:
  3499                           ; Name         Instructions Cycles
  3500                           ; simple_byte           13     7 (average)
  3501                           ;	Chosen strategy is simple_byte
  3502   000F20  0A43               	xorlw	67	; case 67
  3503   000F22  B4D8               	btfsc	status,2,c
  3504   000F24  D7E2               	goto	i2l1656
  3505   000F26  0A05               	xorlw	5	; case 70
  3506   000F28  B4D8               	btfsc	status,2,c
  3507   000F2A  D7EF               	goto	i2l1662
  3508   000F2C  0A0D               	xorlw	13	; case 75
  3509   000F2E  B4D8               	btfsc	status,2,c
  3510   000F30  D7E4               	goto	i2l1658
  3511   000F32  0A19               	xorlw	25	; case 82
  3512   000F34  B4D8               	btfsc	status,2,c
  3513   000F36  D7E5               	goto	i2l1660
  3514   000F38                     i2l1668:
  3515                           
  3516                           ;Lab5.c: 333: _delay((unsigned long)((100)*(8000000/4000.0)));
  3517   000F38  0E02               	movlw	2
  3518   000F3A  6E02               	movwf	(??_ISR+1)^0,c
  3519   000F3C  0E04               	movlw	4
  3520   000F3E  6E01               	movwf	??_ISR^0,c
  3521   000F40  0EBA               	movlw	186
  3522   000F42                     i2u140_47:
  3523   000F42  2EE8               	decfsz	wreg,f,c
  3524   000F44  D7FE               	bra	i2u140_47
  3525   000F46  2E01               	decfsz	??_ISR^0,f,c
  3526   000F48  D7FC               	bra	i2u140_47
  3527   000F4A  2E02               	decfsz	(??_ISR+1)^0,f,c
  3528   000F4C  D7FA               	bra	i2u140_47
  3529   000F4E  D000               	nop2	
  3530   000F50                     i2l310:
  3531   000F50  9221               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3532   000F52  0011               	retfie		f
  3533   000F54                     __end_of_ISR:
  3534                           	callstack 0
  3535                           
  3536 ;; *************** function _Recibir *****************
  3537 ;; Defined at:
  3538 ;;		line 164 in file "Lab5.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;		None
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;		None
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      unsigned char 
  3545 ;; Registers used:
  3546 ;;		wreg, status,2
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3552 ;;      Params:         0       0       0       0       0       0       0       0       0
  3553 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3554 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3555 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3556 ;;Total ram usage:        0 bytes
  3557 ;; Hardware stack levels used: 1
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_ISR
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text27
  3566   00138E                     __ptext27:
  3567                           	callstack 0
  3568   00138E                     _Recibir:
  3569                           	callstack 25
  3570                           
  3571                           ;Lab5.c: 165: while(RCIF==0);
  3572                           
  3573                           ;incstack = 0
  3574   00138E  AA9E               	btfss	3998,5,c	;volatile
  3575   001390  D7FE               	goto	__ptext27
  3576                           
  3577                           ;Lab5.c: 166: return RCREG;
  3578   001392  50AE               	movf	174,w,c	;volatile
  3579   001394  0012               	return		;funcret
  3580   001396                     __end_of_Recibir:
  3581                           	callstack 0
  3582                           
  3583                           	psect	rparam
  3584   000000                     
  3585                           	psect	temp
  3586   000021                     btemp:
  3587                           	callstack 0
  3588   000021                     	ds	1
  3589   000000                     int$flags	set	btemp
  3590   000000                     wtemp8	set	btemp+1
  3591   000000                     ttemp5	set	btemp+1
  3592   000000                     ttemp6	set	btemp+4
  3593   000000                     ttemp7	set	btemp+8
  3594                           
  3595                           	psect	idloc
  3596                           
  3597                           ;Config register IDLOC0 @ 0x200000
  3598                           ;	unspecified, using default values
  3599   200000                     	org	2097152
  3600   200000  FF                 	db	255
  3601                           
  3602                           ;Config register IDLOC1 @ 0x200001
  3603                           ;	unspecified, using default values
  3604   200001                     	org	2097153
  3605   200001  FF                 	db	255
  3606                           
  3607                           ;Config register IDLOC2 @ 0x200002
  3608                           ;	unspecified, using default values
  3609   200002                     	org	2097154
  3610   200002  FF                 	db	255
  3611                           
  3612                           ;Config register IDLOC3 @ 0x200003
  3613                           ;	unspecified, using default values
  3614   200003                     	org	2097155
  3615   200003  FF                 	db	255
  3616                           
  3617                           ;Config register IDLOC4 @ 0x200004
  3618                           ;	unspecified, using default values
  3619   200004                     	org	2097156
  3620   200004  FF                 	db	255
  3621                           
  3622                           ;Config register IDLOC5 @ 0x200005
  3623                           ;	unspecified, using default values
  3624   200005                     	org	2097157
  3625   200005  FF                 	db	255
  3626                           
  3627                           ;Config register IDLOC6 @ 0x200006
  3628                           ;	unspecified, using default values
  3629   200006                     	org	2097158
  3630   200006  FF                 	db	255
  3631                           
  3632                           ;Config register IDLOC7 @ 0x200007
  3633                           ;	unspecified, using default values
  3634   200007                     	org	2097159
  3635   200007  FF                 	db	255
  3636                           
  3637                           	psect	config
  3638                           
  3639                           ;Config register CONFIG1L @ 0x300000
  3640                           ;	unspecified, using default values
  3641                           ;	PLL Prescaler Selection bits
  3642                           ;	PLLDIV = 0x0, unprogrammed default
  3643                           ;	System Clock Postscaler Selection bits
  3644                           ;	CPUDIV = 0x0, unprogrammed default
  3645                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3646                           ;	USBDIV = 0x0, unprogrammed default
  3647   300000                     	org	3145728
  3648   300000  00                 	db	0
  3649                           
  3650                           ;Config register CONFIG1H @ 0x300001
  3651                           ;	Oscillator Selection bits
  3652                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3653                           ;	Fail-Safe Clock Monitor Enable bit
  3654                           ;	FCMEN = 0x0, unprogrammed default
  3655                           ;	Internal/External Oscillator Switchover bit
  3656                           ;	IESO = 0x0, unprogrammed default
  3657   300001                     	org	3145729
  3658   300001  09                 	db	9
  3659                           
  3660                           ;Config register CONFIG2L @ 0x300002
  3661                           ;	unspecified, using default values
  3662                           ;	Power-up Timer Enable bit
  3663                           ;	PWRT = 0x1, unprogrammed default
  3664                           ;	Brown-out Reset Enable bits
  3665                           ;	BOR = 0x3, unprogrammed default
  3666                           ;	Brown-out Reset Voltage bits
  3667                           ;	BORV = 0x3, unprogrammed default
  3668                           ;	USB Voltage Regulator Enable bit
  3669                           ;	VREGEN = 0x0, unprogrammed default
  3670   300002                     	org	3145730
  3671   300002  1F                 	db	31
  3672                           
  3673                           ;Config register CONFIG2H @ 0x300003
  3674                           ;	Watchdog Timer Enable bit
  3675                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3676                           ;	Watchdog Timer Postscale Select bits
  3677                           ;	WDTPS = 0xF, unprogrammed default
  3678   300003                     	org	3145731
  3679   300003  1E                 	db	30
  3680                           
  3681                           ; Padding undefined space
  3682   300004                     	org	3145732
  3683   300004  FF                 	db	255
  3684                           
  3685                           ;Config register CONFIG3H @ 0x300005
  3686                           ;	CCP2 MUX bit
  3687                           ;	CCP2MX = 0x1, unprogrammed default
  3688                           ;	PORTB A/D Enable bit
  3689                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3690                           ;	Low-Power Timer 1 Oscillator Enable bit
  3691                           ;	LPT1OSC = 0x0, unprogrammed default
  3692                           ;	MCLR Pin Enable bit
  3693                           ;	MCLRE = 0x1, unprogrammed default
  3694   300005                     	org	3145733
  3695   300005  81                 	db	129
  3696                           
  3697                           ;Config register CONFIG4L @ 0x300006
  3698                           ;	Stack Full/Underflow Reset Enable bit
  3699                           ;	STVREN = 0x1, unprogrammed default
  3700                           ;	Single-Supply ICSP Enable bit
  3701                           ;	LVP = OFF, Single-Supply ICSP disabled
  3702                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3703                           ;	ICPRT = 0x0, unprogrammed default
  3704                           ;	Extended Instruction Set Enable bit
  3705                           ;	XINST = 0x0, unprogrammed default
  3706                           ;	Background Debugger Enable bit
  3707                           ;	DEBUG = 0x1, unprogrammed default
  3708   300006                     	org	3145734
  3709   300006  81                 	db	129
  3710                           
  3711                           ; Padding undefined space
  3712   300007                     	org	3145735
  3713   300007  FF                 	db	255
  3714                           
  3715                           ;Config register CONFIG5L @ 0x300008
  3716                           ;	unspecified, using default values
  3717                           ;	Code Protection bit
  3718                           ;	CP0 = 0x1, unprogrammed default
  3719                           ;	Code Protection bit
  3720                           ;	CP1 = 0x1, unprogrammed default
  3721                           ;	Code Protection bit
  3722                           ;	CP2 = 0x1, unprogrammed default
  3723                           ;	Code Protection bit
  3724                           ;	CP3 = 0x1, unprogrammed default
  3725   300008                     	org	3145736
  3726   300008  0F                 	db	15
  3727                           
  3728                           ;Config register CONFIG5H @ 0x300009
  3729                           ;	unspecified, using default values
  3730                           ;	Boot Block Code Protection bit
  3731                           ;	CPB = 0x1, unprogrammed default
  3732                           ;	Data EEPROM Code Protection bit
  3733                           ;	CPD = 0x1, unprogrammed default
  3734   300009                     	org	3145737
  3735   300009  C0                 	db	192
  3736                           
  3737                           ;Config register CONFIG6L @ 0x30000A
  3738                           ;	unspecified, using default values
  3739                           ;	Write Protection bit
  3740                           ;	WRT0 = 0x1, unprogrammed default
  3741                           ;	Write Protection bit
  3742                           ;	WRT1 = 0x1, unprogrammed default
  3743                           ;	Write Protection bit
  3744                           ;	WRT2 = 0x1, unprogrammed default
  3745                           ;	Write Protection bit
  3746                           ;	WRT3 = 0x1, unprogrammed default
  3747   30000A                     	org	3145738
  3748   30000A  0F                 	db	15
  3749                           
  3750                           ;Config register CONFIG6H @ 0x30000B
  3751                           ;	unspecified, using default values
  3752                           ;	Configuration Register Write Protection bit
  3753                           ;	WRTC = 0x1, unprogrammed default
  3754                           ;	Boot Block Write Protection bit
  3755                           ;	WRTB = 0x1, unprogrammed default
  3756                           ;	Data EEPROM Write Protection bit
  3757                           ;	WRTD = 0x1, unprogrammed default
  3758   30000B                     	org	3145739
  3759   30000B  E0                 	db	224
  3760                           
  3761                           ;Config register CONFIG7L @ 0x30000C
  3762                           ;	unspecified, using default values
  3763                           ;	Table Read Protection bit
  3764                           ;	EBTR0 = 0x1, unprogrammed default
  3765                           ;	Table Read Protection bit
  3766                           ;	EBTR1 = 0x1, unprogrammed default
  3767                           ;	Table Read Protection bit
  3768                           ;	EBTR2 = 0x1, unprogrammed default
  3769                           ;	Table Read Protection bit
  3770                           ;	EBTR3 = 0x1, unprogrammed default
  3771   30000C                     	org	3145740
  3772   30000C  0F                 	db	15
  3773                           
  3774                           ;Config register CONFIG7H @ 0x30000D
  3775                           ;	unspecified, using default values
  3776                           ;	Boot Block Table Read Protection bit
  3777                           ;	EBTRB = 0x1, unprogrammed default
  3778   30000D                     	org	3145741
  3779   30000D  40                 	db	64
  3780                           tosu	equ	0xFFF
  3781                           tosh	equ	0xFFE
  3782                           tosl	equ	0xFFD
  3783                           stkptr	equ	0xFFC
  3784                           pclatu	equ	0xFFB
  3785                           pclath	equ	0xFFA
  3786                           pcl	equ	0xFF9
  3787                           tblptru	equ	0xFF8
  3788                           tblptrh	equ	0xFF7
  3789                           tblptrl	equ	0xFF6
  3790                           tablat	equ	0xFF5
  3791                           prodh	equ	0xFF4
  3792                           prodl	equ	0xFF3
  3793                           indf0	equ	0xFEF
  3794                           postinc0	equ	0xFEE
  3795                           postdec0	equ	0xFED
  3796                           preinc0	equ	0xFEC
  3797                           plusw0	equ	0xFEB
  3798                           fsr0h	equ	0xFEA
  3799                           fsr0l	equ	0xFE9
  3800                           wreg	equ	0xFE8
  3801                           indf1	equ	0xFE7
  3802                           postinc1	equ	0xFE6
  3803                           postdec1	equ	0xFE5
  3804                           preinc1	equ	0xFE4
  3805                           plusw1	equ	0xFE3
  3806                           fsr1h	equ	0xFE2
  3807                           fsr1l	equ	0xFE1
  3808                           bsr	equ	0xFE0
  3809                           indf2	equ	0xFDF
  3810                           postinc2	equ	0xFDE
  3811                           postdec2	equ	0xFDD
  3812                           preinc2	equ	0xFDC
  3813                           plusw2	equ	0xFDB
  3814                           fsr2h	equ	0xFDA
  3815                           fsr2l	equ	0xFD9
  3816                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        1
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     24      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->___awdiv
    _DireccionaLCD->_EnviaDato
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6804
                                             22 COMRAM     2     2      0
                           _BorraLCD
                           _ColorRGB
                       _ConfiguraLCD
                         _Conversion
                      _DireccionaLCD
                       _EscribeLCD_c
                _GuardarDatoEnEEPROM
                      _InicializaLCD
                           _LeerHT11
                     _MensajeLCD_Var
                    _TransmitirDatos
                            ___lbdiv
                            ___lbmod
                   _leerDatoEnEEPROM
 ---------------------------------------------------------------------------------
 (1) _leerDatoEnEEPROM                                     2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     14    10      4    4115
                                             10 COMRAM    12     8      4
                      _DireccionaLCD
                       _EscribeLCD_c
                         _Transmitir
                            ___awdiv
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     387
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     390
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                              6 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       4     3      1     694
                                              7 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              6 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             1     1      0      75
                                              6 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0      75
                                              3 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0      60
                                              4 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GuardarDatoEnEEPROM                                  3     0      3     196
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Conversion                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     0      2     384
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMRAM     2     2      0
                            _Recibir
 ---------------------------------------------------------------------------------
 (6) _Recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _ConfiguraLCD
   _Conversion
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _GuardarDatoEnEEPROM
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Var
     _EscribeLCD_c
     _strlen
   _TransmitirDatos
     _DireccionaLCD
     _EscribeLCD_c
     _Transmitir
     ___awdiv
     ___lbdiv
     ___lbmod
     ___lwdiv
     ___lwmod
     ___wmul
   ___lbdiv
   ___lbmod
   _leerDatoEnEEPROM

 _ISR (ROOT)
   _Recibir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     18      20       1       34.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRlhhl       11      0       0      33        0.0%
BITBIGSFRhlhhh       E      0       0      23        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRll          D      0       0      35        0.0%
BITBIGSFRhlhlh       8      0       0      25        0.0%
BITBIGSFRhllhl       7      0       0      29        0.0%
BITBIGSFRhlhhl       7      0       0      24        0.0%
BITBIGSFRlhhhh       6      0       0      31        0.0%
BITBIGSFRhllhhl      4      0       0      27        0.0%
BITBIGSFRhllll       4      0       0      30        0.0%
BITBIGSFRhllhhl      2      0       0      28        0.0%
BITBIGSFRhllhhh      1      0       0      26        0.0%
BITBIGSFRlhhhl       1      0       0      32        0.0%
BITBIGSFRlhl         1      0       0      34        0.0%
BITBIGSFRhhll        1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      36        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri May 26 22:50:47 2023

                          _A 001B                            _B 0019            Transmitir@BufferT 0003  
                         _GO 007E11                           _RD 007D30                           u60 120A  
                         _WR 007D31                 ___awdiv@sign 0008                   EnviaDato@a 0006  
        ___wmul@multiplicand 0005                          l213 11B6                          l205 0C60  
              _InicializaLCD 0E2E                          l232 1206                          l216 11C0  
                        l227 11E2                          l251 0854                          l260 0AA0  
                        l256 0994                          l290 12CE                          l284 1360  
                        l802 1160                          l792 1086                          _GIE 007F97  
                        _RB0 007C08                          _RB1 007C09                          _RB2 007C0A  
                        _RC2 007C12                          _RB5 007C0D                          _RC4 007C14  
                        _RB6 007C0E                          _RB7 007C0F                          _RE2 007C22  
                        u270 130C                          _ISR 0008                          u740 0F9A  
                        u820 1060                          u910 0D66                          u930 0D86  
                        u850 1142                          u780 1186                          u950 0DA6  
                        u970 0DC6                          u990 0DE6                          _Hum 001E  
           TransmitirDatos@n 0011                          wreg 000FE8                         ?_ISR 0001  
                       l1106 11F6                         l1072 0FDC                         l2040 0BA8  
                       l1074 0FEC                         l1082 1022                         l1154 12E0  
                       l1076 100E                         l1308 0E40                         l1164 1384  
                       l1078 1018                         l1094 111A                         l1318 0E5E  
                       l1328 0E7C                         l2080 0D2C                         l1348 0EB4  
                       l1710 0F8E                         l2078 0D18                         l1712 0F96  
                       l1704 0F78                         l1730 0FCE                         l1722 0FB6  
                       l1810 1156                         l1802 1136                         l1740 117C  
                       l1804 113E                         l1726 0FC0                         l1902 08A2  
                       l1910 08FA                         l1816 109A                         l1824 10CC  
                       l1752 1198                         l1744 1182                         l1850 0D7A  
                       l1770 125C                         l1762 1244                         l1844 0D5A  
                       l1676 126A                         l1756 11A0                         l1924 09E6  
                       l1908 08D0                         l1862 0DBA                         l1678 126C  
                       l1782 1054                         l1880 0E1A                         l1856 0D9A  
                       l1784 105C                         l1874 0DFA                         l1698 0F68  
                       l1794 107C                         l1868 0DDA                         l1894 0862  
                       l1898 0876                         _CFGS 007D36                         _EEIF 007D0C  
                       STR_1 0801                         STR_2 080E                         STR_3 0818  
                       STR_4 081E                         u1010 0E06                         u1030 0E26  
                       u1110 0CFE                         u1120 0D00                         u1130 0D0C  
                       u1060 09E0                         u1140 0D0E                         u1150 0D42  
                       u1207 0BD6                         u1080 0A9A                         u1217 0BF2  
                       u1307 11AC                         u1227 0C0E                         u1317 11BC  
                       u1237 0C28                         u1327 11E8                         u1247 0C46  
                       _LATD 000F8C                         u1337 11F8                         u1257 0C6A  
                       u1177 0AE4                         u1347 0FE2                         u1267 0C80  
                       u1187 0B96                         u1357 0FF2                         u1277 0C9A  
                       u1197 0BBA                         u1367 1002                         u1287 0CC2  
                       u1377 1010                         u1297 0CE4                         u1387 101A  
                       u1397 1378                         _RCIF 007CF5                         _RBPU 007F8F  
                       _TMR0 000FD6                         _TRMT 007D61                         _WREN 007D32  
             ??_EscribeLCD_c 0007                         _Temp 001F          _GuardarDatoEnEEPROM 12B2  
                       _main 0AD4                         btemp 0021                         prodh 000FF4  
                       prodl 000FF3                         start 000E              __end_of_LeerBit 120E  
               ___param_bank 000000                        ??_ISR 0001              __end_of_Recibir 1396  
       ?_GuardarDatoEnEEPROM 0003               ?_InicializaLCD 0001                        ?_main 0001  
            __end_of___awdiv 0FD8              __end_of___lbdiv 11A4                        _ADRES 000FC3  
                      _EEADR 000FA9                EscribeLCD_c@a 0007              __end_of___lbmod 1264  
                      _EEPGD 007D37                        _T0CON 000FD5              ___awdiv@divisor 0005  
                      _LATC2 007C5A                        _LATE0 007C68                        _LATE1 007C69  
            __end_of___lwdiv 1090              __end_of___lwmod 116A                        i2l310 0F50  
            ___awdiv@counter 0007                        _RCREG 000FAE                        _RCSTA 000FAB  
                      _SPBRG 000FAF                        _USBEN 007B6B                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
                      _TXREG 000FAD                        _TXSTA 000FAC       GuardarDatoEnEEPROM@dir 0003  
                      tablat 000FF5                   _Conversion 1352                  _HabilitaLCD 1374  
                      ttemp5 0022                        ttemp6 0025                        ttemp7 0029  
                      status 000FD8                        wtemp8 0022              ___lbdiv@divisor 0003  
            ___lbdiv@counter 0005             __end_of_BorraLCD 1352             __end_of_LeerHT11 11DE  
           __end_of_ColorRGB 0E2E              __initialization 120E             __end_of_LeerByte 12FA  
               __end_of_main 0D46     __end_of_leerDatoEnEEPROM 1374        ??_GuardarDatoEnEEPROM 0006  
                     ??_main 0017         __end_of_ConfiguraLCD 1312                __activetblptr 000002  
                 _TempEEPROM 001D                       _ADCON0 000FC2                       _ADCON1 000FC1  
                     _ADCON2 000FC0                       _EEDATA 000FA8               DireccionaLCD@a 0007  
                     _EECON2 000FA7             ___awdiv@dividend 0003                       i2l1660 0F02  
                     i2l1652 0EE4                       i2l1662 0F0A                       i2l1656 0EEA  
                     i2l1658 0EFA                       i2l1666 0F1C                       i2l1668 0F38  
                     _OSCCON 000FD3                       _TMR0IE 007F95                       _TMR0IF 007F92  
                     _TMR0ON 007EAF                       _TRISA0 007C90                       _TRISC2 007CA2  
                  ??_LeerBit 0003        __end_of_DireccionaLCD 1328                       _UTRDIS 007B7B  
                 _RetardoLCD 0FD8                    ??_Recibir 0001          TransmitirDatos@Ent1 000B  
        TransmitirDatos@Ent2 000D          TransmitirDatos@Simb 0013                       ___wmul 128C  
                  ??___awdiv 0007                    ??___lbdiv 0004                    ??___lbmod 0004  
                  ??___lwdiv 0007                    ??___lwmod 0007              ??_InicializaLCD 0007  
                     clear_0 1226             ___awdiv@quotient 0009      GuardarDatoEnEEPROM@dato 0005  
                     isa$std 000001         __end_of_EscribeLCD_c 133E                       _strlen 1264  
               __pdataCOMRAM 0020                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                   _Transmitir 1382  
           ___lbdiv@dividend 0004                  ?_Conversion 0001              ___lbmod@divisor 0003  
                 __accesstop 0060      __end_of__initialization 122C              ___lbmod@counter 0005  
              ___rparam_used 000001               __pcstackCOMRAM 0001            __end_of_EnviaDato 1128  
           ___lbdiv@quotient 0006                    ?_BorraLCD 0001                    ?_LeerHT11 0001  
                  ?_ColorRGB 0003               _MensajeLCD_Var 1090                    ?_LeerByte 0001  
            MensajeLCD_Var@a 0008              MensajeLCD_Var@i 000A                  ?_RetardoLCD 0001  
                RetardoLCD@a 0004                      ?___wmul 0003                      _BAUDCON 000FB8  
                    ?_strlen 0003       __end_of_MensajeLCD_Var 10E2                      i2u67_40 0EDA  
                    i2u68_45 0EDC                   ??_BorraLCD 0007                   ??_LeerHT11 0007  
                 ??_ColorRGB 0005                  ?_Transmitir 0001                   ??_LeerByte 0004  
               ?_HabilitaLCD 0001                      _LeerBit 11DE                 _ConfiguraLCD 12FA  
                    _Recibir 138E                      __Hparam 0000                      __Lparam 0000  
       TransmitirDatos@TempC 0015                      ___awdiv 0F54                      ___lbdiv 116A  
                    ___lbmod 123A                      ___lwdiv 103E                      ___lwmod 1128  
          ?_leerDatoEnEEPROM 0003                 __psmallconst 0800                      __pcinit 120E  
                    __ramtop 0800                      __ptext0 0AD4                      __ptext1 1366  
                    __ptext2 0824                      __ptext3 128C                      __ptext4 1128  
                    __ptext5 103E                      __ptext6 123A           ??_leerDatoEnEEPROM 0005  
                    __ptext7 116A                      __ptext8 0F54                      __ptext9 1382  
            ?_MensajeLCD_Var 0008               __pintcode_body 0ECA         end_of_initialization 122C  
            Conversion@canal 0003                __Lmediumconst 0000                      int_func 0ECA  
               _EscribeLCD_c 1328  __end_of_GuardarDatoEnEEPROM 12D8            ??_TransmitirDatos 000F  
                    postinc0 000FEE                      strlen@s 0003             ___lbmod@dividend 0004  
                  LeerByte@i 0006                 ??_Conversion 0003                  ___lbmod@rem 0006  
             __end_of___wmul 12B2                __pidataCOMRAM 1396        __end_of_InicializaLCD 0ECA  
         __end_of_Conversion 1366                    _EnviaDato 10E2               __end_of_strlen 128C  
        start_initialization 120E                  __end_of_ISR 0F54                 ??_RetardoLCD 0003  
                   ??___wmul 0007                     ??_strlen 0005                   ?_EnviaDato 0001  
                __pbssCOMRAM 0019           __end_of_RetardoLCD 103E                 ??_Transmitir 0003  
                   ?_LeerBit 0001                _DireccionaLCD 1312                     ?_Recibir 0001  
           ___lwdiv@dividend 0003                    __pintcode 0008                     ?___awdiv 0003  
                   ?___lbdiv 0003                     ?___lbmod 0003                     ?___lwdiv 0003  
                   ?___lwmod 0003           __end_of_Transmitir 138E             ??_MensajeLCD_Var 0009  
                __smallconst 0800             ___lwdiv@quotient 0007              _TransmitirDatos 0824  
             ___wmul@product 0007               ?_DireccionaLCD 0001                     i2u140_47 0F42  
          ___wmul@multiplier 0003                  ??_EnviaDato 0005                     _BorraLCD 133E  
                   _LeerHT11 11A4                     _ColorRGB 0D46                     _LeerByte 12D8  
        leerDatoEnEEPROM@dir 0003                     __Hrparam 0000                     __Lrparam 0000  
              ConfiguraLCD@a 0003      __end_of_TransmitirDatos 0AD4              ___lwdiv@divisor 0005  
            ___lwdiv@counter 0009                     __ptext10 1312                     __ptext11 1090  
                   __ptext20 0FD8                     __ptext12 1264                     __ptext21 1374  
                   __ptext13 1328                     __ptext22 12B2                     __ptext14 11A4  
                   __ptext23 1352                     __ptext15 12D8                     __ptext24 12FA  
                   __ptext16 11DE                     __ptext25 0D46                     __ptext17 0E2E  
                   __ptext18 133E                     __ptext27 138E                     __ptext19 10E2  
            ??_DireccionaLCD 0007                     _interfaz 0020                     isa$xinst 000000  
                   int$flags 0021             _leerDatoEnEEPROM 1366                     intlevel2 0000  
              ??_HabilitaLCD 0003             ___lwmod@dividend 0003                ?_ConfiguraLCD 0001  
                ColorRGB@val 0003              ___lwmod@divisor 0005                     strlen@cp 0005  
            ___lwmod@counter 0007             ?_TransmitirDatos 000B               ??_ConfiguraLCD 0003  
              ?_EscribeLCD_c 0001                   LeerBit@res 0003          __end_of_HabilitaLCD 1382  
                LeerByte@res 0005  
