

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Jun 04 00:01:30 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Version 2.40
    47                           ; Generated 04/07/2022 GMT
    48                           ; 
    49                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F4550 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81   000000                     
    82                           	psect	idataCOMRAM
    83   001382                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for _interfaz
    87   001382  08                 	db	8
    88   000000                     _EECON2	set	4007
    89   000000                     _RCREG	set	4014
    90   000000                     _TXREG	set	4013
    91   000000                     _TRISC	set	3988
    92   000000                     _TRISD	set	3989
    93   000000                     _SPBRG	set	4015
    94   000000                     _BAUDCON	set	4024
    95   000000                     _RD	set	32048
    96   000000                     _WR	set	32049
    97   000000                     _WREN	set	32050
    98   000000                     _CFGS	set	32054
    99   000000                     _GO	set	32273
   100   000000                     _RB7	set	31759
   101   000000                     _RB6	set	31758
   102   000000                     _RB5	set	31757
   103   000000                     _TRMT	set	32097
   104   000000                     _RC2	set	31762
   105   000000                     _TRISC2	set	31906
   106   000000                     _RB0	set	31752
   107   000000                     _RB2	set	31754
   108   000000                     _TMR0ON	set	32431
   109   000000                     _GIE	set	32663
   110   000000                     _TMR0IE	set	32661
   111   000000                     _LATE1	set	31849
   112   000000                     _LATD	set	3980
   113   000000                     _USBEN	set	31595
   114   000000                     _LATC2	set	31834
   115   000000                     _TRISB	set	3987
   116   000000                     _TRISE	set	3990
   117   000000                     _RCSTA	set	4011
   118   000000                     _TXSTA	set	4012
   119   000000                     _OSCCON	set	4051
   120   000000                     _TRISA0	set	31888
   121   000000                     _LATE0	set	31848
   122   000000                     _T0CON	set	4053
   123   000000                     _RBPU	set	32655
   124   000000                     _ADCON2	set	4032
   125   000000                     _ADCON1	set	4033
   126   000000                     _ADCON0	set	4034
   127   000000                     _RCIF	set	31989
   128   000000                     _ADRES	set	4035
   129   000000                     _UTRDIS	set	31611
   130   000000                     _RB1	set	31753
   131   000000                     _RC4	set	31764
   132   000000                     _TMR0IF	set	32658
   133   000000                     _TMR0	set	4054
   134   000000                     _RE2	set	31778
   135   000000                     _EEDATA	set	4008
   136   000000                     _EEADR	set	4009
   137   000000                     _EEIF	set	32012
   138   000000                     _EEPGD	set	32055
   139                           
   140                           	psect	smallconst
   141   000800                     __psmallconst:
   142                           	callstack 0
   143   000800  00                 	db	0
   144   000801                     STR_1:
   145   000801  55                 	db	85	;'U'
   146   000802  6C                 	db	108	;'l'
   147   000803  74                 	db	116	;'t'
   148   000804  69                 	db	105	;'i'
   149   000805  6D                 	db	109	;'m'
   150   000806  61                 	db	97	;'a'
   151   000807  20                 	db	32
   152   000808  74                 	db	116	;'t'
   153   000809  65                 	db	101	;'e'
   154   00080A  6D                 	db	109	;'m'
   155   00080B  70                 	db	112	;'p'
   156   00080C  3A                 	db	58	;':'
   157   00080D  00                 	db	0
   158   00080E                     STR_2:
   159   00080E  49                 	db	73	;'I'
   160   00080F  6E                 	db	110	;'n'
   161   000810  69                 	db	105	;'i'
   162   000811  63                 	db	99	;'c'
   163   000812  69                 	db	105	;'i'
   164   000813  61                 	db	97	;'a'
   165   000814  6E                 	db	110	;'n'
   166   000815  64                 	db	100	;'d'
   167   000816  6F                 	db	111	;'o'
   168   000817  00                 	db	0
   169   000818                     STR_3:
   170   000818  54                 	db	84	;'T'
   171   000819  65                 	db	101	;'e'
   172   00081A  6D                 	db	109	;'m'
   173   00081B  70                 	db	112	;'p'
   174   00081C  3A                 	db	58	;':'
   175   00081D  00                 	db	0
   176   00081E                     STR_4:
   177   00081E  48                 	db	72	;'H'
   178   00081F  75                 	db	117	;'u'
   179   000820  6D                 	db	109	;'m'
   180   000821  3A                 	db	58	;':'
   181   000822  00                 	db	0
   182   000823  00                 	db	0	; dummy byte at the end
   183   000000                     
   184                           ; #config settings
   185                           
   186                           	psect	cinit
   187   0011FA                     __pcinit:
   188                           	callstack 0
   189   0011FA                     start_initialization:
   190                           	callstack 0
   191   0011FA                     __initialization:
   192                           	callstack 0
   193                           
   194                           ; Initialize objects allocated to COMRAM (1 bytes)
   195                           ; load TBLPTR registers with __pidataCOMRAM
   196   0011FA  0E82               	movlw	low __pidataCOMRAM
   197   0011FC  6EF6               	movwf	tblptrl,c
   198   0011FE  0E13               	movlw	high __pidataCOMRAM
   199   001200  6EF7               	movwf	tblptrh,c
   200   001202  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   201   001204  6EF8               	movwf	tblptru,c
   202   001206  0009               	tblrd		*+	;fetch initializer
   203   001208  CFF5 F020          	movff	tablat,__pdataCOMRAM
   204                           
   205                           ; Clear objects allocated to COMRAM (7 bytes)
   206   00120C  EE00  F019         	lfsr	0,__pbssCOMRAM
   207   001210  0E07               	movlw	7
   208   001212                     clear_0:
   209   001212  6AEE               	clrf	postinc0,c
   210   001214  06E8               	decf	wreg,f,c
   211   001216  E1FD               	bnz	clear_0
   212   001218                     end_of_initialization:
   213                           	callstack 0
   214   001218                     __end_of__initialization:
   215                           	callstack 0
   216   001218  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   217   00121A  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   218   00121C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   219   00121E  6EF8               	movwf	tblptru,c
   220   001220  0100               	movlb	0
   221   001222  EF60  F005         	goto	_main	;jump to C main() function
   222                           
   223                           	psect	bssCOMRAM
   224   000019                     __pbssCOMRAM:
   225                           	callstack 0
   226   000019                     _B:
   227                           	callstack 0
   228   000019                     	ds	2
   229   00001B                     _A:
   230                           	callstack 0
   231   00001B                     	ds	2
   232   00001D                     _TemperaturaEEPROM:
   233                           	callstack 0
   234   00001D                     	ds	1
   235   00001E                     _Humedad:
   236                           	callstack 0
   237   00001E                     	ds	1
   238   00001F                     _Temperatura:
   239                           	callstack 0
   240   00001F                     	ds	1
   241                           
   242                           	psect	dataCOMRAM
   243   000020                     __pdataCOMRAM:
   244                           	callstack 0
   245   000020                     _interfaz:
   246                           	callstack 0
   247   000020                     	ds	1
   248                           
   249                           	psect	cstackCOMRAM
   250   000001                     __pcstackCOMRAM:
   251                           	callstack 0
   252   000001                     ??_ISR:
   253   000001                     
   254                           ; 2 bytes @ 0x0
   255   000001                     	ds	2
   256   000003                     ??_RetardoLCD:
   257   000003                     ?_strlen:
   258                           	callstack 0
   259   000003                     ?___wmul:
   260                           	callstack 0
   261   000003                     ?___awdiv:
   262                           	callstack 0
   263   000003                     ?___lwdiv:
   264                           	callstack 0
   265   000003                     ?___lwmod:
   266                           	callstack 0
   267   000003                     ConfiguraLCD@a:
   268                           	callstack 0
   269   000003                     LeerBit@res:
   270                           	callstack 0
   271   000003                     Transmitir@BufferT:
   272                           	callstack 0
   273   000003                     ADC_Conv@canal:
   274                           	callstack 0
   275   000003                     ___lbdiv@divisor:
   276                           	callstack 0
   277   000003                     ___lbmod@divisor:
   278                           	callstack 0
   279   000003                     strlen@s:
   280                           	callstack 0
   281   000003                     ColorRGB@val:
   282                           	callstack 0
   283   000003                     SaveData@dir:
   284                           	callstack 0
   285   000003                     ReadData@dir:
   286                           	callstack 0
   287   000003                     ___wmul@multiplier:
   288                           	callstack 0
   289   000003                     ___awdiv@dividend:
   290                           	callstack 0
   291   000003                     ___lwdiv@dividend:
   292                           	callstack 0
   293   000003                     ___lwmod@dividend:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x2
   297   000003                     	ds	1
   298   000004                     ??_LeerByte:
   299   000004                     RetardoLCD@a:
   300                           	callstack 0
   301   000004                     ___lbdiv@dividend:
   302                           	callstack 0
   303   000004                     ___lbmod@dividend:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x3
   307   000004                     	ds	1
   308   000005                     ??_EnviaDato:
   309   000005                     LeerByte@res:
   310                           	callstack 0
   311   000005                     SaveData@dato:
   312                           	callstack 0
   313   000005                     ___lbdiv@counter:
   314                           	callstack 0
   315   000005                     ___lbmod@counter:
   316                           	callstack 0
   317   000005                     strlen@cp:
   318                           	callstack 0
   319   000005                     ___wmul@multiplicand:
   320                           	callstack 0
   321   000005                     ___awdiv@divisor:
   322                           	callstack 0
   323   000005                     ___lwdiv@divisor:
   324                           	callstack 0
   325   000005                     ___lwmod@divisor:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x4
   329   000005                     	ds	1
   330   000006                     EnviaDato@a:
   331                           	callstack 0
   332   000006                     LeerByte@i:
   333                           	callstack 0
   334   000006                     ___lbdiv@quotient:
   335                           	callstack 0
   336   000006                     ___lbmod@rem:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x5
   340   000006                     	ds	1
   341   000007                     ??_LeerDHT11:
   342   000007                     EscribeLCD_c@a:
   343                           	callstack 0
   344   000007                     DireccionaLCD@a:
   345                           	callstack 0
   346   000007                     ___awdiv@counter:
   347                           	callstack 0
   348   000007                     ___lwmod@counter:
   349                           	callstack 0
   350   000007                     ___wmul@product:
   351                           	callstack 0
   352   000007                     ___lwdiv@quotient:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x6
   356   000007                     	ds	1
   357   000008                     MensajeLCD_Var@a:
   358                           	callstack 0
   359   000008                     ___awdiv@sign:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x7
   363   000008                     	ds	1
   364   000009                     ??_MensajeLCD_Var:
   365   000009                     ___lwdiv@counter:
   366                           	callstack 0
   367   000009                     ___awdiv@quotient:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x8
   371   000009                     	ds	1
   372   00000A                     MensajeLCD_Var@i:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x9
   376   00000A                     	ds	1
   377   00000B                     TransmitirDatos@Ent1:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0xA
   381   00000B                     	ds	2
   382   00000D                     TransmitirDatos@Ent2:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0xC
   386   00000D                     	ds	2
   387   00000F                     ??_TransmitirDatos:
   388                           
   389                           ; 1 bytes @ 0xE
   390   00000F                     	ds	2
   391   000011                     TransmitirDatos@n:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x10
   395   000011                     	ds	2
   396   000013                     TransmitirDatos@Simb:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x12
   400   000013                     	ds	2
   401   000015                     TransmitirDatos@TempC:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x14
   405   000015                     	ds	2
   406   000017                     ??_main:
   407                           
   408                           ; 1 bytes @ 0x16
   409   000017                     	ds	2
   410                           
   411 ;;
   412 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   413 ;;
   414 ;; *************** function _main *****************
   415 ;; Defined at:
   416 ;;		line 34 in file "Lab5.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   430 ;;      Params:         0       0       0       0       0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0       0       0       0       0
   432 ;;      Temps:          2       0       0       0       0       0       0       0       0
   433 ;;      Totals:         2       0       0       0       0       0       0       0       0
   434 ;;Total ram usage:        2 bytes
   435 ;; Hardware stack levels required when called: 6
   436 ;; This function calls:
   437 ;;		_ADC_Conv
   438 ;;		_BorraLCD
   439 ;;		_ColorRGB
   440 ;;		_ConfiguraLCD
   441 ;;		_DireccionaLCD
   442 ;;		_EscribeLCD_c
   443 ;;		_InicializaLCD
   444 ;;		_LeerDHT11
   445 ;;		_MensajeLCD_Var
   446 ;;		_ReadData
   447 ;;		_SaveData
   448 ;;		_TransmitirDatos
   449 ;;		___lbdiv
   450 ;;		___lbmod
   451 ;; This function is called by:
   452 ;;		Startup code after reset
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text0
   457   000AC0                     __ptext0:
   458                           	callstack 0
   459   000AC0                     _main:
   460                           	callstack 25
   461                           
   462                           ;Lab5.c: 37: ConfiguraLCD(4);
   463                           
   464                           ;incstack = 0
   465   000AC0  0E04               	movlw	4
   466   000AC2  EC73  F009         	call	_ConfiguraLCD
   467                           
   468                           ;Lab5.c: 38: OSCCON = 0b01110110;
   469   000AC6  0E76               	movlw	118
   470   000AC8  6ED3               	movwf	211,c	;volatile
   471                           
   472                           ;Lab5.c: 39: _delay((unsigned long)((1)*(8000000/4000.0)));
   473   000ACA  0E03               	movlw	3
   474   000ACC  6E17               	movwf	??_main^0,c
   475   000ACE  0E98               	movlw	152
   476   000AD0                     u1117:
   477   000AD0  2EE8               	decfsz	wreg,f,c
   478   000AD2  D7FE               	bra	u1117
   479   000AD4  2E17               	decfsz	??_main^0,f,c
   480   000AD6  D7FC               	bra	u1117
   481                           
   482                           ;Lab5.c: 40: LATC2 = 0;
   483   000AD8  948B               	bcf	3979,2,c	;volatile
   484                           
   485                           ;Lab5.c: 41: TXSTA = 0b00100000;
   486   000ADA  0E20               	movlw	32
   487   000ADC  6EAC               	movwf	172,c	;volatile
   488                           
   489                           ;Lab5.c: 42: RCSTA = 0b10010000;
   490   000ADE  0E90               	movlw	144
   491   000AE0  6EAB               	movwf	171,c	;volatile
   492                           
   493                           ;Lab5.c: 43: BAUDCON = 0b00000000;
   494   000AE2  0E00               	movlw	0
   495   000AE4  6EB8               	movwf	184,c	;volatile
   496                           
   497                           ;Lab5.c: 45: TRISE=0;
   498   000AE6  0E00               	movlw	0
   499   000AE8  6E96               	movwf	150,c	;volatile
   500                           
   501                           ;Lab5.c: 46: SPBRG = 12;
   502   000AEA  0E0C               	movlw	12
   503   000AEC  6EAF               	movwf	175,c	;volatile
   504                           
   505                           ;Lab5.c: 48: ADCON0 = 0b00000001;
   506   000AEE  0E01               	movlw	1
   507   000AF0  6EC2               	movwf	194,c	;volatile
   508                           
   509                           ;Lab5.c: 49: ADCON1 = 14;
   510   000AF2  0E0E               	movlw	14
   511   000AF4  6EC1               	movwf	193,c	;volatile
   512                           
   513                           ;Lab5.c: 50: ADCON2 = 0b10001000;
   514   000AF6  0E88               	movlw	136
   515   000AF8  6EC0               	movwf	192,c	;volatile
   516                           
   517                           ;Lab5.c: 53: TRISB = 0b00001110;
   518   000AFA  0E0E               	movlw	14
   519   000AFC  6E93               	movwf	147,c	;volatile
   520                           
   521                           ;Lab5.c: 54: TRISD = 0;
   522   000AFE  0E00               	movlw	0
   523   000B00  6E95               	movwf	149,c	;volatile
   524                           
   525                           ;Lab5.c: 55: TRISA0 = 1;
   526   000B02  8092               	bsf	3986,0,c	;volatile
   527                           
   528                           ;Lab5.c: 56: TRISC = 0b11010111;
   529   000B04  0ED7               	movlw	215
   530   000B06  6E94               	movwf	148,c	;volatile
   531                           
   532                           ;Lab5.c: 57: USBEN = 0;
   533   000B08  966D               	bcf	3949,3,c	;volatile
   534                           
   535                           ;Lab5.c: 58: UTRDIS = 1;
   536   000B0A  866F               	bsf	3951,3,c	;volatile
   537                           
   538                           ;Lab5.c: 59: RBPU = 0;
   539   000B0C  9EF1               	bcf	4081,7,c	;volatile
   540                           
   541                           ;Lab5.c: 61: TemperaturaEEPROM = ReadData(0);
   542   000B0E  0E00               	movlw	0
   543   000B10  6E04               	movwf	(ReadData@dir+1)^0,c
   544   000B12  0E00               	movlw	0
   545   000B14  6E03               	movwf	ReadData@dir^0,c
   546   000B16  ECA9  F009         	call	_ReadData	;wreg free
   547   000B1A  6E1D               	movwf	_TemperaturaEEPROM^0,c
   548                           
   549                           ;Lab5.c: 63: InicializaLCD();
   550   000B1C  EC0D  F007         	call	_InicializaLCD	;wreg free
   551                           
   552                           ;Lab5.c: 66: T0CON=0b00001011;
   553   000B20  0E0B               	movlw	11
   554   000B22  6ED5               	movwf	213,c	;volatile
   555                           
   556                           ;Lab5.c: 67: TMR0IF=0;
   557   000B24  94F2               	bcf	4082,2,c	;volatile
   558                           
   559                           ;Lab5.c: 68: TMR0=3036;
   560   000B26  0E0B               	movlw	11
   561   000B28  6ED7               	movwf	215,c	;volatile
   562   000B2A  0EDC               	movlw	220
   563   000B2C  6ED6               	movwf	214,c	;volatile
   564                           
   565                           ;Lab5.c: 69: TMR0IE=1;
   566   000B2E  8AF2               	bsf	4082,5,c	;volatile
   567                           
   568                           ;Lab5.c: 70: GIE=1;
   569   000B30  8EF2               	bsf	4082,7,c	;volatile
   570                           
   571                           ;Lab5.c: 71: TMR0ON=1;
   572   000B32  8ED5               	bsf	4053,7,c	;volatile
   573                           
   574                           ;Lab5.c: 73: BorraLCD();
   575   000B34  EC95  F009         	call	_BorraLCD	;wreg free
   576                           
   577                           ;Lab5.c: 75: if (TemperaturaEEPROM != 0xFF) {
   578   000B38  281D               	incf	_TemperaturaEEPROM^0,w,c
   579   000B3A  B4D8               	btfsc	status,2,c
   580   000B3C  D02B               	goto	l2029
   581                           
   582                           ;Lab5.c: 76: MensajeLCD_Var("Ultima temp:");
   583   000B3E  0E01               	movlw	low STR_1
   584   000B40  6E08               	movwf	MensajeLCD_Var@a^0,c
   585   000B42  EC3E  F008         	call	_MensajeLCD_Var	;wreg free
   586                           
   587                           ;Lab5.c: 77: DireccionaLCD(192);
   588   000B46  0EC0               	movlw	192
   589   000B48  EC7F  F009         	call	_DireccionaLCD
   590                           
   591                           ;Lab5.c: 78: EscribeLCD_c(TemperaturaEEPROM / 10 + 48);
   592   000B4C  0E0A               	movlw	10
   593   000B4E  6E03               	movwf	___lbdiv@divisor^0,c
   594   000B50  501D               	movf	_TemperaturaEEPROM^0,w,c
   595   000B52  ECAB  F008         	call	___lbdiv
   596   000B56  0F30               	addlw	48
   597   000B58  EC8A  F009         	call	_EscribeLCD_c
   598                           
   599                           ;Lab5.c: 79: EscribeLCD_c(TemperaturaEEPROM % 10 + 48);
   600   000B5C  0E0A               	movlw	10
   601   000B5E  6E03               	movwf	___lbmod@divisor^0,c
   602   000B60  501D               	movf	_TemperaturaEEPROM^0,w,c
   603   000B62  EC13  F009         	call	___lbmod
   604   000B66  0F30               	addlw	48
   605   000B68  EC8A  F009         	call	_EscribeLCD_c
   606                           
   607                           ;Lab5.c: 80: EscribeLCD_c(223);
   608   000B6C  0EDF               	movlw	223
   609   000B6E  EC8A  F009         	call	_EscribeLCD_c
   610                           
   611                           ;Lab5.c: 81: EscribeLCD_c('C');
   612   000B72  0E43               	movlw	67
   613   000B74  EC8A  F009         	call	_EscribeLCD_c
   614                           
   615                           ;Lab5.c: 82: _delay((unsigned long)((2000)*(8000000/4000.0)));
   616   000B78  0E15               	movlw	21
   617   000B7A  6E18               	movwf	(??_main+1)^0,c
   618   000B7C  0E4B               	movlw	75
   619   000B7E  6E17               	movwf	??_main^0,c
   620   000B80  0EBE               	movlw	190
   621   000B82                     u1127:
   622   000B82  2EE8               	decfsz	wreg,f,c
   623   000B84  D7FE               	bra	u1127
   624   000B86  2E17               	decfsz	??_main^0,f,c
   625   000B88  D7FC               	bra	u1127
   626   000B8A  2E18               	decfsz	(??_main+1)^0,f,c
   627   000B8C  D7FA               	bra	u1127
   628   000B8E  D000               	nop2	
   629                           
   630                           ;Lab5.c: 83: BorraLCD();
   631   000B90  EC95  F009         	call	_BorraLCD	;wreg free
   632   000B94                     l2029:
   633                           
   634                           ;Lab5.c: 84: };Lab5.c: 86: MensajeLCD_Var("Iniciando");
   635   000B94  0E0E               	movlw	low STR_2
   636   000B96  6E08               	movwf	MensajeLCD_Var@a^0,c
   637   000B98  EC3E  F008         	call	_MensajeLCD_Var	;wreg free
   638                           
   639                           ;Lab5.c: 87: _delay((unsigned long)((500)*(8000000/4000.0)));
   640   000B9C  0E06               	movlw	6
   641   000B9E  6E18               	movwf	(??_main+1)^0,c
   642   000BA0  0E13               	movlw	19
   643   000BA2  6E17               	movwf	??_main^0,c
   644   000BA4  0EAE               	movlw	174
   645   000BA6                     u1137:
   646   000BA6  2EE8               	decfsz	wreg,f,c
   647   000BA8  D7FE               	bra	u1137
   648   000BAA  2E17               	decfsz	??_main^0,f,c
   649   000BAC  D7FC               	bra	u1137
   650   000BAE  2E18               	decfsz	(??_main+1)^0,f,c
   651   000BB0  D7FA               	bra	u1137
   652                           
   653                           ;Lab5.c: 88: EscribeLCD_c('.');
   654   000BB2  0E2E               	movlw	46
   655   000BB4  EC8A  F009         	call	_EscribeLCD_c
   656                           
   657                           ;Lab5.c: 89: _delay((unsigned long)((500)*(8000000/4000.0)));
   658   000BB8  0E06               	movlw	6
   659   000BBA  6E18               	movwf	(??_main+1)^0,c
   660   000BBC  0E13               	movlw	19
   661   000BBE  6E17               	movwf	??_main^0,c
   662   000BC0  0EAE               	movlw	174
   663   000BC2                     u1147:
   664   000BC2  2EE8               	decfsz	wreg,f,c
   665   000BC4  D7FE               	bra	u1147
   666   000BC6  2E17               	decfsz	??_main^0,f,c
   667   000BC8  D7FC               	bra	u1147
   668   000BCA  2E18               	decfsz	(??_main+1)^0,f,c
   669   000BCC  D7FA               	bra	u1147
   670                           
   671                           ;Lab5.c: 90: EscribeLCD_c('.');
   672   000BCE  0E2E               	movlw	46
   673   000BD0  EC8A  F009         	call	_EscribeLCD_c
   674                           
   675                           ;Lab5.c: 91: _delay((unsigned long)((500)*(8000000/4000.0)));
   676   000BD4  0E06               	movlw	6
   677   000BD6  6E18               	movwf	(??_main+1)^0,c
   678   000BD8  0E13               	movlw	19
   679   000BDA  6E17               	movwf	??_main^0,c
   680   000BDC  0EAE               	movlw	174
   681   000BDE                     u1157:
   682   000BDE  2EE8               	decfsz	wreg,f,c
   683   000BE0  D7FE               	bra	u1157
   684   000BE2  2E17               	decfsz	??_main^0,f,c
   685   000BE4  D7FC               	bra	u1157
   686   000BE6  2E18               	decfsz	(??_main+1)^0,f,c
   687   000BE8  D7FA               	bra	u1157
   688                           
   689                           ;Lab5.c: 92: EscribeLCD_c('.');
   690   000BEA  0E2E               	movlw	46
   691   000BEC  EC8A  F009         	call	_EscribeLCD_c
   692                           
   693                           ;Lab5.c: 93: _delay((unsigned long)((500)*(8000000/4000.0)));
   694   000BF0  0E06               	movlw	6
   695   000BF2  6E18               	movwf	(??_main+1)^0,c
   696   000BF4  0E13               	movlw	19
   697   000BF6  6E17               	movwf	??_main^0,c
   698   000BF8  0EAE               	movlw	174
   699   000BFA                     u1167:
   700   000BFA  2EE8               	decfsz	wreg,f,c
   701   000BFC  D7FE               	bra	u1167
   702   000BFE  2E17               	decfsz	??_main^0,f,c
   703   000C00  D7FC               	bra	u1167
   704   000C02  2E18               	decfsz	(??_main+1)^0,f,c
   705   000C04  D7FA               	bra	u1167
   706                           
   707                           ;Lab5.c: 94: BorraLCD();
   708   000C06  EC95  F009         	call	_BorraLCD	;wreg free
   709                           
   710                           ;Lab5.c: 95: _delay((unsigned long)((500)*(8000000/4000.0)));
   711   000C0A  0E06               	movlw	6
   712   000C0C  6E18               	movwf	(??_main+1)^0,c
   713   000C0E  0E13               	movlw	19
   714   000C10  6E17               	movwf	??_main^0,c
   715   000C12  0EAE               	movlw	174
   716   000C14                     u1177:
   717   000C14  2EE8               	decfsz	wreg,f,c
   718   000C16  D7FE               	bra	u1177
   719   000C18  2E17               	decfsz	??_main^0,f,c
   720   000C1A  D7FC               	bra	u1177
   721   000C1C  2E18               	decfsz	(??_main+1)^0,f,c
   722   000C1E  D7FA               	bra	u1177
   723                           
   724                           ;Lab5.c: 97: MensajeLCD_Var("Temp:");
   725   000C20  0E18               	movlw	low STR_3
   726   000C22  6E08               	movwf	MensajeLCD_Var@a^0,c
   727   000C24  EC3E  F008         	call	_MensajeLCD_Var	;wreg free
   728                           
   729                           ;Lab5.c: 98: _delay((unsigned long)((500)*(8000000/4000.0)));
   730   000C28  0E06               	movlw	6
   731   000C2A  6E18               	movwf	(??_main+1)^0,c
   732   000C2C  0E13               	movlw	19
   733   000C2E  6E17               	movwf	??_main^0,c
   734   000C30  0EAE               	movlw	174
   735   000C32                     u1187:
   736   000C32  2EE8               	decfsz	wreg,f,c
   737   000C34  D7FE               	bra	u1187
   738   000C36  2E17               	decfsz	??_main^0,f,c
   739   000C38  D7FC               	bra	u1187
   740   000C3A  2E18               	decfsz	(??_main+1)^0,f,c
   741   000C3C  D7FA               	bra	u1187
   742                           
   743                           ;Lab5.c: 99: DireccionaLCD(0xC0);
   744   000C3E  0EC0               	movlw	192
   745   000C40  EC7F  F009         	call	_DireccionaLCD
   746                           
   747                           ;Lab5.c: 100: MensajeLCD_Var("Hum:");
   748   000C44  0E1E               	movlw	low STR_4
   749   000C46  6E08               	movwf	MensajeLCD_Var@a^0,c
   750   000C48  EC3E  F008         	call	_MensajeLCD_Var	;wreg free
   751   000C4C                     l205:
   752                           
   753                           ;Lab5.c: 102: _delay((unsigned long)((500)*(8000000/4000.0)));
   754   000C4C  0E06               	movlw	6
   755   000C4E  6E18               	movwf	(??_main+1)^0,c
   756   000C50  0E13               	movlw	19
   757   000C52  6E17               	movwf	??_main^0,c
   758   000C54  0EAE               	movlw	174
   759   000C56                     u1197:
   760   000C56  2EE8               	decfsz	wreg,f,c
   761   000C58  D7FE               	bra	u1197
   762   000C5A  2E17               	decfsz	??_main^0,f,c
   763   000C5C  D7FC               	bra	u1197
   764   000C5E  2E18               	decfsz	(??_main+1)^0,f,c
   765   000C60  D7FA               	bra	u1197
   766                           
   767                           ;Lab5.c: 104: _delay((unsigned long)((500)*(8000000/4000.0)));
   768   000C62  0E06               	movlw	6
   769   000C64  6E18               	movwf	(??_main+1)^0,c
   770   000C66  0E13               	movlw	19
   771   000C68  6E17               	movwf	??_main^0,c
   772   000C6A  0EAE               	movlw	174
   773   000C6C                     u1207:
   774   000C6C  2EE8               	decfsz	wreg,f,c
   775   000C6E  D7FE               	bra	u1207
   776   000C70  2E17               	decfsz	??_main^0,f,c
   777   000C72  D7FC               	bra	u1207
   778   000C74  2E18               	decfsz	(??_main+1)^0,f,c
   779   000C76  D7FA               	bra	u1207
   780                           
   781                           ;Lab5.c: 106: LeerDHT11();
   782   000C78  ECC8  F008         	call	_LeerDHT11	;wreg free
   783                           
   784                           ;Lab5.c: 107: _delay((unsigned long)((100)*(8000000/4000.0)));
   785   000C7C  0E02               	movlw	2
   786   000C7E  6E18               	movwf	(??_main+1)^0,c
   787   000C80  0E04               	movlw	4
   788   000C82  6E17               	movwf	??_main^0,c
   789   000C84  0EBA               	movlw	186
   790   000C86                     u1217:
   791   000C86  2EE8               	decfsz	wreg,f,c
   792   000C88  D7FE               	bra	u1217
   793   000C8A  2E17               	decfsz	??_main^0,f,c
   794   000C8C  D7FC               	bra	u1217
   795   000C8E  2E18               	decfsz	(??_main+1)^0,f,c
   796   000C90  D7FA               	bra	u1217
   797   000C92  D000               	nop2	
   798                           
   799                           ;Lab5.c: 109: SaveData(0, Temperatura);
   800   000C94  0E00               	movlw	0
   801   000C96  6E04               	movwf	(SaveData@dir+1)^0,c
   802   000C98  0E00               	movlw	0
   803   000C9A  6E03               	movwf	SaveData@dir^0,c
   804   000C9C  C01F  F005         	movff	_Temperatura,SaveData@dato
   805   000CA0  EC4F  F009         	call	_SaveData	;wreg free
   806                           
   807                           ;Lab5.c: 110: _delay((unsigned long)((100)*(8000000/4000.0)));
   808   000CA4  0E02               	movlw	2
   809   000CA6  6E18               	movwf	(??_main+1)^0,c
   810   000CA8  0E04               	movlw	4
   811   000CAA  6E17               	movwf	??_main^0,c
   812   000CAC  0EBA               	movlw	186
   813   000CAE                     u1227:
   814   000CAE  2EE8               	decfsz	wreg,f,c
   815   000CB0  D7FE               	bra	u1227
   816   000CB2  2E17               	decfsz	??_main^0,f,c
   817   000CB4  D7FC               	bra	u1227
   818   000CB6  2E18               	decfsz	(??_main+1)^0,f,c
   819   000CB8  D7FA               	bra	u1227
   820   000CBA  D000               	nop2	
   821                           
   822                           ;Lab5.c: 112: ColorRGB(Temperatura);
   823   000CBC  C01F  F003         	movff	_Temperatura,ColorRGB@val
   824   000CC0  6A04               	clrf	(ColorRGB@val+1)^0,c
   825   000CC2  EC99  F006         	call	_ColorRGB	;wreg free
   826                           
   827                           ;Lab5.c: 113: _delay((unsigned long)((100)*(8000000/4000.0)));
   828   000CC6  0E02               	movlw	2
   829   000CC8  6E18               	movwf	(??_main+1)^0,c
   830   000CCA  0E04               	movlw	4
   831   000CCC  6E17               	movwf	??_main^0,c
   832   000CCE  0EBA               	movlw	186
   833   000CD0                     u1237:
   834   000CD0  2EE8               	decfsz	wreg,f,c
   835   000CD2  D7FE               	bra	u1237
   836   000CD4  2E17               	decfsz	??_main^0,f,c
   837   000CD6  D7FC               	bra	u1237
   838   000CD8  2E18               	decfsz	(??_main+1)^0,f,c
   839   000CDA  D7FA               	bra	u1237
   840   000CDC  D000               	nop2	
   841                           
   842                           ;Lab5.c: 115: if(!RC4) TransmitirDatos(RB1, RB2);
   843   000CDE  B882               	btfsc	3970,4,c	;volatile
   844   000CE0  D011               	goto	l2067
   845   000CE2  A281               	btfss	3969,1,c	;volatile
   846   000CE4  D002               	goto	u1060
   847   000CE6  0E01               	movlw	1
   848   000CE8  D001               	goto	u1070
   849   000CEA                     u1060:
   850   000CEA  0E00               	movlw	0
   851   000CEC                     u1070:
   852   000CEC  6E0B               	movwf	TransmitirDatos@Ent1^0,c
   853   000CEE  6A0C               	clrf	(TransmitirDatos@Ent1+1)^0,c
   854   000CF0  A481               	btfss	3969,2,c	;volatile
   855   000CF2  D002               	goto	u1080
   856   000CF4  0E01               	movlw	1
   857   000CF6  D001               	goto	u1090
   858   000CF8                     u1080:
   859   000CF8  0E00               	movlw	0
   860   000CFA                     u1090:
   861   000CFA  6E0D               	movwf	TransmitirDatos@Ent2^0,c
   862   000CFC  6A0E               	clrf	(TransmitirDatos@Ent2+1)^0,c
   863   000CFE  EC12  F004         	call	_TransmitirDatos	;wreg free
   864   000D02  D00A               	goto	l2069
   865   000D04                     l2067:
   866                           
   867                           ;Lab5.c: 116: else TransmitirDatos(A, B);
   868   000D04  C01B  F00B         	movff	_A,TransmitirDatos@Ent1
   869   000D08  C01C  F00C         	movff	_A+1,TransmitirDatos@Ent1+1
   870   000D0C  C019  F00D         	movff	_B,TransmitirDatos@Ent2
   871   000D10  C01A  F00E         	movff	_B+1,TransmitirDatos@Ent2+1
   872   000D14  EC12  F004         	call	_TransmitirDatos	;wreg free
   873   000D18                     l2069:
   874                           
   875                           ;Lab5.c: 117: ADC_Conv(0);
   876   000D18  0E00               	movlw	0
   877   000D1A  EC9F  F009         	call	_ADC_Conv
   878                           
   879                           ;Lab5.c: 118: if (ADRES <= 511){
   880   000D1E  0E00               	movlw	0
   881   000D20  5CC3               	subwf	195,w,c	;volatile
   882   000D22  0E02               	movlw	2
   883   000D24  58C4               	subwfb	196,w,c	;volatile
   884   000D26  B0D8               	btfsc	status,0,c
   885   000D28  D002               	goto	l208
   886                           
   887                           ;Lab5.c: 119: RB0 = 0;
   888   000D2A  9081               	bcf	3969,0,c	;volatile
   889                           
   890                           ;Lab5.c: 120: }else{
   891   000D2C  D78F               	goto	l205
   892   000D2E                     l208:
   893                           
   894                           ;Lab5.c: 121: RB0 = 1;
   895   000D2E  8081               	bsf	3969,0,c	;volatile
   896   000D30  D78D               	goto	l205
   897   000D32                     __end_of_main:
   898                           	callstack 0
   899                           
   900 ;; *************** function _TransmitirDatos *****************
   901 ;; Defined at:
   902 ;;		line 174 in file "Lab5.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;  Ent1            2   10[COMRAM] unsigned int 
   905 ;;  Ent2            2   12[COMRAM] unsigned int 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  TempC           2   20[COMRAM] unsigned int 
   908 ;;  Simb            2   18[COMRAM] unsigned int 
   909 ;;  n               2   16[COMRAM] unsigned int 
   910 ;;  HumC            2    0        unsigned int 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   920 ;;      Params:         4       0       0       0       0       0       0       0       0
   921 ;;      Locals:         6       0       0       0       0       0       0       0       0
   922 ;;      Temps:          2       0       0       0       0       0       0       0       0
   923 ;;      Totals:        12       0       0       0       0       0       0       0       0
   924 ;;Total ram usage:       12 bytes
   925 ;; Hardware stack levels used: 1
   926 ;; Hardware stack levels required when called: 5
   927 ;; This function calls:
   928 ;;		_DireccionaLCD
   929 ;;		_EscribeLCD_c
   930 ;;		_Transmitir
   931 ;;		___awdiv
   932 ;;		___lbdiv
   933 ;;		___lbmod
   934 ;;		___lwdiv
   935 ;;		___lwmod
   936 ;;		___wmul
   937 ;; This function is called by:
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text1
   943   000824                     __ptext1:
   944                           	callstack 0
   945   000824                     _TransmitirDatos:
   946                           	callstack 25
   947                           
   948                           ;Lab5.c: 175: unsigned int n = Ent1 * 10 + Ent2, TempC = Temperatura, HumC = Humedad;
   949                           
   950                           ;incstack = 0
   951   000824  C00B  F003         	movff	TransmitirDatos@Ent1,___wmul@multiplier
   952   000828  C00C  F004         	movff	TransmitirDatos@Ent1+1,___wmul@multiplier+1
   953   00082C  0E00               	movlw	0
   954   00082E  6E06               	movwf	(___wmul@multiplicand+1)^0,c
   955   000830  0E0A               	movlw	10
   956   000832  6E05               	movwf	___wmul@multiplicand^0,c
   957   000834  EC3C  F009         	call	___wmul	;wreg free
   958   000838  500D               	movf	TransmitirDatos@Ent2^0,w,c
   959   00083A  2403               	addwf	?___wmul^0,w,c
   960   00083C  6E11               	movwf	TransmitirDatos@n^0,c
   961   00083E  500E               	movf	(TransmitirDatos@Ent2+1)^0,w,c
   962   000840  2004               	addwfc	(?___wmul+1)^0,w,c
   963   000842  6E12               	movwf	(TransmitirDatos@n+1)^0,c
   964   000844  C01F  F015         	movff	_Temperatura,TransmitirDatos@TempC
   965   000848  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
   966                           
   967                           ;Lab5.c: 176: unsigned int Simb = 67;
   968   00084A  0E00               	movlw	0
   969   00084C  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   970   00084E  0E43               	movlw	67
   971   000850  6E13               	movwf	TransmitirDatos@Simb^0,c
   972                           
   973                           ;Lab5.c: 177: switch (n) {
   974   000852  D03E               	goto	l1903
   975   000854                     l253:
   976                           
   977                           ;Lab5.c: 179: TempC = Temperatura;
   978   000854  C01F  F015         	movff	_Temperatura,TransmitirDatos@TempC
   979   000858  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
   980                           
   981                           ;Lab5.c: 180: Simb = 67;
   982   00085A  0E00               	movlw	0
   983   00085C  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   984   00085E  0E43               	movlw	67
   985   000860  D035               	goto	L3
   986   000862                     l1889:
   987                           
   988                           ;Lab5.c: 183: TempC = Temperatura + 273;
   989   000862  0E11               	movlw	17
   990   000864  241F               	addwf	_Temperatura^0,w,c
   991   000866  6E15               	movwf	TransmitirDatos@TempC^0,c
   992   000868  6A16               	clrf	(TransmitirDatos@TempC+1)^0,c
   993   00086A  0E01               	movlw	1
   994   00086C  2216               	addwfc	(TransmitirDatos@TempC+1)^0,f,c
   995                           
   996                           ;Lab5.c: 184: Simb = 75;
   997   00086E  0E00               	movlw	0
   998   000870  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
   999   000872  0E4B               	movlw	75
  1000   000874  D02B               	goto	L3
  1001   000876                     l1893:
  1002                           
  1003                           ;Lab5.c: 187: TempC = Temperatura * 9 / 5 + 492;
  1004   000876  501F               	movf	_Temperatura^0,w,c
  1005   000878  0D09               	mullw	9
  1006   00087A  CFF3 F003          	movff	prodl,___awdiv@dividend
  1007   00087E  CFF4 F004          	movff	prodh,___awdiv@dividend+1
  1008   000882  0E00               	movlw	0
  1009   000884  6E06               	movwf	(___awdiv@divisor+1)^0,c
  1010   000886  0E05               	movlw	5
  1011   000888  6E05               	movwf	___awdiv@divisor^0,c
  1012   00088A  ECA0  F007         	call	___awdiv	;wreg free
  1013   00088E  0EEC               	movlw	236
  1014   000890  2403               	addwf	?___awdiv^0,w,c
  1015   000892  6E15               	movwf	TransmitirDatos@TempC^0,c
  1016   000894  0E01               	movlw	1
  1017   000896  2004               	addwfc	(?___awdiv+1)^0,w,c
  1018   000898  6E16               	movwf	(TransmitirDatos@TempC+1)^0,c
  1019                           
  1020                           ;Lab5.c: 188: Simb = 82;
  1021   00089A  0E00               	movlw	0
  1022   00089C  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
  1023   00089E  0E52               	movlw	82
  1024   0008A0  D015               	goto	L3
  1025   0008A2                     l1897:
  1026                           
  1027                           ;Lab5.c: 191: TempC = Temperatura * 9 / 5 + 32;
  1028   0008A2  501F               	movf	_Temperatura^0,w,c
  1029   0008A4  0D09               	mullw	9
  1030   0008A6  CFF3 F003          	movff	prodl,___awdiv@dividend
  1031   0008AA  CFF4 F004          	movff	prodh,___awdiv@dividend+1
  1032   0008AE  0E00               	movlw	0
  1033   0008B0  6E06               	movwf	(___awdiv@divisor+1)^0,c
  1034   0008B2  0E05               	movlw	5
  1035   0008B4  6E05               	movwf	___awdiv@divisor^0,c
  1036   0008B6  ECA0  F007         	call	___awdiv	;wreg free
  1037   0008BA  0E20               	movlw	32
  1038   0008BC  2403               	addwf	?___awdiv^0,w,c
  1039   0008BE  6E15               	movwf	TransmitirDatos@TempC^0,c
  1040   0008C0  0E00               	movlw	0
  1041   0008C2  2004               	addwfc	(?___awdiv+1)^0,w,c
  1042   0008C4  6E16               	movwf	(TransmitirDatos@TempC+1)^0,c
  1043                           
  1044                           ;Lab5.c: 192: Simb = 70;
  1045   0008C6  0E00               	movlw	0
  1046   0008C8  6E14               	movwf	(TransmitirDatos@Simb+1)^0,c
  1047   0008CA  0E46               	movlw	70
  1048   0008CC                     L3:
  1049   0008CC  6E13               	movwf	TransmitirDatos@Simb^0,c
  1050                           
  1051                           ;Lab5.c: 193: break;
  1052   0008CE  D015               	goto	l1905
  1053   0008D0                     l1903:
  1054   0008D0  C011  F00F         	movff	TransmitirDatos@n,??_TransmitirDatos
  1055   0008D4  C012  F010         	movff	TransmitirDatos@n+1,??_TransmitirDatos+1
  1056                           
  1057                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1058                           ; Switch size 1, requested type "simple"
  1059                           ; Number of cases is 1, Range of values is 0 to 0
  1060                           ; switch strategies available:
  1061                           ; Name         Instructions Cycles
  1062                           ; simple_byte            4     3 (average)
  1063                           ;	Chosen strategy is simple_byte
  1064   0008D8  5010               	movf	(??_TransmitirDatos+1)^0,w,c
  1065   0008DA  0A00               	xorlw	0	; case 0
  1066   0008DC  A4D8               	btfss	status,2,c
  1067   0008DE  D00D               	goto	l1905
  1068                           
  1069                           ; Switch size 1, requested type "simple"
  1070                           ; Number of cases is 4, Range of values is 0 to 11
  1071                           ; switch strategies available:
  1072                           ; Name         Instructions Cycles
  1073                           ; simple_byte           13     7 (average)
  1074                           ;	Chosen strategy is simple_byte
  1075   0008E0  500F               	movf	??_TransmitirDatos^0,w,c
  1076   0008E2  0A00               	xorlw	0	; case 0
  1077   0008E4  B4D8               	btfsc	status,2,c
  1078   0008E6  D7B6               	goto	l253
  1079   0008E8  0A01               	xorlw	1	; case 1
  1080   0008EA  B4D8               	btfsc	status,2,c
  1081   0008EC  D7BA               	goto	l1889
  1082   0008EE  0A0B               	xorlw	11	; case 10
  1083   0008F0  B4D8               	btfsc	status,2,c
  1084   0008F2  D7C1               	goto	l1893
  1085   0008F4  0A01               	xorlw	1	; case 11
  1086   0008F6  B4D8               	btfsc	status,2,c
  1087   0008F8  D7D4               	goto	l1897
  1088   0008FA                     l1905:
  1089                           
  1090                           ;Lab5.c: 195: Transmitir('T');
  1091   0008FA  0E54               	movlw	84
  1092   0008FC  ECB7  F009         	call	_Transmitir
  1093                           
  1094                           ;Lab5.c: 196: Transmitir('e');
  1095   000900  0E65               	movlw	101
  1096   000902  ECB7  F009         	call	_Transmitir
  1097                           
  1098                           ;Lab5.c: 197: Transmitir('m');
  1099   000906  0E6D               	movlw	109
  1100   000908  ECB7  F009         	call	_Transmitir
  1101                           
  1102                           ;Lab5.c: 198: Transmitir('p');
  1103   00090C  0E70               	movlw	112
  1104   00090E  ECB7  F009         	call	_Transmitir
  1105                           
  1106                           ;Lab5.c: 199: Transmitir(':');
  1107   000912  0E3A               	movlw	58
  1108   000914  ECB7  F009         	call	_Transmitir
  1109                           
  1110                           ;Lab5.c: 200: Transmitir(' ');
  1111   000918  0E20               	movlw	32
  1112   00091A  ECB7  F009         	call	_Transmitir
  1113                           
  1114                           ;Lab5.c: 202: DireccionaLCD(0x85);
  1115   00091E  0E85               	movlw	133
  1116   000920  EC7F  F009         	call	_DireccionaLCD
  1117                           
  1118                           ;Lab5.c: 203: if (TempC / 100 > 0) {
  1119   000924  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1120   000928  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1121   00092C  0E00               	movlw	0
  1122   00092E  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1123   000930  0E64               	movlw	100
  1124   000932  6E05               	movwf	___lwdiv@divisor^0,c
  1125   000934  EC15  F008         	call	___lwdiv	;wreg free
  1126   000938  5003               	movf	?___lwdiv^0,w,c
  1127   00093A  1004               	iorwf	(?___lwdiv+1)^0,w,c
  1128   00093C  B4D8               	btfsc	status,2,c
  1129   00093E  D02A               	goto	l258
  1130                           
  1131                           ;Lab5.c: 204: Transmitir(TempC / 100 + 48);
  1132   000940  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1133   000944  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1134   000948  0E00               	movlw	0
  1135   00094A  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1136   00094C  0E64               	movlw	100
  1137   00094E  6E05               	movwf	___lwdiv@divisor^0,c
  1138   000950  EC15  F008         	call	___lwdiv	;wreg free
  1139   000954  5003               	movf	?___lwdiv^0,w,c
  1140   000956  0F30               	addlw	48
  1141   000958  ECB7  F009         	call	_Transmitir
  1142                           
  1143                           ;Lab5.c: 205: EscribeLCD_c(TempC / 100 + 48);
  1144   00095C  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1145   000960  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1146   000964  0E00               	movlw	0
  1147   000966  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1148   000968  0E64               	movlw	100
  1149   00096A  6E05               	movwf	___lwdiv@divisor^0,c
  1150   00096C  EC15  F008         	call	___lwdiv	;wreg free
  1151   000970  5003               	movf	?___lwdiv^0,w,c
  1152   000972  0F30               	addlw	48
  1153   000974  EC8A  F009         	call	_EscribeLCD_c
  1154                           
  1155                           ;Lab5.c: 206: TempC = TempC % 100;
  1156   000978  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1157   00097C  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1158   000980  0E00               	movlw	0
  1159   000982  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1160   000984  0E64               	movlw	100
  1161   000986  6E05               	movwf	___lwmod@divisor^0,c
  1162   000988  EC8A  F008         	call	___lwmod	;wreg free
  1163   00098C  C003  F015         	movff	?___lwmod,TransmitirDatos@TempC
  1164   000990  C004  F016         	movff	?___lwmod+1,TransmitirDatos@TempC+1
  1165   000994                     l258:
  1166                           
  1167                           ;Lab5.c: 207: };Lab5.c: 208: Transmitir(TempC / 10 + 48);
  1168   000994  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1169   000998  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1170   00099C  0E00               	movlw	0
  1171   00099E  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1172   0009A0  0E0A               	movlw	10
  1173   0009A2  6E05               	movwf	___lwdiv@divisor^0,c
  1174   0009A4  EC15  F008         	call	___lwdiv	;wreg free
  1175   0009A8  5003               	movf	?___lwdiv^0,w,c
  1176   0009AA  0F30               	addlw	48
  1177   0009AC  ECB7  F009         	call	_Transmitir
  1178                           
  1179                           ;Lab5.c: 209: Transmitir(TempC % 10 + 48);
  1180   0009B0  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1181   0009B4  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1182   0009B8  0E00               	movlw	0
  1183   0009BA  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1184   0009BC  0E0A               	movlw	10
  1185   0009BE  6E05               	movwf	___lwmod@divisor^0,c
  1186   0009C0  EC8A  F008         	call	___lwmod	;wreg free
  1187   0009C4  5003               	movf	?___lwmod^0,w,c
  1188   0009C6  0F30               	addlw	48
  1189   0009C8  ECB7  F009         	call	_Transmitir
  1190                           
  1191                           ;Lab5.c: 210: Transmitir(Simb);
  1192   0009CC  5013               	movf	TransmitirDatos@Simb^0,w,c
  1193   0009CE  ECB7  F009         	call	_Transmitir
  1194                           
  1195                           ;Lab5.c: 211: Transmitir(' ');
  1196   0009D2  0E20               	movlw	32
  1197   0009D4  ECB7  F009         	call	_Transmitir
  1198                           
  1199                           ;Lab5.c: 212: Transmitir('\n');
  1200   0009D8  0E0A               	movlw	10
  1201   0009DA  ECB7  F009         	call	_Transmitir
  1202                           
  1203                           ;Lab5.c: 213: Transmitir('H');
  1204   0009DE  0E48               	movlw	72
  1205   0009E0  ECB7  F009         	call	_Transmitir
  1206                           
  1207                           ;Lab5.c: 214: Transmitir('u');
  1208   0009E4  0E75               	movlw	117
  1209   0009E6  ECB7  F009         	call	_Transmitir
  1210                           
  1211                           ;Lab5.c: 215: Transmitir('m');
  1212   0009EA  0E6D               	movlw	109
  1213   0009EC  ECB7  F009         	call	_Transmitir
  1214                           
  1215                           ;Lab5.c: 216: Transmitir(':');
  1216   0009F0  0E3A               	movlw	58
  1217   0009F2  ECB7  F009         	call	_Transmitir
  1218                           
  1219                           ;Lab5.c: 217: Transmitir(' ');
  1220   0009F6  0E20               	movlw	32
  1221   0009F8  ECB7  F009         	call	_Transmitir
  1222                           
  1223                           ;Lab5.c: 218: Transmitir(Humedad / 10 + 48);
  1224   0009FC  0E0A               	movlw	10
  1225   0009FE  6E03               	movwf	___lbdiv@divisor^0,c
  1226   000A00  501E               	movf	_Humedad^0,w,c
  1227   000A02  ECAB  F008         	call	___lbdiv
  1228   000A06  0F30               	addlw	48
  1229   000A08  ECB7  F009         	call	_Transmitir
  1230                           
  1231                           ;Lab5.c: 219: Transmitir(Humedad % 10 + 48);
  1232   000A0C  0E0A               	movlw	10
  1233   000A0E  6E03               	movwf	___lbmod@divisor^0,c
  1234   000A10  501E               	movf	_Humedad^0,w,c
  1235   000A12  EC13  F009         	call	___lbmod
  1236   000A16  0F30               	addlw	48
  1237   000A18  ECB7  F009         	call	_Transmitir
  1238                           
  1239                           ;Lab5.c: 220: Transmitir(' ');
  1240   000A1C  0E20               	movlw	32
  1241   000A1E  ECB7  F009         	call	_Transmitir
  1242                           
  1243                           ;Lab5.c: 221: Transmitir('%');
  1244   000A22  0E25               	movlw	37
  1245   000A24  ECB7  F009         	call	_Transmitir
  1246                           
  1247                           ;Lab5.c: 222: Transmitir('\n');
  1248   000A28  0E0A               	movlw	10
  1249   000A2A  ECB7  F009         	call	_Transmitir
  1250                           
  1251                           ;Lab5.c: 223: Transmitir(' ');
  1252   000A2E  0E20               	movlw	32
  1253   000A30  ECB7  F009         	call	_Transmitir
  1254                           
  1255                           ;Lab5.c: 225: EscribeLCD_c(TempC / 10 + 48);
  1256   000A34  C015  F003         	movff	TransmitirDatos@TempC,___lwdiv@dividend
  1257   000A38  C016  F004         	movff	TransmitirDatos@TempC+1,___lwdiv@dividend+1
  1258   000A3C  0E00               	movlw	0
  1259   000A3E  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  1260   000A40  0E0A               	movlw	10
  1261   000A42  6E05               	movwf	___lwdiv@divisor^0,c
  1262   000A44  EC15  F008         	call	___lwdiv	;wreg free
  1263   000A48  5003               	movf	?___lwdiv^0,w,c
  1264   000A4A  0F30               	addlw	48
  1265   000A4C  EC8A  F009         	call	_EscribeLCD_c
  1266                           
  1267                           ;Lab5.c: 226: EscribeLCD_c(TempC % 10 + 48);
  1268   000A50  C015  F003         	movff	TransmitirDatos@TempC,___lwmod@dividend
  1269   000A54  C016  F004         	movff	TransmitirDatos@TempC+1,___lwmod@dividend+1
  1270   000A58  0E00               	movlw	0
  1271   000A5A  6E06               	movwf	(___lwmod@divisor+1)^0,c
  1272   000A5C  0E0A               	movlw	10
  1273   000A5E  6E05               	movwf	___lwmod@divisor^0,c
  1274   000A60  EC8A  F008         	call	___lwmod	;wreg free
  1275   000A64  5003               	movf	?___lwmod^0,w,c
  1276   000A66  0F30               	addlw	48
  1277   000A68  EC8A  F009         	call	_EscribeLCD_c
  1278                           
  1279                           ;Lab5.c: 227: if (Simb==70 | Simb == 67) EscribeLCD_c(223);
  1280   000A6C  0E46               	movlw	70
  1281   000A6E  1813               	xorwf	TransmitirDatos@Simb^0,w,c
  1282   000A70  1014               	iorwf	(TransmitirDatos@Simb+1)^0,w,c
  1283   000A72  B4D8               	btfsc	status,2,c
  1284   000A74  D005               	goto	u1030
  1285   000A76  0E43               	movlw	67
  1286   000A78  1813               	xorwf	TransmitirDatos@Simb^0,w,c
  1287   000A7A  1014               	iorwf	(TransmitirDatos@Simb+1)^0,w,c
  1288   000A7C  A4D8               	btfss	status,2,c
  1289   000A7E  D003               	goto	l259
  1290   000A80                     u1030:
  1291   000A80  0EDF               	movlw	223
  1292   000A82  EC8A  F009         	call	_EscribeLCD_c
  1293   000A86                     l259:
  1294                           
  1295                           ;Lab5.c: 228: EscribeLCD_c(Simb);
  1296   000A86  5013               	movf	TransmitirDatos@Simb^0,w,c
  1297   000A88  EC8A  F009         	call	_EscribeLCD_c
  1298                           
  1299                           ;Lab5.c: 229: EscribeLCD_c(' ');
  1300   000A8C  0E20               	movlw	32
  1301   000A8E  EC8A  F009         	call	_EscribeLCD_c
  1302                           
  1303                           ;Lab5.c: 230: DireccionaLCD(0xC4);
  1304   000A92  0EC4               	movlw	196
  1305   000A94  EC7F  F009         	call	_DireccionaLCD
  1306                           
  1307                           ;Lab5.c: 231: EscribeLCD_c(Humedad / 10 + 48);
  1308   000A98  0E0A               	movlw	10
  1309   000A9A  6E03               	movwf	___lbdiv@divisor^0,c
  1310   000A9C  501E               	movf	_Humedad^0,w,c
  1311   000A9E  ECAB  F008         	call	___lbdiv
  1312   000AA2  0F30               	addlw	48
  1313   000AA4  EC8A  F009         	call	_EscribeLCD_c
  1314                           
  1315                           ;Lab5.c: 232: EscribeLCD_c(Humedad % 10 + 48);
  1316   000AA8  0E0A               	movlw	10
  1317   000AAA  6E03               	movwf	___lbmod@divisor^0,c
  1318   000AAC  501E               	movf	_Humedad^0,w,c
  1319   000AAE  EC13  F009         	call	___lbmod
  1320   000AB2  0F30               	addlw	48
  1321   000AB4  EC8A  F009         	call	_EscribeLCD_c
  1322                           
  1323                           ;Lab5.c: 233: EscribeLCD_c('%');
  1324   000AB8  0E25               	movlw	37
  1325   000ABA  EC8A  F009         	call	_EscribeLCD_c
  1326   000ABE  0012               	return		;funcret
  1327   000AC0                     __end_of_TransmitirDatos:
  1328                           	callstack 0
  1329                           
  1330 ;; *************** function ___wmul *****************
  1331 ;; Defined at:
  1332 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  multiplier      2    2[COMRAM] unsigned int 
  1335 ;;  multiplicand    2    4[COMRAM] unsigned int 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  product         2    6[COMRAM] unsigned int 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  2    2[COMRAM] unsigned int 
  1340 ;; Registers used:
  1341 ;;		wreg, status,2, status,0, prodl, prodh
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1347 ;;      Params:         4       0       0       0       0       0       0       0       0
  1348 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1350 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1351 ;;Total ram usage:        6 bytes
  1352 ;; Hardware stack levels used: 1
  1353 ;; Hardware stack levels required when called: 2
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_TransmitirDatos
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text2
  1362   001278                     __ptext2:
  1363                           	callstack 0
  1364   001278                     ___wmul:
  1365                           	callstack 27
  1366                           
  1367                           ;incstack = 0
  1368   001278  5003               	movf	___wmul@multiplier^0,w,c
  1369   00127A  0205               	mulwf	___wmul@multiplicand^0,c
  1370   00127C  CFF3 F007          	movff	prodl,___wmul@product
  1371   001280  CFF4 F008          	movff	prodh,___wmul@product+1
  1372   001284  5003               	movf	___wmul@multiplier^0,w,c
  1373   001286  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  1374   001288  50F3               	movf	243,w,c
  1375   00128A  2608               	addwf	(___wmul@product+1)^0,f,c
  1376   00128C  5004               	movf	(___wmul@multiplier+1)^0,w,c
  1377   00128E  0205               	mulwf	___wmul@multiplicand^0,c
  1378   001290  50F3               	movf	243,w,c
  1379   001292  2608               	addwf	(___wmul@product+1)^0,f,c
  1380   001294  C007  F003         	movff	___wmul@product,?___wmul
  1381   001298  C008  F004         	movff	___wmul@product+1,?___wmul+1
  1382   00129C  0012               	return		;funcret
  1383   00129E                     __end_of___wmul:
  1384                           	callstack 0
  1385                           
  1386 ;; *************** function ___lwmod *****************
  1387 ;; Defined at:
  1388 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;  dividend        2    2[COMRAM] unsigned int 
  1391 ;;  divisor         2    4[COMRAM] unsigned int 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  counter         1    6[COMRAM] unsigned char 
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  2    2[COMRAM] unsigned int 
  1396 ;; Registers used:
  1397 ;;		wreg, status,2, status,0
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1403 ;;      Params:         4       0       0       0       0       0       0       0       0
  1404 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1406 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1407 ;;Total ram usage:        5 bytes
  1408 ;; Hardware stack levels used: 1
  1409 ;; Hardware stack levels required when called: 2
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_TransmitirDatos
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text3
  1418   001114                     __ptext3:
  1419                           	callstack 0
  1420   001114                     ___lwmod:
  1421                           	callstack 27
  1422                           
  1423                           ;incstack = 0
  1424   001114  5005               	movf	___lwmod@divisor^0,w,c
  1425   001116  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  1426   001118  B4D8               	btfsc	status,2,c
  1427   00111A  D018               	goto	l801
  1428   00111C  0E01               	movlw	1
  1429   00111E  6E07               	movwf	___lwmod@counter^0,c
  1430   001120  D004               	goto	l1799
  1431   001122                     l1797:
  1432   001122  90D8               	bcf	status,0,c
  1433   001124  3605               	rlcf	___lwmod@divisor^0,f,c
  1434   001126  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  1435   001128  2A07               	incf	___lwmod@counter^0,f,c
  1436   00112A                     l1799:
  1437   00112A  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  1438   00112C  D7FA               	goto	l1797
  1439   00112E                     u820:
  1440   00112E  5005               	movf	___lwmod@divisor^0,w,c
  1441   001130  5C03               	subwf	___lwmod@dividend^0,w,c
  1442   001132  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1443   001134  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  1444   001136  A0D8               	btfss	status,0,c
  1445   001138  D004               	goto	l1805
  1446   00113A  5005               	movf	___lwmod@divisor^0,w,c
  1447   00113C  5E03               	subwf	___lwmod@dividend^0,f,c
  1448   00113E  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1449   001140  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  1450   001142                     l1805:
  1451   001142  90D8               	bcf	status,0,c
  1452   001144  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  1453   001146  3205               	rrcf	___lwmod@divisor^0,f,c
  1454   001148  2E07               	decfsz	___lwmod@counter^0,f,c
  1455   00114A  D7F1               	goto	u820
  1456   00114C                     l801:
  1457   00114C  C003  F003         	movff	___lwmod@dividend,?___lwmod
  1458   001150  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  1459   001154  0012               	return		;funcret
  1460   001156                     __end_of___lwmod:
  1461                           	callstack 0
  1462                           
  1463 ;; *************** function ___lwdiv *****************
  1464 ;; Defined at:
  1465 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  dividend        2    2[COMRAM] unsigned int 
  1468 ;;  divisor         2    4[COMRAM] unsigned int 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  quotient        2    6[COMRAM] unsigned int 
  1471 ;;  counter         1    8[COMRAM] unsigned char 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  2    2[COMRAM] unsigned int 
  1474 ;; Registers used:
  1475 ;;		wreg, status,2, status,0
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1481 ;;      Params:         4       0       0       0       0       0       0       0       0
  1482 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1484 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1485 ;;Total ram usage:        7 bytes
  1486 ;; Hardware stack levels used: 1
  1487 ;; Hardware stack levels required when called: 2
  1488 ;; This function calls:
  1489 ;;		Nothing
  1490 ;; This function is called by:
  1491 ;;		_TransmitirDatos
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           	psect	text4
  1496   00102A                     __ptext4:
  1497                           	callstack 0
  1498   00102A                     ___lwdiv:
  1499                           	callstack 27
  1500                           
  1501                           ;incstack = 0
  1502   00102A  0E00               	movlw	0
  1503   00102C  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  1504   00102E  0E00               	movlw	0
  1505   001030  6E07               	movwf	___lwdiv@quotient^0,c
  1506   001032  5005               	movf	___lwdiv@divisor^0,w,c
  1507   001034  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1508   001036  B4D8               	btfsc	status,2,c
  1509   001038  D01C               	goto	l791
  1510   00103A  0E01               	movlw	1
  1511   00103C  6E09               	movwf	___lwdiv@counter^0,c
  1512   00103E  D004               	goto	l1779
  1513   001040                     l1777:
  1514   001040  90D8               	bcf	status,0,c
  1515   001042  3605               	rlcf	___lwdiv@divisor^0,f,c
  1516   001044  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1517   001046  2A09               	incf	___lwdiv@counter^0,f,c
  1518   001048                     l1779:
  1519   001048  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  1520   00104A  D7FA               	goto	l1777
  1521   00104C                     u790:
  1522   00104C  90D8               	bcf	status,0,c
  1523   00104E  3607               	rlcf	___lwdiv@quotient^0,f,c
  1524   001050  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1525   001052  5005               	movf	___lwdiv@divisor^0,w,c
  1526   001054  5C03               	subwf	___lwdiv@dividend^0,w,c
  1527   001056  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1528   001058  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1529   00105A  A0D8               	btfss	status,0,c
  1530   00105C  D005               	goto	l1789
  1531   00105E  5005               	movf	___lwdiv@divisor^0,w,c
  1532   001060  5E03               	subwf	___lwdiv@dividend^0,f,c
  1533   001062  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  1534   001064  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1535   001066  8007               	bsf	___lwdiv@quotient^0,0,c
  1536   001068                     l1789:
  1537   001068  90D8               	bcf	status,0,c
  1538   00106A  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1539   00106C  3205               	rrcf	___lwdiv@divisor^0,f,c
  1540   00106E  2E09               	decfsz	___lwdiv@counter^0,f,c
  1541   001070  D7ED               	goto	u790
  1542   001072                     l791:
  1543   001072  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  1544   001076  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1545   00107A  0012               	return		;funcret
  1546   00107C                     __end_of___lwdiv:
  1547                           	callstack 0
  1548                           
  1549 ;; *************** function ___lbmod *****************
  1550 ;; Defined at:
  1551 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  dividend        1    wreg     unsigned char 
  1554 ;;  divisor         1    2[COMRAM] unsigned char 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  dividend        1    3[COMRAM] unsigned char 
  1557 ;;  rem             1    5[COMRAM] unsigned char 
  1558 ;;  counter         1    4[COMRAM] unsigned char 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      unsigned char 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2, status,0
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1568 ;;      Params:         1       0       0       0       0       0       0       0       0
  1569 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1571 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1572 ;;Total ram usage:        4 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 2
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;;		_TransmitirDatos
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           	psect	text5
  1584   001226                     __ptext5:
  1585                           	callstack 0
  1586   001226                     ___lbmod:
  1587                           	callstack 28
  1588                           
  1589                           ;incstack = 0
  1590                           ;___lbmod@dividend stored from wreg
  1591   001226  6E04               	movwf	___lbmod@dividend^0,c
  1592   001228  0E08               	movlw	8
  1593   00122A  6E05               	movwf	___lbmod@counter^0,c
  1594   00122C  0E00               	movlw	0
  1595   00122E  6E06               	movwf	___lbmod@rem^0,c
  1596   001230                     l1757:
  1597   001230  90D8               	bcf	status,0,c
  1598   001232  3404               	rlcf	___lbmod@dividend^0,w,c
  1599   001234  3406               	rlcf	___lbmod@rem^0,w,c
  1600   001236  6E06               	movwf	___lbmod@rem^0,c
  1601   001238  90D8               	bcf	status,0,c
  1602   00123A  3604               	rlcf	___lbmod@dividend^0,f,c
  1603   00123C  5003               	movf	___lbmod@divisor^0,w,c
  1604   00123E  5C06               	subwf	___lbmod@rem^0,w,c
  1605   001240  A0D8               	btfss	status,0,c
  1606   001242  D002               	goto	l1765
  1607   001244  5003               	movf	___lbmod@divisor^0,w,c
  1608   001246  5E06               	subwf	___lbmod@rem^0,f,c
  1609   001248                     l1765:
  1610   001248  2E05               	decfsz	___lbmod@counter^0,f,c
  1611   00124A  D7F2               	goto	l1757
  1612   00124C  5006               	movf	___lbmod@rem^0,w,c
  1613   00124E  0012               	return		;funcret
  1614   001250                     __end_of___lbmod:
  1615                           	callstack 0
  1616                           
  1617 ;; *************** function ___lbdiv *****************
  1618 ;; Defined at:
  1619 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;  dividend        1    wreg     unsigned char 
  1622 ;;  divisor         1    2[COMRAM] unsigned char 
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  dividend        1    3[COMRAM] unsigned char 
  1625 ;;  quotient        1    5[COMRAM] unsigned char 
  1626 ;;  counter         1    4[COMRAM] unsigned char 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      unsigned char 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1636 ;;      Params:         1       0       0       0       0       0       0       0       0
  1637 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1639 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1640 ;;Total ram usage:        4 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; Hardware stack levels required when called: 2
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_main
  1647 ;;		_TransmitirDatos
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           	psect	text6
  1652   001156                     __ptext6:
  1653                           	callstack 0
  1654   001156                     ___lbdiv:
  1655                           	callstack 28
  1656                           
  1657                           ;incstack = 0
  1658                           ;___lbdiv@dividend stored from wreg
  1659   001156  6E04               	movwf	___lbdiv@dividend^0,c
  1660   001158  0E00               	movlw	0
  1661   00115A  6E06               	movwf	___lbdiv@quotient^0,c
  1662   00115C  5003               	movf	___lbdiv@divisor^0,w,c
  1663   00115E  B4D8               	btfsc	status,2,c
  1664   001160  D015               	goto	l1751
  1665   001162  0E01               	movlw	1
  1666   001164  6E05               	movwf	___lbdiv@counter^0,c
  1667   001166  D003               	goto	l1739
  1668   001168                     l1735:
  1669   001168  90D8               	bcf	status,0,c
  1670   00116A  3603               	rlcf	___lbdiv@divisor^0,f,c
  1671   00116C  2A05               	incf	___lbdiv@counter^0,f,c
  1672   00116E                     l1739:
  1673   00116E  AE03               	btfss	___lbdiv@divisor^0,7,c
  1674   001170  D7FB               	goto	l1735
  1675   001172                     u750:
  1676   001172  90D8               	bcf	status,0,c
  1677   001174  3606               	rlcf	___lbdiv@quotient^0,f,c
  1678   001176  5003               	movf	___lbdiv@divisor^0,w,c
  1679   001178  5C04               	subwf	___lbdiv@dividend^0,w,c
  1680   00117A  A0D8               	btfss	status,0,c
  1681   00117C  D003               	goto	l1747
  1682   00117E  5003               	movf	___lbdiv@divisor^0,w,c
  1683   001180  5E04               	subwf	___lbdiv@dividend^0,f,c
  1684   001182  8006               	bsf	___lbdiv@quotient^0,0,c
  1685   001184                     l1747:
  1686   001184  90D8               	bcf	status,0,c
  1687   001186  3203               	rrcf	___lbdiv@divisor^0,f,c
  1688   001188  2E05               	decfsz	___lbdiv@counter^0,f,c
  1689   00118A  D7F3               	goto	u750
  1690   00118C                     l1751:
  1691   00118C  5006               	movf	___lbdiv@quotient^0,w,c
  1692   00118E  0012               	return		;funcret
  1693   001190                     __end_of___lbdiv:
  1694                           	callstack 0
  1695                           
  1696 ;; *************** function ___awdiv *****************
  1697 ;; Defined at:
  1698 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  dividend        2    2[COMRAM] int 
  1701 ;;  divisor         2    4[COMRAM] int 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  quotient        2    8[COMRAM] int 
  1704 ;;  sign            1    7[COMRAM] unsigned char 
  1705 ;;  counter         1    6[COMRAM] unsigned char 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  2    2[COMRAM] int 
  1708 ;; Registers used:
  1709 ;;		wreg, status,2, status,0
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1715 ;;      Params:         4       0       0       0       0       0       0       0       0
  1716 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1718 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1719 ;;Total ram usage:        8 bytes
  1720 ;; Hardware stack levels used: 1
  1721 ;; Hardware stack levels required when called: 2
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_TransmitirDatos
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text7
  1730   000F40                     __ptext7:
  1731                           	callstack 0
  1732   000F40                     ___awdiv:
  1733                           	callstack 27
  1734                           
  1735                           ;incstack = 0
  1736   000F40  0E00               	movlw	0
  1737   000F42  6E08               	movwf	___awdiv@sign^0,c
  1738   000F44  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1739   000F46  D006               	goto	l1693
  1740   000F48  6C05               	negf	___awdiv@divisor^0,c
  1741   000F4A  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  1742   000F4C  B0D8               	btfsc	status,0,c
  1743   000F4E  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  1744   000F50  0E01               	movlw	1
  1745   000F52  6E08               	movwf	___awdiv@sign^0,c
  1746   000F54                     l1693:
  1747   000F54  AE04               	btfss	(___awdiv@dividend+1)^0,7,c
  1748   000F56  D006               	goto	l1699
  1749   000F58  6C03               	negf	___awdiv@dividend^0,c
  1750   000F5A  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  1751   000F5C  B0D8               	btfsc	status,0,c
  1752   000F5E  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  1753   000F60  0E01               	movlw	1
  1754   000F62  1A08               	xorwf	___awdiv@sign^0,f,c
  1755   000F64                     l1699:
  1756   000F64  0E00               	movlw	0
  1757   000F66  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  1758   000F68  0E00               	movlw	0
  1759   000F6A  6E09               	movwf	___awdiv@quotient^0,c
  1760   000F6C  5005               	movf	___awdiv@divisor^0,w,c
  1761   000F6E  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  1762   000F70  B4D8               	btfsc	status,2,c
  1763   000F72  D01C               	goto	l1721
  1764   000F74  0E01               	movlw	1
  1765   000F76  6E07               	movwf	___awdiv@counter^0,c
  1766   000F78  D004               	goto	l1707
  1767   000F7A                     l1705:
  1768   000F7A  90D8               	bcf	status,0,c
  1769   000F7C  3605               	rlcf	___awdiv@divisor^0,f,c
  1770   000F7E  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  1771   000F80  2A07               	incf	___awdiv@counter^0,f,c
  1772   000F82                     l1707:
  1773   000F82  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  1774   000F84  D7FA               	goto	l1705
  1775   000F86                     u710:
  1776   000F86  90D8               	bcf	status,0,c
  1777   000F88  3609               	rlcf	___awdiv@quotient^0,f,c
  1778   000F8A  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  1779   000F8C  5005               	movf	___awdiv@divisor^0,w,c
  1780   000F8E  5C03               	subwf	___awdiv@dividend^0,w,c
  1781   000F90  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1782   000F92  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  1783   000F94  A0D8               	btfss	status,0,c
  1784   000F96  D005               	goto	l1717
  1785   000F98  5005               	movf	___awdiv@divisor^0,w,c
  1786   000F9A  5E03               	subwf	___awdiv@dividend^0,f,c
  1787   000F9C  5006               	movf	(___awdiv@divisor+1)^0,w,c
  1788   000F9E  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  1789   000FA0  8009               	bsf	___awdiv@quotient^0,0,c
  1790   000FA2                     l1717:
  1791   000FA2  90D8               	bcf	status,0,c
  1792   000FA4  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  1793   000FA6  3205               	rrcf	___awdiv@divisor^0,f,c
  1794   000FA8  2E07               	decfsz	___awdiv@counter^0,f,c
  1795   000FAA  D7ED               	goto	u710
  1796   000FAC                     l1721:
  1797   000FAC  5008               	movf	___awdiv@sign^0,w,c
  1798   000FAE  B4D8               	btfsc	status,2,c
  1799   000FB0  D004               	goto	l1725
  1800   000FB2  6C09               	negf	___awdiv@quotient^0,c
  1801   000FB4  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  1802   000FB6  B0D8               	btfsc	status,0,c
  1803   000FB8  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  1804   000FBA                     l1725:
  1805   000FBA  C009  F003         	movff	___awdiv@quotient,?___awdiv
  1806   000FBE  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  1807   000FC2  0012               	return		;funcret
  1808   000FC4                     __end_of___awdiv:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function _Transmitir *****************
  1812 ;; Defined at:
  1813 ;;		line 164 in file "Lab5.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  BufferT         1    wreg     unsigned char 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  BufferT         1    2[COMRAM] unsigned char 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1827 ;;      Params:         0       0       0       0       0       0       0       0       0
  1828 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1830 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1831 ;;Total ram usage:        1 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 2
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_TransmitirDatos
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text8
  1842   00136E                     __ptext8:
  1843                           	callstack 0
  1844   00136E                     _Transmitir:
  1845                           	callstack 27
  1846                           
  1847                           ;incstack = 0
  1848                           ;Transmitir@BufferT stored from wreg
  1849   00136E  6E03               	movwf	Transmitir@BufferT^0,c
  1850   001370                     
  1851                           ;Lab5.c: 165: while (TRMT == 0);
  1852   001370  A2AC               	btfss	4012,1,c	;volatile
  1853   001372  D7FE               	goto	l1163
  1854                           
  1855                           ;Lab5.c: 166: TXREG = BufferT;
  1856   001374  C003  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1857   001378  0012               	return		;funcret
  1858   00137A                     __end_of_Transmitir:
  1859                           	callstack 0
  1860                           
  1861 ;; *************** function _DireccionaLCD *****************
  1862 ;; Defined at:
  1863 ;;		line 229 in file "LibLCDXC8.h"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  a               1    wreg     unsigned char 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  a               1    6[COMRAM] unsigned char 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg, status,2, status,0, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1877 ;;      Params:         0       0       0       0       0       0       0       0       0
  1878 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1879 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1880 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1881 ;;Total ram usage:        1 bytes
  1882 ;; Hardware stack levels used: 1
  1883 ;; Hardware stack levels required when called: 4
  1884 ;; This function calls:
  1885 ;;		_EnviaDato
  1886 ;;		_HabilitaLCD
  1887 ;;		_RetardoLCD
  1888 ;; This function is called by:
  1889 ;;		_main
  1890 ;;		_TransmitirDatos
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           	psect	text9
  1895   0012FE                     __ptext9:
  1896                           	callstack 0
  1897   0012FE                     _DireccionaLCD:
  1898                           	callstack 25
  1899                           
  1900                           ;incstack = 0
  1901                           ;DireccionaLCD@a stored from wreg
  1902   0012FE  6E07               	movwf	DireccionaLCD@a^0,c
  1903                           
  1904                           ;LibLCDXC8.h: 232: LATE0=0;
  1905   001300  908D               	bcf	3981,0,c	;volatile
  1906                           
  1907                           ;LibLCDXC8.h: 233: EnviaDato(a);
  1908   001302  5007               	movf	DireccionaLCD@a^0,w,c
  1909   001304  EC67  F008         	call	_EnviaDato
  1910                           
  1911                           ;LibLCDXC8.h: 234: HabilitaLCD();
  1912   001308  ECB0  F009         	call	_HabilitaLCD	;wreg free
  1913                           
  1914                           ;LibLCDXC8.h: 235: RetardoLCD(4);
  1915   00130C  0E04               	movlw	4
  1916   00130E  ECE2  F007         	call	_RetardoLCD
  1917   001312  0012               	return		;funcret
  1918   001314                     __end_of_DireccionaLCD:
  1919                           	callstack 0
  1920                           
  1921 ;; *************** function _SaveData *****************
  1922 ;; Defined at:
  1923 ;;		line 280 in file "Lab5.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  dir             2    2[COMRAM] unsigned int 
  1926 ;;  dato            1    4[COMRAM] unsigned char 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;		None
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg, status,2
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1938 ;;      Params:         3       0       0       0       0       0       0       0       0
  1939 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1940 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1941 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1942 ;;Total ram usage:        3 bytes
  1943 ;; Hardware stack levels used: 1
  1944 ;; Hardware stack levels required when called: 2
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text10
  1953   00129E                     __ptext10:
  1954                           	callstack 0
  1955   00129E                     _SaveData:
  1956                           	callstack 28
  1957                           
  1958                           ;Lab5.c: 281: EEADR = dir;
  1959                           
  1960                           ;incstack = 0
  1961   00129E  C003  FFA9         	movff	SaveData@dir,4009	;volatile
  1962                           
  1963                           ;Lab5.c: 282: EEDATA = dato;
  1964   0012A2  C005  FFA8         	movff	SaveData@dato,4008	;volatile
  1965                           
  1966                           ;Lab5.c: 284: EEPGD = 0;
  1967   0012A6  9EA6               	bcf	4006,7,c	;volsfr
  1968                           
  1969                           ;Lab5.c: 285: CFGS = 0;
  1970   0012A8  9CA6               	bcf	4006,6,c	;volsfr
  1971                           
  1972                           ;Lab5.c: 286: WREN = 1;
  1973   0012AA  84A6               	bsf	4006,2,c	;volsfr
  1974                           
  1975                           ;Lab5.c: 288: GIE = 0;
  1976   0012AC  9EF2               	bcf	4082,7,c	;volatile
  1977                           
  1978                           ;Lab5.c: 290: EECON2 = 0x55;
  1979   0012AE  0E55               	movlw	85
  1980   0012B0  6EA7               	movwf	167,c	;volsfr
  1981                           
  1982                           ;Lab5.c: 291: EECON2 = 0xAA;
  1983   0012B2  0EAA               	movlw	170
  1984   0012B4  6EA7               	movwf	167,c	;volsfr
  1985                           
  1986                           ;Lab5.c: 292: WR = 1;
  1987   0012B6  82A6               	bsf	4006,1,c	;volsfr
  1988                           
  1989                           ;Lab5.c: 293: GIE = 1;
  1990   0012B8  8EF2               	bsf	4082,7,c	;volatile
  1991   0012BA                     l289:
  1992   0012BA  A8A1               	btfss	4001,4,c	;volatile
  1993   0012BC  D7FE               	goto	l289
  1994                           
  1995                           ;Lab5.c: 295: EEIF = 0;
  1996   0012BE  98A1               	bcf	4001,4,c	;volatile
  1997                           
  1998                           ;Lab5.c: 296: WREN = 0;
  1999   0012C0  94A6               	bcf	4006,2,c	;volsfr
  2000   0012C2  0012               	return		;funcret
  2001   0012C4                     __end_of_SaveData:
  2002                           	callstack 0
  2003                           
  2004 ;; *************** function _ReadData *****************
  2005 ;; Defined at:
  2006 ;;		line 300 in file "Lab5.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  dir             2    2[COMRAM] unsigned int 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      unsigned char 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2020 ;;      Params:         2       0       0       0       0       0       0       0       0
  2021 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2023 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2024 ;;Total ram usage:        2 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 2
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_main
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text11
  2035   001352                     __ptext11:
  2036                           	callstack 0
  2037   001352                     _ReadData:
  2038                           	callstack 28
  2039                           
  2040                           ;Lab5.c: 301: EEADR = dir;
  2041                           
  2042                           ;incstack = 0
  2043   001352  C003  FFA9         	movff	ReadData@dir,4009	;volatile
  2044                           
  2045                           ;Lab5.c: 302: EEPGD = 0;
  2046   001356  9EA6               	bcf	4006,7,c	;volsfr
  2047                           
  2048                           ;Lab5.c: 303: CFGS = 0;
  2049   001358  9CA6               	bcf	4006,6,c	;volsfr
  2050                           
  2051                           ;Lab5.c: 304: RD = 1;
  2052   00135A  80A6               	bsf	4006,0,c	;volsfr
  2053                           
  2054                           ;Lab5.c: 306: return EEDATA;
  2055   00135C  50A8               	movf	168,w,c	;volatile
  2056   00135E  0012               	return		;funcret
  2057   001360                     __end_of_ReadData:
  2058                           	callstack 0
  2059                           
  2060 ;; *************** function _MensajeLCD_Var *****************
  2061 ;; Defined at:
  2062 ;;		line 217 in file "LibLCDXC8.h"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  a               1    7[COMRAM] PTR unsigned char 
  2065 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  i               2    9[COMRAM] int 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2077 ;;      Params:         1       0       0       0       0       0       0       0       0
  2078 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2079 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2080 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2081 ;;Total ram usage:        4 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 5
  2084 ;; This function calls:
  2085 ;;		_EscribeLCD_c
  2086 ;;		_strlen
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text12
  2093   00107C                     __ptext12:
  2094                           	callstack 0
  2095   00107C                     _MensajeLCD_Var:
  2096                           	callstack 25
  2097                           
  2098                           ;LibLCDXC8.h: 221: for(int i = 0; i<strlen(a); i++){
  2099                           
  2100                           ;incstack = 0
  2101   00107C  0E00               	movlw	0
  2102   00107E  6E0B               	movwf	(MensajeLCD_Var@i+1)^0,c
  2103   001080  0E00               	movlw	0
  2104   001082  6E0A               	movwf	MensajeLCD_Var@i^0,c
  2105   001084  D019               	goto	l1819
  2106   001086                     l1811:
  2107                           
  2108                           ;LibLCDXC8.h: 222: if(a[i] == (0)){
  2109   001086  5008               	movf	MensajeLCD_Var@a^0,w,c
  2110   001088  240A               	addwf	MensajeLCD_Var@i^0,w,c
  2111   00108A  6E09               	movwf	??_MensajeLCD_Var^0,c
  2112   00108C  C009  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  2113   001090                     	if	1	;There is more than 1 active tblptr byte
  2114   001090  0E08               	movlw	high __smallconst
  2115   001092  6EF7               	movwf	tblptrh,c
  2116   001094                     	endif
  2117   001094                     	if	0	;tblptru may be non-zero
  2118   001094                     	endif
  2119   001094                     	if	0	;tblptru may be non-zero
  2120   001094                     	endif
  2121   001094  0008               	tblrd		*
  2122   001096  50F5               	movf	tablat,w,c
  2123   001098  0900               	iorlw	0
  2124   00109A  B4D8               	btfsc	status,2,c
  2125   00109C  0012               	return	
  2126                           
  2127                           ;LibLCDXC8.h: 224: };LibLCDXC8.h: 225: EscribeLCD_c(a[i]);
  2128   00109E  5008               	movf	MensajeLCD_Var@a^0,w,c
  2129   0010A0  240A               	addwf	MensajeLCD_Var@i^0,w,c
  2130   0010A2  6E09               	movwf	??_MensajeLCD_Var^0,c
  2131   0010A4  C009  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  2132   0010A8                     	if	1	;There is more than 1 active tblptr byte
  2133   0010A8  0E08               	movlw	high __smallconst
  2134   0010AA  6EF7               	movwf	tblptrh,c
  2135   0010AC                     	endif
  2136   0010AC                     	if	0	;tblptru may be non-zero
  2137   0010AC                     	endif
  2138   0010AC                     	if	0	;tblptru may be non-zero
  2139   0010AC                     	endif
  2140   0010AC  0008               	tblrd		*
  2141   0010AE  50F5               	movf	tablat,w,c
  2142   0010B0  EC8A  F009         	call	_EscribeLCD_c
  2143   0010B4  4A0A               	infsnz	MensajeLCD_Var@i^0,f,c
  2144   0010B6  2A0B               	incf	(MensajeLCD_Var@i+1)^0,f,c
  2145   0010B8                     l1819:
  2146   0010B8  C008  F003         	movff	MensajeLCD_Var@a,strlen@s
  2147   0010BC  EC28  F009         	call	_strlen	;wreg free
  2148   0010C0  5003               	movf	?_strlen^0,w,c
  2149   0010C2  5C0A               	subwf	MensajeLCD_Var@i^0,w,c
  2150   0010C4  5004               	movf	(?_strlen+1)^0,w,c
  2151   0010C6  580B               	subwfb	(MensajeLCD_Var@i+1)^0,w,c
  2152   0010C8  B0D8               	btfsc	status,0,c
  2153   0010CA  0012               	return	
  2154   0010CC  D7DC               	goto	l1811
  2155   0010CE                     __end_of_MensajeLCD_Var:
  2156                           	callstack 0
  2157                           
  2158 ;; *************** function _strlen *****************
  2159 ;; Defined at:
  2160 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  s               1    2[COMRAM] PTR const unsigned char 
  2163 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  cp              1    4[COMRAM] PTR const unsigned char 
  2166 ;;		 -> STR_4(5), STR_3(6), STR_2(10), STR_1(13), 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  2    2[COMRAM] unsigned int 
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2176 ;;      Params:         2       0       0       0       0       0       0       0       0
  2177 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2178 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2179 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2180 ;;Total ram usage:        3 bytes
  2181 ;; Hardware stack levels used: 1
  2182 ;; Hardware stack levels required when called: 2
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_MensajeLCD_Var
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text13
  2191   001250                     __ptext13:
  2192                           	callstack 0
  2193   001250                     _strlen:
  2194                           	callstack 27
  2195                           
  2196                           ;incstack = 0
  2197   001250  C003  F005         	movff	strlen@s,strlen@cp
  2198   001254  D001               	goto	l1673
  2199   001256                     l1671:
  2200   001256  2A05               	incf	strlen@cp^0,f,c
  2201   001258                     l1673:
  2202   001258  C005  FFF6         	movff	strlen@cp,tblptrl
  2203   00125C                     	if	1	;There is more than 1 active tblptr byte
  2204   00125C  0E08               	movlw	high __smallconst
  2205   00125E  6EF7               	movwf	tblptrh,c
  2206   001260                     	endif
  2207   001260                     	if	0	;tblptru may be non-zero
  2208   001260                     	endif
  2209   001260                     	if	0	;tblptru may be non-zero
  2210   001260                     	endif
  2211   001260  0008               	tblrd		*
  2212   001262  50F5               	movf	tablat,w,c
  2213   001264  0900               	iorlw	0
  2214   001266  A4D8               	btfss	status,2,c
  2215   001268  D7F6               	goto	l1671
  2216   00126A  5003               	movf	strlen@s^0,w,c
  2217   00126C  5C05               	subwf	strlen@cp^0,w,c
  2218   00126E  6E03               	movwf	?_strlen^0,c
  2219   001270  6A04               	clrf	(?_strlen+1)^0,c
  2220   001272  BE03               	btfsc	?_strlen^0,7,c
  2221   001274  0604               	decf	(?_strlen+1)^0,f,c
  2222   001276  0012               	return		;funcret
  2223   001278                     __end_of_strlen:
  2224                           	callstack 0
  2225                           
  2226 ;; *************** function _EscribeLCD_c *****************
  2227 ;; Defined at:
  2228 ;;		line 119 in file "LibLCDXC8.h"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  a               1    wreg     unsigned char 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  a               1    6[COMRAM] unsigned char 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, status,2, status,0, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2242 ;;      Params:         0       0       0       0       0       0       0       0       0
  2243 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2244 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2245 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2246 ;;Total ram usage:        1 bytes
  2247 ;; Hardware stack levels used: 1
  2248 ;; Hardware stack levels required when called: 4
  2249 ;; This function calls:
  2250 ;;		_EnviaDato
  2251 ;;		_HabilitaLCD
  2252 ;;		_RetardoLCD
  2253 ;; This function is called by:
  2254 ;;		_MensajeLCD_Var
  2255 ;;		_main
  2256 ;;		_TransmitirDatos
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           	psect	text14
  2261   001314                     __ptext14:
  2262                           	callstack 0
  2263   001314                     _EscribeLCD_c:
  2264                           	callstack 25
  2265                           
  2266                           ;incstack = 0
  2267                           ;EscribeLCD_c@a stored from wreg
  2268   001314  6E07               	movwf	EscribeLCD_c@a^0,c
  2269                           
  2270                           ;LibLCDXC8.h: 123: LATE0=1;
  2271   001316  808D               	bsf	3981,0,c	;volatile
  2272                           
  2273                           ;LibLCDXC8.h: 124: EnviaDato(a);
  2274   001318  5007               	movf	EscribeLCD_c@a^0,w,c
  2275   00131A  EC67  F008         	call	_EnviaDato
  2276                           
  2277                           ;LibLCDXC8.h: 125: HabilitaLCD();
  2278   00131E  ECB0  F009         	call	_HabilitaLCD	;wreg free
  2279                           
  2280                           ;LibLCDXC8.h: 126: RetardoLCD(4);
  2281   001322  0E04               	movlw	4
  2282   001324  ECE2  F007         	call	_RetardoLCD
  2283   001328  0012               	return		;funcret
  2284   00132A                     __end_of_EscribeLCD_c:
  2285                           	callstack 0
  2286                           
  2287 ;; *************** function _LeerDHT11 *****************
  2288 ;; Defined at:
  2289 ;;		line 126 in file "Lab5.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;		None
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;		None
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      void 
  2296 ;; Registers used:
  2297 ;;		wreg, status,2, status,0, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2303 ;;      Params:         0       0       0       0       0       0       0       0       0
  2304 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2305 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2306 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2307 ;;Total ram usage:        1 bytes
  2308 ;; Hardware stack levels used: 1
  2309 ;; Hardware stack levels required when called: 4
  2310 ;; This function calls:
  2311 ;;		_LeerByte
  2312 ;; This function is called by:
  2313 ;;		_main
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text15
  2318   001190                     __ptext15:
  2319                           	callstack 0
  2320   001190                     _LeerDHT11:
  2321                           	callstack 26
  2322                           
  2323                           ;Lab5.c: 128: TRISC2 = 0;
  2324                           
  2325                           ;incstack = 0
  2326   001190  9494               	bcf	3988,2,c	;volatile
  2327                           
  2328                           ;Lab5.c: 129: _delay((unsigned long)((18)*(8000000/4000.0)));
  2329   001192  0E2F               	movlw	47
  2330   001194  6E07               	movwf	??_LeerDHT11^0,c
  2331   001196  0EC0               	movlw	192
  2332   001198                     u1247:
  2333   001198  2EE8               	decfsz	wreg,f,c
  2334   00119A  D7FE               	bra	u1247
  2335   00119C  2E07               	decfsz	??_LeerDHT11^0,f,c
  2336   00119E  D7FC               	bra	u1247
  2337                           
  2338                           ;Lab5.c: 130: TRISC2 = 1;
  2339   0011A0  8494               	bsf	3988,2,c	;volatile
  2340   0011A2                     l215:
  2341   0011A2  B482               	btfsc	3970,2,c	;volatile
  2342   0011A4  D7FE               	goto	l215
  2343                           
  2344                           ;Lab5.c: 133: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2345   0011A6  0E50               	movlw	80
  2346   0011A8                     u1257:
  2347   0011A8  2EE8               	decfsz	wreg,f,c
  2348   0011AA  D7FE               	bra	u1257
  2349   0011AC                     l218:
  2350   0011AC  B482               	btfsc	3970,2,c	;volatile
  2351   0011AE  D7FE               	goto	l218
  2352                           
  2353                           ;Lab5.c: 136: Humedad = LeerByte();
  2354   0011B0  EC62  F009         	call	_LeerByte	;wreg free
  2355   0011B4  6E1E               	movwf	_Humedad^0,c
  2356                           
  2357                           ;Lab5.c: 137: LeerByte();
  2358   0011B6  EC62  F009         	call	_LeerByte	;wreg free
  2359                           
  2360                           ;Lab5.c: 138: Temperatura = LeerByte();
  2361   0011BA  EC62  F009         	call	_LeerByte	;wreg free
  2362   0011BE  6E1F               	movwf	_Temperatura^0,c
  2363                           
  2364                           ;Lab5.c: 139: LeerByte();
  2365   0011C0  EC62  F009         	call	_LeerByte	;wreg free
  2366                           
  2367                           ;Lab5.c: 140: LeerByte();
  2368   0011C4  EC62  F009         	call	_LeerByte	;wreg free
  2369   0011C8  0012               	return		;funcret
  2370   0011CA                     __end_of_LeerDHT11:
  2371                           	callstack 0
  2372                           
  2373 ;; *************** function _LeerByte *****************
  2374 ;; Defined at:
  2375 ;;		line 143 in file "Lab5.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  i               1    5[COMRAM] unsigned char 
  2380 ;;  res             1    4[COMRAM] unsigned char 
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  1    wreg      unsigned char 
  2383 ;; Registers used:
  2384 ;;		wreg, status,2, status,0, cstack
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2390 ;;      Params:         0       0       0       0       0       0       0       0       0
  2391 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2392 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2393 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2394 ;;Total ram usage:        3 bytes
  2395 ;; Hardware stack levels used: 1
  2396 ;; Hardware stack levels required when called: 3
  2397 ;; This function calls:
  2398 ;;		_LeerBit
  2399 ;; This function is called by:
  2400 ;;		_LeerDHT11
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           	psect	text16
  2405   0012C4                     __ptext16:
  2406                           	callstack 0
  2407   0012C4                     _LeerByte:
  2408                           	callstack 26
  2409                           
  2410                           ;Lab5.c: 144: unsigned char res = 0, i;
  2411                           
  2412                           ;incstack = 0
  2413   0012C4  0E00               	movlw	0
  2414   0012C6  6E05               	movwf	LeerByte@res^0,c
  2415                           
  2416                           ;Lab5.c: 145: for (i = 8; i > 0; i--) {
  2417   0012C8  0E08               	movlw	8
  2418   0012CA  6E06               	movwf	LeerByte@i^0,c
  2419   0012CC                     l1153:
  2420                           
  2421                           ;Lab5.c: 146: res = (res << 1) | LeerBit();
  2422   0012CC  ECE5  F008         	call	_LeerBit	;wreg free
  2423   0012D0  6E04               	movwf	??_LeerByte^0,c
  2424   0012D2  5005               	movf	LeerByte@res^0,w,c
  2425   0012D4  2405               	addwf	LeerByte@res^0,w,c
  2426   0012D6  1004               	iorwf	??_LeerByte^0,w,c
  2427   0012D8  6E05               	movwf	LeerByte@res^0,c
  2428   0012DA  0606               	decf	LeerByte@i^0,f,c
  2429   0012DC  5006               	movf	LeerByte@i^0,w,c
  2430   0012DE  A4D8               	btfss	status,2,c
  2431   0012E0  D7F5               	goto	l1153
  2432                           
  2433                           ;Lab5.c: 147: };Lab5.c: 148: return res;
  2434   0012E2  5005               	movf	LeerByte@res^0,w,c
  2435   0012E4  0012               	return		;funcret
  2436   0012E6                     __end_of_LeerByte:
  2437                           	callstack 0
  2438                           
  2439 ;; *************** function _LeerBit *****************
  2440 ;; Defined at:
  2441 ;;		line 151 in file "Lab5.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  res             1    2[COMRAM] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      unsigned char 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2455 ;;      Params:         0       0       0       0       0       0       0       0       0
  2456 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2458 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2459 ;;Total ram usage:        1 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; Hardware stack levels required when called: 2
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_LeerByte
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text17
  2470   0011CA                     __ptext17:
  2471                           	callstack 0
  2472   0011CA                     _LeerBit:
  2473                           	callstack 26
  2474                           
  2475                           ;Lab5.c: 152: unsigned char res = 0;
  2476                           
  2477                           ;incstack = 0
  2478   0011CA  0E00               	movlw	0
  2479   0011CC  6E03               	movwf	LeerBit@res^0,c
  2480   0011CE                     l229:
  2481   0011CE  A482               	btfss	3970,2,c	;volatile
  2482   0011D0  D7FE               	goto	l229
  2483                           
  2484                           ;Lab5.c: 154: _delay((unsigned long)((13)*(8000000/4000000.0)));
  2485   0011D2  0E08               	movlw	8
  2486   0011D4                     u1267:
  2487   0011D4  2EE8               	decfsz	wreg,f,c
  2488   0011D6  D7FE               	bra	u1267
  2489   0011D8  D000               	nop2	
  2490                           
  2491                           ;Lab5.c: 155: if (RC2 == 1) res = 0;
  2492   0011DA  A482               	btfss	3970,2,c	;volatile
  2493   0011DC  D002               	goto	l1105
  2494   0011DE  0E00               	movlw	0
  2495   0011E0  6E03               	movwf	LeerBit@res^0,c
  2496   0011E2                     l1105:
  2497                           
  2498                           ;Lab5.c: 156: _delay((unsigned long)((22)*(8000000/4000000.0)));
  2499   0011E2  0E0E               	movlw	14
  2500   0011E4                     u1277:
  2501   0011E4  2EE8               	decfsz	wreg,f,c
  2502   0011E6  D7FE               	bra	u1277
  2503   0011E8  D000               	nop2	
  2504                           
  2505                           ;Lab5.c: 157: if (RC2 == 1) {
  2506   0011EA  A482               	btfss	3970,2,c	;volatile
  2507   0011EC  D004               	goto	u60
  2508                           
  2509                           ;Lab5.c: 158: res = 1;
  2510   0011EE  0E01               	movlw	1
  2511   0011F0  6E03               	movwf	LeerBit@res^0,c
  2512   0011F2                     l234:
  2513   0011F2  B482               	btfsc	3970,2,c	;volatile
  2514   0011F4  D7FE               	goto	l234
  2515   0011F6                     u60:
  2516                           
  2517                           ;Lab5.c: 160: };Lab5.c: 161: return res;
  2518   0011F6  5003               	movf	LeerBit@res^0,w,c
  2519   0011F8  0012               	return		;funcret
  2520   0011FA                     __end_of_LeerBit:
  2521                           	callstack 0
  2522                           
  2523 ;; *************** function _InicializaLCD *****************
  2524 ;; Defined at:
  2525 ;;		line 64 in file "LibLCDXC8.h"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;		None
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;		None
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      void 
  2532 ;; Registers used:
  2533 ;;		wreg, status,2, status,0, cstack
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2539 ;;      Params:         0       0       0       0       0       0       0       0       0
  2540 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2542 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2543 ;;Total ram usage:        0 bytes
  2544 ;; Hardware stack levels used: 1
  2545 ;; Hardware stack levels required when called: 5
  2546 ;; This function calls:
  2547 ;;		_BorraLCD
  2548 ;;		_EnviaDato
  2549 ;;		_HabilitaLCD
  2550 ;;		_RetardoLCD
  2551 ;; This function is called by:
  2552 ;;		_main
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text18
  2557   000E1A                     __ptext18:
  2558                           	callstack 0
  2559   000E1A                     _InicializaLCD:
  2560                           	callstack 25
  2561                           
  2562                           ;LibLCDXC8.h: 66: LATE0=0;
  2563                           
  2564                           ;incstack = 0
  2565   000E1A  908D               	bcf	3981,0,c	;volatile
  2566                           
  2567                           ;LibLCDXC8.h: 67: if(interfaz==4)
  2568   000E1C  0E04               	movlw	4
  2569   000E1E  1820               	xorwf	_interfaz^0,w,c
  2570   000E20  A4D8               	btfss	status,2,c
  2571   000E22  D004               	goto	l1307
  2572                           
  2573                           ;LibLCDXC8.h: 68: LATD=(LATD & 0b00001111) | 0x30;
  2574   000E24  508C               	movf	140,w,c	;volatile
  2575   000E26  0B0F               	andlw	15
  2576   000E28  0930               	iorlw	48
  2577   000E2A  D001               	goto	L4
  2578   000E2C                     l1307:
  2579                           
  2580                           ;LibLCDXC8.h: 69: else;LibLCDXC8.h: 70: LATD=0x3F;
  2581   000E2C  0E3F               	movlw	63
  2582   000E2E                     L4:
  2583   000E2E  6E8C               	movwf	140,c	;volatile
  2584                           
  2585                           ;LibLCDXC8.h: 71: HabilitaLCD();
  2586   000E30  ECB0  F009         	call	_HabilitaLCD	;wreg free
  2587                           
  2588                           ;LibLCDXC8.h: 72: RetardoLCD(1);
  2589   000E34  0E01               	movlw	1
  2590   000E36  ECE2  F007         	call	_RetardoLCD
  2591                           
  2592                           ;LibLCDXC8.h: 73: if(interfaz==4)
  2593   000E3A  0E04               	movlw	4
  2594   000E3C  1820               	xorwf	_interfaz^0,w,c
  2595   000E3E  A4D8               	btfss	status,2,c
  2596   000E40  D004               	goto	l1317
  2597                           
  2598                           ;LibLCDXC8.h: 74: LATD=(LATD & 0b00001111) | 0x30;
  2599   000E42  508C               	movf	140,w,c	;volatile
  2600   000E44  0B0F               	andlw	15
  2601   000E46  0930               	iorlw	48
  2602   000E48  D001               	goto	L5
  2603   000E4A                     l1317:
  2604                           
  2605                           ;LibLCDXC8.h: 75: else;LibLCDXC8.h: 76: LATD=0x3F;
  2606   000E4A  0E3F               	movlw	63
  2607   000E4C                     L5:
  2608   000E4C  6E8C               	movwf	140,c	;volatile
  2609                           
  2610                           ;LibLCDXC8.h: 77: HabilitaLCD();
  2611   000E4E  ECB0  F009         	call	_HabilitaLCD	;wreg free
  2612                           
  2613                           ;LibLCDXC8.h: 78: RetardoLCD(3);
  2614   000E52  0E03               	movlw	3
  2615   000E54  ECE2  F007         	call	_RetardoLCD
  2616                           
  2617                           ;LibLCDXC8.h: 79: if(interfaz==4)
  2618   000E58  0E04               	movlw	4
  2619   000E5A  1820               	xorwf	_interfaz^0,w,c
  2620   000E5C  A4D8               	btfss	status,2,c
  2621   000E5E  D004               	goto	l1327
  2622                           
  2623                           ;LibLCDXC8.h: 80: LATD=(LATD & 0b00001111) | 0x30;
  2624   000E60  508C               	movf	140,w,c	;volatile
  2625   000E62  0B0F               	andlw	15
  2626   000E64  0930               	iorlw	48
  2627   000E66  D001               	goto	L6
  2628   000E68                     l1327:
  2629                           
  2630                           ;LibLCDXC8.h: 81: else;LibLCDXC8.h: 82: LATD=0x3F;
  2631   000E68  0E3F               	movlw	63
  2632   000E6A                     L6:
  2633   000E6A  6E8C               	movwf	140,c	;volatile
  2634                           
  2635                           ;LibLCDXC8.h: 83: HabilitaLCD();
  2636   000E6C  ECB0  F009         	call	_HabilitaLCD	;wreg free
  2637                           
  2638                           ;LibLCDXC8.h: 84: RetardoLCD(4);
  2639   000E70  0E04               	movlw	4
  2640   000E72  ECE2  F007         	call	_RetardoLCD
  2641                           
  2642                           ;LibLCDXC8.h: 85: if(interfaz==4){
  2643   000E76  0E04               	movlw	4
  2644   000E78  1820               	xorwf	_interfaz^0,w,c
  2645   000E7A  A4D8               	btfss	status,2,c
  2646   000E7C  D011               	goto	l1347
  2647                           
  2648                           ;LibLCDXC8.h: 86: LATD=(LATD & 0b00001111) | 0x20;
  2649   000E7E  508C               	movf	140,w,c	;volatile
  2650   000E80  0B0F               	andlw	15
  2651   000E82  0920               	iorlw	32
  2652   000E84  6E8C               	movwf	140,c	;volatile
  2653                           
  2654                           ;LibLCDXC8.h: 87: HabilitaLCD();
  2655   000E86  ECB0  F009         	call	_HabilitaLCD	;wreg free
  2656                           
  2657                           ;LibLCDXC8.h: 88: RetardoLCD(4);
  2658   000E8A  0E04               	movlw	4
  2659   000E8C  ECE2  F007         	call	_RetardoLCD
  2660                           
  2661                           ;LibLCDXC8.h: 89: EnviaDato(0x2F);
  2662   000E90  0E2F               	movlw	47
  2663   000E92  EC67  F008         	call	_EnviaDato
  2664                           
  2665                           ;LibLCDXC8.h: 90: HabilitaLCD();
  2666   000E96  ECB0  F009         	call	_HabilitaLCD	;wreg free
  2667                           
  2668                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  2669   000E9A  0E04               	movlw	4
  2670   000E9C  ECE2  F007         	call	_RetardoLCD
  2671   000EA0                     l1347:
  2672                           
  2673                           ;LibLCDXC8.h: 92: };LibLCDXC8.h: 93: BorraLCD();
  2674   000EA0  EC95  F009         	call	_BorraLCD	;wreg free
  2675                           
  2676                           ;LibLCDXC8.h: 94: EnviaDato(0xF);
  2677   000EA4  0E0F               	movlw	15
  2678   000EA6  EC67  F008         	call	_EnviaDato
  2679                           
  2680                           ;LibLCDXC8.h: 95: HabilitaLCD();
  2681   000EAA  ECB0  F009         	call	_HabilitaLCD	;wreg free
  2682                           
  2683                           ;LibLCDXC8.h: 96: RetardoLCD(4);
  2684   000EAE  0E04               	movlw	4
  2685   000EB0  ECE2  F007         	call	_RetardoLCD
  2686   000EB4  0012               	return		;funcret
  2687   000EB6                     __end_of_InicializaLCD:
  2688                           	callstack 0
  2689                           
  2690 ;; *************** function _BorraLCD *****************
  2691 ;; Defined at:
  2692 ;;		line 105 in file "LibLCDXC8.h"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;		None
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      void 
  2699 ;; Registers used:
  2700 ;;		wreg, status,2, status,0, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2706 ;;      Params:         0       0       0       0       0       0       0       0       0
  2707 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2708 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2709 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2710 ;;Total ram usage:        0 bytes
  2711 ;; Hardware stack levels used: 1
  2712 ;; Hardware stack levels required when called: 4
  2713 ;; This function calls:
  2714 ;;		_EnviaDato
  2715 ;;		_HabilitaLCD
  2716 ;;		_RetardoLCD
  2717 ;; This function is called by:
  2718 ;;		_InicializaLCD
  2719 ;;		_main
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text19
  2724   00132A                     __ptext19:
  2725                           	callstack 0
  2726   00132A                     _BorraLCD:
  2727                           	callstack 25
  2728                           
  2729                           ;LibLCDXC8.h: 107: LATE0=0;
  2730                           
  2731                           ;incstack = 0
  2732   00132A  908D               	bcf	3981,0,c	;volatile
  2733                           
  2734                           ;LibLCDXC8.h: 108: EnviaDato(0x01);
  2735   00132C  0E01               	movlw	1
  2736   00132E  EC67  F008         	call	_EnviaDato
  2737                           
  2738                           ;LibLCDXC8.h: 109: HabilitaLCD();
  2739   001332  ECB0  F009         	call	_HabilitaLCD	;wreg free
  2740                           
  2741                           ;LibLCDXC8.h: 110: RetardoLCD(2);
  2742   001336  0E02               	movlw	2
  2743   001338  ECE2  F007         	call	_RetardoLCD
  2744   00133C  0012               	return		;funcret
  2745   00133E                     __end_of_BorraLCD:
  2746                           	callstack 0
  2747                           
  2748 ;; *************** function _EnviaDato *****************
  2749 ;; Defined at:
  2750 ;;		line 54 in file "LibLCDXC8.h"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;  a               1    wreg     unsigned char 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  a               1    5[COMRAM] unsigned char 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2764 ;;      Params:         0       0       0       0       0       0       0       0       0
  2765 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2766 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2767 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2768 ;;Total ram usage:        2 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; Hardware stack levels required when called: 3
  2771 ;; This function calls:
  2772 ;;		_HabilitaLCD
  2773 ;;		_RetardoLCD
  2774 ;; This function is called by:
  2775 ;;		_InicializaLCD
  2776 ;;		_BorraLCD
  2777 ;;		_EscribeLCD_c
  2778 ;;		_DireccionaLCD
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text20
  2783   0010CE                     __ptext20:
  2784                           	callstack 0
  2785   0010CE                     _EnviaDato:
  2786                           	callstack 25
  2787                           
  2788                           ;incstack = 0
  2789                           ;EnviaDato@a stored from wreg
  2790   0010CE  6E06               	movwf	EnviaDato@a^0,c
  2791                           
  2792                           ;LibLCDXC8.h: 55: if(interfaz==4){
  2793   0010D0  0E04               	movlw	4
  2794   0010D2  1820               	xorwf	_interfaz^0,w,c
  2795   0010D4  A4D8               	btfss	status,2,c
  2796   0010D6  D017               	goto	l1093
  2797                           
  2798                           ;LibLCDXC8.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2799   0010D8  C006  F005         	movff	EnviaDato@a,??_EnviaDato
  2800   0010DC  0EF0               	movlw	240
  2801   0010DE  1605               	andwf	??_EnviaDato^0,f,c
  2802   0010E0  508C               	movf	140,w,c	;volatile
  2803   0010E2  0B0F               	andlw	15
  2804   0010E4  1005               	iorwf	??_EnviaDato^0,w,c
  2805   0010E6  6E8C               	movwf	140,c	;volatile
  2806                           
  2807                           ;LibLCDXC8.h: 57: HabilitaLCD();
  2808   0010E8  ECB0  F009         	call	_HabilitaLCD	;wreg free
  2809                           
  2810                           ;LibLCDXC8.h: 58: RetardoLCD(1);
  2811   0010EC  0E01               	movlw	1
  2812   0010EE  ECE2  F007         	call	_RetardoLCD
  2813                           
  2814                           ;LibLCDXC8.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  2815   0010F2  C006  F005         	movff	EnviaDato@a,??_EnviaDato
  2816   0010F6  3A05               	swapf	??_EnviaDato^0,f,c
  2817   0010F8  0EF0               	movlw	240
  2818   0010FA  1605               	andwf	??_EnviaDato^0,f,c
  2819   0010FC  508C               	movf	140,w,c	;volatile
  2820   0010FE  0B0F               	andlw	15
  2821   001100  1005               	iorwf	??_EnviaDato^0,w,c
  2822   001102  6E8C               	movwf	140,c	;volatile
  2823                           
  2824                           ;LibLCDXC8.h: 60: }else if(interfaz==8){
  2825   001104  0012               	return	
  2826   001106                     l1093:
  2827   001106  0E08               	movlw	8
  2828   001108  1820               	xorwf	_interfaz^0,w,c
  2829   00110A  A4D8               	btfss	status,2,c
  2830   00110C  0012               	return	
  2831                           
  2832                           ;LibLCDXC8.h: 61: LATD=a;
  2833   00110E  C006  FF8C         	movff	EnviaDato@a,3980	;volatile
  2834   001112  0012               	return		;funcret
  2835   001114                     __end_of_EnviaDato:
  2836                           	callstack 0
  2837                           
  2838 ;; *************** function _RetardoLCD *****************
  2839 ;; Defined at:
  2840 ;;		line 265 in file "LibLCDXC8.h"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  a               1    wreg     unsigned char 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  a               1    3[COMRAM] unsigned char 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2854 ;;      Params:         0       0       0       0       0       0       0       0       0
  2855 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2856 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2857 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2858 ;;Total ram usage:        2 bytes
  2859 ;; Hardware stack levels used: 1
  2860 ;; Hardware stack levels required when called: 2
  2861 ;; This function calls:
  2862 ;;		Nothing
  2863 ;; This function is called by:
  2864 ;;		_EnviaDato
  2865 ;;		_InicializaLCD
  2866 ;;		_BorraLCD
  2867 ;;		_EscribeLCD_c
  2868 ;;		_DireccionaLCD
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text21
  2873   000FC4                     __ptext21:
  2874                           	callstack 0
  2875   000FC4                     _RetardoLCD:
  2876                           	callstack 26
  2877                           
  2878                           ;incstack = 0
  2879                           ;RetardoLCD@a stored from wreg
  2880   000FC4  6E04               	movwf	RetardoLCD@a^0,c
  2881                           
  2882                           ;LibLCDXC8.h: 266: switch(a){
  2883   000FC6  D023               	goto	l1081
  2884   000FC8                     l1071:
  2885   000FC8  0E62               	movlw	98
  2886   000FCA  6E03               	movwf	??_RetardoLCD^0,c
  2887   000FCC  0E66               	movlw	102
  2888   000FCE                     u1287:
  2889   000FCE  2EE8               	decfsz	wreg,f,c
  2890   000FD0  D7FE               	bra	u1287
  2891   000FD2  2E03               	decfsz	??_RetardoLCD^0,f,c
  2892   000FD4  D7FC               	bra	u1287
  2893                           
  2894                           ;LibLCDXC8.h: 269: break;
  2895   000FD6  0012               	return	
  2896   000FD8                     l1073:
  2897   000FD8  0E07               	movlw	7
  2898   000FDA  6E03               	movwf	??_RetardoLCD^0,c
  2899   000FDC  0E7D               	movlw	125
  2900   000FDE                     u1297:
  2901   000FDE  2EE8               	decfsz	wreg,f,c
  2902   000FE0  D7FE               	bra	u1297
  2903   000FE2  2E03               	decfsz	??_RetardoLCD^0,f,c
  2904   000FE4  D7FC               	bra	u1297
  2905   000FE6  F000               	nop	
  2906                           
  2907                           ;LibLCDXC8.h: 271: _delay((unsigned long)((640)*(20000000/4000000.0)));
  2908   000FE8  0E05               	movlw	5
  2909   000FEA  6E03               	movwf	??_RetardoLCD^0,c
  2910   000FEC  0E26               	movlw	38
  2911   000FEE                     u1307:
  2912   000FEE  2EE8               	decfsz	wreg,f,c
  2913   000FF0  D7FE               	bra	u1307
  2914   000FF2  2E03               	decfsz	??_RetardoLCD^0,f,c
  2915   000FF4  D7FC               	bra	u1307
  2916   000FF6  D000               	nop2	
  2917                           
  2918                           ;LibLCDXC8.h: 273: break;
  2919   000FF8  0012               	return	
  2920   000FFA                     l1075:
  2921   000FFA  0EA6               	movlw	166
  2922   000FFC                     u1317:
  2923   000FFC  2EE8               	decfsz	wreg,f,c
  2924   000FFE  D7FE               	bra	u1317
  2925   001000  D000               	nop2	
  2926                           
  2927                           ;LibLCDXC8.h: 276: break;
  2928   001002  0012               	return	
  2929   001004                     l1077:
  2930   001004  0E42               	movlw	66
  2931   001006                     u1327:
  2932   001006  2EE8               	decfsz	wreg,f,c
  2933   001008  D7FE               	bra	u1327
  2934   00100A  D000               	nop2	
  2935                           
  2936                           ;LibLCDXC8.h: 279: break;
  2937   00100C  0012               	return	
  2938   00100E                     l1081:
  2939   00100E  5004               	movf	RetardoLCD@a^0,w,c
  2940                           
  2941                           ; Switch size 1, requested type "simple"
  2942                           ; Number of cases is 4, Range of values is 1 to 4
  2943                           ; switch strategies available:
  2944                           ; Name         Instructions Cycles
  2945                           ; simple_byte           13     7 (average)
  2946                           ;	Chosen strategy is simple_byte
  2947   001010  0A01               	xorlw	1	; case 1
  2948   001012  B4D8               	btfsc	status,2,c
  2949   001014  D7D9               	goto	l1071
  2950   001016  0A03               	xorlw	3	; case 2
  2951   001018  B4D8               	btfsc	status,2,c
  2952   00101A  D7DE               	goto	l1073
  2953   00101C  0A01               	xorlw	1	; case 3
  2954   00101E  B4D8               	btfsc	status,2,c
  2955   001020  D7EC               	goto	l1075
  2956   001022  0A07               	xorlw	7	; case 4
  2957   001024  A4D8               	btfss	status,2,c
  2958   001026  0012               	return	
  2959   001028  D7ED               	goto	l1077
  2960   00102A                     __end_of_RetardoLCD:
  2961                           	callstack 0
  2962                           
  2963 ;; *************** function _HabilitaLCD *****************
  2964 ;; Defined at:
  2965 ;;		line 98 in file "LibLCDXC8.h"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2979 ;;      Params:         0       0       0       0       0       0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2982 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2983 ;;Total ram usage:        0 bytes
  2984 ;; Hardware stack levels used: 1
  2985 ;; Hardware stack levels required when called: 2
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		_EnviaDato
  2990 ;;		_InicializaLCD
  2991 ;;		_BorraLCD
  2992 ;;		_EscribeLCD_c
  2993 ;;		_DireccionaLCD
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text22
  2998   001360                     __ptext22:
  2999                           	callstack 0
  3000   001360                     _HabilitaLCD:
  3001                           	callstack 26
  3002                           
  3003                           ;LibLCDXC8.h: 100: LATE1=1;
  3004                           
  3005                           ;incstack = 0
  3006   001360  828D               	bsf	3981,1,c	;volatile
  3007                           
  3008                           ;LibLCDXC8.h: 101: _delay((unsigned long)((40)*(20000000/4000000.0)));
  3009   001362  0E42               	movlw	66
  3010   001364                     u1337:
  3011   001364  2EE8               	decfsz	wreg,f,c
  3012   001366  D7FE               	bra	u1337
  3013   001368  D000               	nop2	
  3014                           
  3015                           ;LibLCDXC8.h: 103: LATE1=0;
  3016   00136A  928D               	bcf	3981,1,c	;volatile
  3017   00136C  0012               	return		;funcret
  3018   00136E                     __end_of_HabilitaLCD:
  3019                           	callstack 0
  3020                           
  3021 ;; *************** function _ConfiguraLCD *****************
  3022 ;; Defined at:
  3023 ;;		line 50 in file "LibLCDXC8.h"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;  a               1    wreg     unsigned char 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  a               1    2[COMRAM] unsigned char 
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    wreg      void 
  3030 ;; Registers used:
  3031 ;;		wreg, status,2, status,0
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3037 ;;      Params:         0       0       0       0       0       0       0       0       0
  3038 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3039 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3040 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3041 ;;Total ram usage:        1 bytes
  3042 ;; Hardware stack levels used: 1
  3043 ;; Hardware stack levels required when called: 2
  3044 ;; This function calls:
  3045 ;;		Nothing
  3046 ;; This function is called by:
  3047 ;;		_main
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text23
  3052   0012E6                     __ptext23:
  3053                           	callstack 0
  3054   0012E6                     _ConfiguraLCD:
  3055                           	callstack 28
  3056                           
  3057                           ;incstack = 0
  3058                           ;ConfiguraLCD@a stored from wreg
  3059   0012E6  6E03               	movwf	ConfiguraLCD@a^0,c
  3060                           
  3061                           ;LibLCDXC8.h: 51: if(a==4 | a ==8)
  3062   0012E8  0E04               	movlw	4
  3063   0012EA  1803               	xorwf	ConfiguraLCD@a^0,w,c
  3064   0012EC  B4D8               	btfsc	status,2,c
  3065   0012EE  D004               	goto	u270
  3066   0012F0  0E08               	movlw	8
  3067   0012F2  1803               	xorwf	ConfiguraLCD@a^0,w,c
  3068   0012F4  A4D8               	btfss	status,2,c
  3069   0012F6  0012               	return	
  3070   0012F8                     u270:
  3071                           
  3072                           ;LibLCDXC8.h: 52: interfaz=a;
  3073   0012F8  C003  F020         	movff	ConfiguraLCD@a,_interfaz
  3074   0012FC  0012               	return		;funcret
  3075   0012FE                     __end_of_ConfiguraLCD:
  3076                           	callstack 0
  3077                           
  3078 ;; *************** function _ColorRGB *****************
  3079 ;; Defined at:
  3080 ;;		line 237 in file "Lab5.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  val             2    2[COMRAM] unsigned int 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, status,2, status,0
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3094 ;;      Params:         2       0       0       0       0       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3097 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3098 ;;Total ram usage:        2 bytes
  3099 ;; Hardware stack levels used: 1
  3100 ;; Hardware stack levels required when called: 2
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_main
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text24
  3109   000D32                     __ptext24:
  3110                           	callstack 0
  3111   000D32                     _ColorRGB:
  3112                           	callstack 28
  3113                           
  3114                           ;Lab5.c: 238: if (val < 22) {
  3115                           
  3116                           ;incstack = 0
  3117   000D32  5004               	movf	(ColorRGB@val+1)^0,w,c
  3118   000D34  E108               	bnz	l1839
  3119   000D36  0E16               	movlw	22
  3120   000D38  5C03               	subwf	ColorRGB@val^0,w,c
  3121   000D3A  B0D8               	btfsc	status,0,c
  3122   000D3C  D004               	goto	l1839
  3123                           
  3124                           ;Lab5.c: 239: RB5 = 0;
  3125   000D3E  9A81               	bcf	3969,5,c	;volatile
  3126                           
  3127                           ;Lab5.c: 240: RB6 = 0;
  3128   000D40  9C81               	bcf	3969,6,c	;volatile
  3129                           
  3130                           ;Lab5.c: 241: RB7 = 0;
  3131   000D42  9E81               	bcf	3969,7,c	;volatile
  3132                           
  3133                           ;Lab5.c: 242: } else if (val >= 22 && val < 25) {
  3134   000D44  0012               	return	
  3135   000D46                     l1839:
  3136   000D46  5004               	movf	(ColorRGB@val+1)^0,w,c
  3137   000D48  E104               	bnz	u880
  3138   000D4A  0E16               	movlw	22
  3139   000D4C  5C03               	subwf	ColorRGB@val^0,w,c
  3140   000D4E  A0D8               	btfss	status,0,c
  3141   000D50  D00A               	goto	l1845
  3142   000D52                     u880:
  3143   000D52  5004               	movf	(ColorRGB@val+1)^0,w,c
  3144   000D54  E108               	bnz	l1845
  3145   000D56  0E19               	movlw	25
  3146   000D58  5C03               	subwf	ColorRGB@val^0,w,c
  3147   000D5A  B0D8               	btfsc	status,0,c
  3148   000D5C  D004               	goto	l1845
  3149                           
  3150                           ;Lab5.c: 243: RB5 = 1;
  3151   000D5E  8A81               	bsf	3969,5,c	;volatile
  3152                           
  3153                           ;Lab5.c: 244: RB6 = 0;
  3154   000D60  9C81               	bcf	3969,6,c	;volatile
  3155                           
  3156                           ;Lab5.c: 245: RB7 = 1;
  3157   000D62  8E81               	bsf	3969,7,c	;volatile
  3158                           
  3159                           ;Lab5.c: 246: } else if (val >= 25 && val < 28) {
  3160   000D64  0012               	return	
  3161   000D66                     l1845:
  3162   000D66  5004               	movf	(ColorRGB@val+1)^0,w,c
  3163   000D68  E104               	bnz	u900
  3164   000D6A  0E19               	movlw	25
  3165   000D6C  5C03               	subwf	ColorRGB@val^0,w,c
  3166   000D6E  A0D8               	btfss	status,0,c
  3167   000D70  D00A               	goto	l1851
  3168   000D72                     u900:
  3169   000D72  5004               	movf	(ColorRGB@val+1)^0,w,c
  3170   000D74  E108               	bnz	l1851
  3171   000D76  0E1C               	movlw	28
  3172   000D78  5C03               	subwf	ColorRGB@val^0,w,c
  3173   000D7A  B0D8               	btfsc	status,0,c
  3174   000D7C  D004               	goto	l1851
  3175                           
  3176                           ;Lab5.c: 247: RB5 = 1;
  3177   000D7E  8A81               	bsf	3969,5,c	;volatile
  3178                           
  3179                           ;Lab5.c: 248: RB6 = 0;
  3180   000D80  9C81               	bcf	3969,6,c	;volatile
  3181                           
  3182                           ;Lab5.c: 249: RB7 = 0;
  3183   000D82  9E81               	bcf	3969,7,c	;volatile
  3184                           
  3185                           ;Lab5.c: 250: } else if (val >= 28 && val < 31) {
  3186   000D84  0012               	return	
  3187   000D86                     l1851:
  3188   000D86  5004               	movf	(ColorRGB@val+1)^0,w,c
  3189   000D88  E104               	bnz	u920
  3190   000D8A  0E1C               	movlw	28
  3191   000D8C  5C03               	subwf	ColorRGB@val^0,w,c
  3192   000D8E  A0D8               	btfss	status,0,c
  3193   000D90  D00A               	goto	l1857
  3194   000D92                     u920:
  3195   000D92  5004               	movf	(ColorRGB@val+1)^0,w,c
  3196   000D94  E108               	bnz	l1857
  3197   000D96  0E1F               	movlw	31
  3198   000D98  5C03               	subwf	ColorRGB@val^0,w,c
  3199   000D9A  B0D8               	btfsc	status,0,c
  3200   000D9C  D004               	goto	l1857
  3201                           
  3202                           ;Lab5.c: 251: RB5 = 1;
  3203   000D9E  8A81               	bsf	3969,5,c	;volatile
  3204                           
  3205                           ;Lab5.c: 252: RB6 = 1;
  3206   000DA0  8C81               	bsf	3969,6,c	;volatile
  3207                           
  3208                           ;Lab5.c: 253: RB7 = 0;
  3209   000DA2  9E81               	bcf	3969,7,c	;volatile
  3210                           
  3211                           ;Lab5.c: 254: } else if (val >= 31 && val < 34) {
  3212   000DA4  0012               	return	
  3213   000DA6                     l1857:
  3214   000DA6  5004               	movf	(ColorRGB@val+1)^0,w,c
  3215   000DA8  E104               	bnz	u940
  3216   000DAA  0E1F               	movlw	31
  3217   000DAC  5C03               	subwf	ColorRGB@val^0,w,c
  3218   000DAE  A0D8               	btfss	status,0,c
  3219   000DB0  D00A               	goto	l1863
  3220   000DB2                     u940:
  3221   000DB2  5004               	movf	(ColorRGB@val+1)^0,w,c
  3222   000DB4  E108               	bnz	l1863
  3223   000DB6  0E22               	movlw	34
  3224   000DB8  5C03               	subwf	ColorRGB@val^0,w,c
  3225   000DBA  B0D8               	btfsc	status,0,c
  3226   000DBC  D004               	goto	l1863
  3227                           
  3228                           ;Lab5.c: 255: RB5 = 0;
  3229   000DBE  9A81               	bcf	3969,5,c	;volatile
  3230                           
  3231                           ;Lab5.c: 256: RB6 = 1;
  3232   000DC0  8C81               	bsf	3969,6,c	;volatile
  3233                           
  3234                           ;Lab5.c: 257: RB7 = 0;
  3235   000DC2  9E81               	bcf	3969,7,c	;volatile
  3236                           
  3237                           ;Lab5.c: 258: } else if (val >= 34 && val < 37) {
  3238   000DC4  0012               	return	
  3239   000DC6                     l1863:
  3240   000DC6  5004               	movf	(ColorRGB@val+1)^0,w,c
  3241   000DC8  E104               	bnz	u960
  3242   000DCA  0E22               	movlw	34
  3243   000DCC  5C03               	subwf	ColorRGB@val^0,w,c
  3244   000DCE  A0D8               	btfss	status,0,c
  3245   000DD0  D00A               	goto	l1869
  3246   000DD2                     u960:
  3247   000DD2  5004               	movf	(ColorRGB@val+1)^0,w,c
  3248   000DD4  E108               	bnz	l1869
  3249   000DD6  0E25               	movlw	37
  3250   000DD8  5C03               	subwf	ColorRGB@val^0,w,c
  3251   000DDA  B0D8               	btfsc	status,0,c
  3252   000DDC  D004               	goto	l1869
  3253                           
  3254                           ;Lab5.c: 259: RB5 = 0;
  3255   000DDE  9A81               	bcf	3969,5,c	;volatile
  3256                           
  3257                           ;Lab5.c: 260: RB6 = 1;
  3258   000DE0  8C81               	bsf	3969,6,c	;volatile
  3259                           
  3260                           ;Lab5.c: 261: RB7 = 1;
  3261   000DE2  8E81               	bsf	3969,7,c	;volatile
  3262                           
  3263                           ;Lab5.c: 262: } else if (val >= 37 && val < 42) {
  3264   000DE4  0012               	return	
  3265   000DE6                     l1869:
  3266   000DE6  5004               	movf	(ColorRGB@val+1)^0,w,c
  3267   000DE8  E104               	bnz	u980
  3268   000DEA  0E25               	movlw	37
  3269   000DEC  5C03               	subwf	ColorRGB@val^0,w,c
  3270   000DEE  A0D8               	btfss	status,0,c
  3271   000DF0  D00A               	goto	l1875
  3272   000DF2                     u980:
  3273   000DF2  5004               	movf	(ColorRGB@val+1)^0,w,c
  3274   000DF4  E108               	bnz	l1875
  3275   000DF6  0E2A               	movlw	42
  3276   000DF8  5C03               	subwf	ColorRGB@val^0,w,c
  3277   000DFA  B0D8               	btfsc	status,0,c
  3278   000DFC  D004               	goto	l1875
  3279                           
  3280                           ;Lab5.c: 263: RB5 = 0;
  3281   000DFE  9A81               	bcf	3969,5,c	;volatile
  3282                           
  3283                           ;Lab5.c: 264: RB6 = 0;
  3284   000E00  9C81               	bcf	3969,6,c	;volatile
  3285                           
  3286                           ;Lab5.c: 265: RB7 = 1;
  3287   000E02  8E81               	bsf	3969,7,c	;volatile
  3288                           
  3289                           ;Lab5.c: 266: } else if (val >= 42) {
  3290   000E04  0012               	return	
  3291   000E06                     l1875:
  3292   000E06  5004               	movf	(ColorRGB@val+1)^0,w,c
  3293   000E08  E104               	bnz	u1000
  3294   000E0A  0E2A               	movlw	42
  3295   000E0C  5C03               	subwf	ColorRGB@val^0,w,c
  3296   000E0E  A0D8               	btfss	status,0,c
  3297   000E10  0012               	return	
  3298   000E12                     u1000:
  3299                           
  3300                           ;Lab5.c: 267: RB5 = 1;
  3301   000E12  8A81               	bsf	3969,5,c	;volatile
  3302                           
  3303                           ;Lab5.c: 268: RB6 = 1;
  3304   000E14  8C81               	bsf	3969,6,c	;volatile
  3305                           
  3306                           ;Lab5.c: 269: RB7 = 1;
  3307   000E16  8E81               	bsf	3969,7,c	;volatile
  3308   000E18  0012               	return	
  3309   000E1A                     __end_of_ColorRGB:
  3310                           	callstack 0
  3311                           
  3312 ;; *************** function _ADC_Conv *****************
  3313 ;; Defined at:
  3314 ;;		line 273 in file "Lab5.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  canal           1    wreg     unsigned char 
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;  canal           1    2[COMRAM] unsigned char 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  2   80[None  ] unsigned int 
  3321 ;; Registers used:
  3322 ;;		wreg, status,2, status,0
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3328 ;;      Params:         0       0       0       0       0       0       0       0       0
  3329 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3330 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3331 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3332 ;;Total ram usage:        1 bytes
  3333 ;; Hardware stack levels used: 1
  3334 ;; Hardware stack levels required when called: 2
  3335 ;; This function calls:
  3336 ;;		Nothing
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text25
  3343   00133E                     __ptext25:
  3344                           	callstack 0
  3345   00133E                     _ADC_Conv:
  3346                           	callstack 28
  3347                           
  3348                           ;incstack = 0
  3349                           ;ADC_Conv@canal stored from wreg
  3350   00133E  6E03               	movwf	ADC_Conv@canal^0,c
  3351                           
  3352                           ;Lab5.c: 274: ADCON0 = 0b00000001 | (canal << 2);
  3353   001340  4403               	rlncf	ADC_Conv@canal^0,w,c
  3354   001342  46E8               	rlncf	wreg,f,c
  3355   001344  0BFC               	andlw	252
  3356   001346  0901               	iorlw	1
  3357   001348  6EC2               	movwf	194,c	;volatile
  3358                           
  3359                           ;Lab5.c: 275: GO = 1;
  3360   00134A  82C2               	bsf	4034,1,c	;volatile
  3361   00134C                     l283:
  3362   00134C  A2C2               	btfss	4034,1,c	;volatile
  3363   00134E  0012               	return	
  3364   001350  D7FD               	goto	l283
  3365   001352                     __end_of_ADC_Conv:
  3366                           	callstack 0
  3367                           
  3368 ;; *************** function _ISR *****************
  3369 ;; Defined at:
  3370 ;;		line 309 in file "Lab5.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;		None
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;		None
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      void 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3384 ;;      Params:         0       0       0       0       0       0       0       0       0
  3385 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3386 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3387 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3388 ;;Total ram usage:        2 bytes
  3389 ;; Hardware stack levels used: 1
  3390 ;; Hardware stack levels required when called: 1
  3391 ;; This function calls:
  3392 ;;		_Recibir
  3393 ;; This function is called by:
  3394 ;;		Interrupt level 2
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           	psect	intcode
  3399   000008                     __pintcode:
  3400                           	callstack 0
  3401   000008                     _ISR:
  3402                           	callstack 25
  3403                           
  3404                           ;incstack = 0
  3405   000008  8221               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3406   00000A  ED5B  F007         	call	int_func,f	;refresh shadow registers
  3407                           
  3408                           	psect	intcode_body
  3409   000EB6                     __pintcode_body:
  3410                           	callstack 25
  3411   000EB6                     int_func:
  3412                           	callstack 25
  3413   000EB6  0006               	pop		; remove dummy address from shadow register refresh
  3414                           
  3415                           ;Lab5.c: 310: if(TMR0IF){
  3416   000EB8  A4F2               	btfss	4082,2,c	;volatile
  3417   000EBA  D00A               	goto	i2l1647
  3418                           
  3419                           ;Lab5.c: 311: TMR0IF=0;
  3420   000EBC  94F2               	bcf	4082,2,c	;volatile
  3421                           
  3422                           ;Lab5.c: 312: RE2 = !RE2;
  3423   000EBE  B484               	btfsc	3972,2,c	;volatile
  3424   000EC0  D002               	goto	i2u64_40
  3425   000EC2  8484               	bsf	3972,2,c	;volatile
  3426   000EC4  D001               	goto	i2u65_45
  3427   000EC6                     i2u64_40:
  3428   000EC6  9484               	bcf	3972,2,c	;volatile
  3429   000EC8                     i2u65_45:
  3430                           
  3431                           ;Lab5.c: 313: TMR0 = 3036;
  3432   000EC8  0E0B               	movlw	11
  3433   000ECA  6ED7               	movwf	215,c	;volatile
  3434   000ECC  0EDC               	movlw	220
  3435   000ECE  6ED6               	movwf	214,c	;volatile
  3436   000ED0                     i2l1647:
  3437                           
  3438                           ;Lab5.c: 315: };Lab5.c: 316: if(RCIF){
  3439   000ED0  BA9E               	btfsc	3998,5,c	;volatile
  3440   000ED2  D01A               	goto	i2l1661
  3441   000ED4  D033               	goto	i2l309
  3442   000ED6                     i2l1651:
  3443                           
  3444                           ;Lab5.c: 319: A=0;
  3445   000ED6  0E00               	movlw	0
  3446   000ED8  6E1C               	movwf	(_A+1)^0,c
  3447   000EDA  0E00               	movlw	0
  3448   000EDC  6E1B               	movwf	_A^0,c
  3449                           
  3450                           ;Lab5.c: 320: B=0;
  3451   000EDE  0E00               	movlw	0
  3452   000EE0  6E1A               	movwf	(_B+1)^0,c
  3453   000EE2  0E00               	movlw	0
  3454   000EE4  D00F               	goto	L9
  3455   000EE6                     i2l1653:
  3456                           
  3457                           ;Lab5.c: 323: A=0;
  3458   000EE6  0E00               	movlw	0
  3459   000EE8  6E1C               	movwf	(_A+1)^0,c
  3460   000EEA  0E00               	movlw	0
  3461   000EEC  D007               	goto	L11
  3462   000EEE                     i2l1655:
  3463                           
  3464                           ;Lab5.c: 327: A=1;
  3465   000EEE  0E00               	movlw	0
  3466   000EF0  6E1C               	movwf	(_A+1)^0,c
  3467   000EF2  0E01               	movlw	1
  3468   000EF4  D7F3               	goto	L10
  3469   000EF6                     i2l1657:
  3470                           
  3471                           ;Lab5.c: 331: A=1;
  3472   000EF6  0E00               	movlw	0
  3473   000EF8  6E1C               	movwf	(_A+1)^0,c
  3474   000EFA  0E01               	movlw	1
  3475   000EFC                     L11:
  3476   000EFC  6E1B               	movwf	_A^0,c
  3477                           
  3478                           ;Lab5.c: 332: B=1;
  3479   000EFE  0E00               	movlw	0
  3480   000F00  6E1A               	movwf	(_B+1)^0,c
  3481   000F02  0E01               	movlw	1
  3482   000F04                     L9:
  3483   000F04  6E19               	movwf	_B^0,c
  3484                           
  3485                           ;Lab5.c: 333: break;
  3486   000F06  D00E               	goto	i2l1663
  3487   000F08                     i2l1661:
  3488   000F08  ECBD  F009         	call	_Recibir	;wreg free
  3489                           
  3490                           ; Switch size 1, requested type "simple"
  3491                           ; Number of cases is 4, Range of values is 67 to 82
  3492                           ; switch strategies available:
  3493                           ; Name         Instructions Cycles
  3494                           ; simple_byte           13     7 (average)
  3495                           ;	Chosen strategy is simple_byte
  3496   000F0C  0A43               	xorlw	67	; case 67
  3497   000F0E  B4D8               	btfsc	status,2,c
  3498   000F10  D7E2               	goto	i2l1651
  3499   000F12  0A05               	xorlw	5	; case 70
  3500   000F14  B4D8               	btfsc	status,2,c
  3501   000F16  D7EF               	goto	i2l1657
  3502   000F18  0A0D               	xorlw	13	; case 75
  3503   000F1A  B4D8               	btfsc	status,2,c
  3504   000F1C  D7E4               	goto	i2l1653
  3505   000F1E  0A19               	xorlw	25	; case 82
  3506   000F20  B4D8               	btfsc	status,2,c
  3507   000F22  D7E5               	goto	i2l1655
  3508   000F24                     i2l1663:
  3509                           
  3510                           ;Lab5.c: 337: _delay((unsigned long)((100)*(8000000/4000.0)));
  3511   000F24  0E02               	movlw	2
  3512   000F26  6E02               	movwf	(??_ISR+1)^0,c
  3513   000F28  0E04               	movlw	4
  3514   000F2A  6E01               	movwf	??_ISR^0,c
  3515   000F2C  0EBA               	movlw	186
  3516   000F2E                     i2u134_47:
  3517   000F2E  2EE8               	decfsz	wreg,f,c
  3518   000F30  D7FE               	bra	i2u134_47
  3519   000F32  2E01               	decfsz	??_ISR^0,f,c
  3520   000F34  D7FC               	bra	i2u134_47
  3521   000F36  2E02               	decfsz	(??_ISR+1)^0,f,c
  3522   000F38  D7FA               	bra	i2u134_47
  3523   000F3A  D000               	nop2	
  3524   000F3C                     i2l309:
  3525   000F3C  9221               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3526   000F3E  0011               	retfie		f
  3527   000F40                     __end_of_ISR:
  3528                           	callstack 0
  3529                           
  3530 ;; *************** function _Recibir *****************
  3531 ;; Defined at:
  3532 ;;		line 169 in file "Lab5.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      unsigned char 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3546 ;;      Params:         0       0       0       0       0       0       0       0       0
  3547 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3549 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3550 ;;Total ram usage:        0 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; This function calls:
  3553 ;;		Nothing
  3554 ;; This function is called by:
  3555 ;;		_ISR
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text27
  3560   00137A                     __ptext27:
  3561                           	callstack 0
  3562   00137A                     _Recibir:
  3563                           	callstack 25
  3564                           
  3565                           ;Lab5.c: 170: while(RCIF==0);
  3566                           
  3567                           ;incstack = 0
  3568   00137A  AA9E               	btfss	3998,5,c	;volatile
  3569   00137C  D7FE               	goto	__ptext27
  3570                           
  3571                           ;Lab5.c: 171: return RCREG;
  3572   00137E  50AE               	movf	174,w,c	;volatile
  3573   001380  0012               	return		;funcret
  3574   001382                     __end_of_Recibir:
  3575                           	callstack 0
  3576                           
  3577                           	psect	rparam
  3578   000000                     
  3579                           	psect	temp
  3580   000021                     btemp:
  3581                           	callstack 0
  3582   000021                     	ds	1
  3583   000000                     int$flags	set	btemp
  3584   000000                     wtemp8	set	btemp+1
  3585   000000                     ttemp5	set	btemp+1
  3586   000000                     ttemp6	set	btemp+4
  3587   000000                     ttemp7	set	btemp+8
  3588                           
  3589                           	psect	idloc
  3590                           
  3591                           ;Config register IDLOC0 @ 0x200000
  3592                           ;	unspecified, using default values
  3593   200000                     	org	2097152
  3594   200000  FF                 	db	255
  3595                           
  3596                           ;Config register IDLOC1 @ 0x200001
  3597                           ;	unspecified, using default values
  3598   200001                     	org	2097153
  3599   200001  FF                 	db	255
  3600                           
  3601                           ;Config register IDLOC2 @ 0x200002
  3602                           ;	unspecified, using default values
  3603   200002                     	org	2097154
  3604   200002  FF                 	db	255
  3605                           
  3606                           ;Config register IDLOC3 @ 0x200003
  3607                           ;	unspecified, using default values
  3608   200003                     	org	2097155
  3609   200003  FF                 	db	255
  3610                           
  3611                           ;Config register IDLOC4 @ 0x200004
  3612                           ;	unspecified, using default values
  3613   200004                     	org	2097156
  3614   200004  FF                 	db	255
  3615                           
  3616                           ;Config register IDLOC5 @ 0x200005
  3617                           ;	unspecified, using default values
  3618   200005                     	org	2097157
  3619   200005  FF                 	db	255
  3620                           
  3621                           ;Config register IDLOC6 @ 0x200006
  3622                           ;	unspecified, using default values
  3623   200006                     	org	2097158
  3624   200006  FF                 	db	255
  3625                           
  3626                           ;Config register IDLOC7 @ 0x200007
  3627                           ;	unspecified, using default values
  3628   200007                     	org	2097159
  3629   200007  FF                 	db	255
  3630                           
  3631                           	psect	config
  3632                           
  3633                           ;Config register CONFIG1L @ 0x300000
  3634                           ;	unspecified, using default values
  3635                           ;	PLL Prescaler Selection bits
  3636                           ;	PLLDIV = 0x0, unprogrammed default
  3637                           ;	System Clock Postscaler Selection bits
  3638                           ;	CPUDIV = 0x0, unprogrammed default
  3639                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3640                           ;	USBDIV = 0x0, unprogrammed default
  3641   300000                     	org	3145728
  3642   300000  00                 	db	0
  3643                           
  3644                           ;Config register CONFIG1H @ 0x300001
  3645                           ;	Oscillator Selection bits
  3646                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3647                           ;	Fail-Safe Clock Monitor Enable bit
  3648                           ;	FCMEN = 0x0, unprogrammed default
  3649                           ;	Internal/External Oscillator Switchover bit
  3650                           ;	IESO = 0x0, unprogrammed default
  3651   300001                     	org	3145729
  3652   300001  09                 	db	9
  3653                           
  3654                           ;Config register CONFIG2L @ 0x300002
  3655                           ;	unspecified, using default values
  3656                           ;	Power-up Timer Enable bit
  3657                           ;	PWRT = 0x1, unprogrammed default
  3658                           ;	Brown-out Reset Enable bits
  3659                           ;	BOR = 0x3, unprogrammed default
  3660                           ;	Brown-out Reset Voltage bits
  3661                           ;	BORV = 0x3, unprogrammed default
  3662                           ;	USB Voltage Regulator Enable bit
  3663                           ;	VREGEN = 0x0, unprogrammed default
  3664   300002                     	org	3145730
  3665   300002  1F                 	db	31
  3666                           
  3667                           ;Config register CONFIG2H @ 0x300003
  3668                           ;	Watchdog Timer Enable bit
  3669                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3670                           ;	Watchdog Timer Postscale Select bits
  3671                           ;	WDTPS = 0xF, unprogrammed default
  3672   300003                     	org	3145731
  3673   300003  1E                 	db	30
  3674                           
  3675                           ; Padding undefined space
  3676   300004                     	org	3145732
  3677   300004  FF                 	db	255
  3678                           
  3679                           ;Config register CONFIG3H @ 0x300005
  3680                           ;	CCP2 MUX bit
  3681                           ;	CCP2MX = 0x1, unprogrammed default
  3682                           ;	PORTB A/D Enable bit
  3683                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3684                           ;	Low-Power Timer 1 Oscillator Enable bit
  3685                           ;	LPT1OSC = 0x0, unprogrammed default
  3686                           ;	MCLR Pin Enable bit
  3687                           ;	MCLRE = 0x1, unprogrammed default
  3688   300005                     	org	3145733
  3689   300005  81                 	db	129
  3690                           
  3691                           ;Config register CONFIG4L @ 0x300006
  3692                           ;	Stack Full/Underflow Reset Enable bit
  3693                           ;	STVREN = 0x1, unprogrammed default
  3694                           ;	Single-Supply ICSP Enable bit
  3695                           ;	LVP = OFF, Single-Supply ICSP disabled
  3696                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3697                           ;	ICPRT = 0x0, unprogrammed default
  3698                           ;	Extended Instruction Set Enable bit
  3699                           ;	XINST = 0x0, unprogrammed default
  3700                           ;	Background Debugger Enable bit
  3701                           ;	DEBUG = 0x1, unprogrammed default
  3702   300006                     	org	3145734
  3703   300006  81                 	db	129
  3704                           
  3705                           ; Padding undefined space
  3706   300007                     	org	3145735
  3707   300007  FF                 	db	255
  3708                           
  3709                           ;Config register CONFIG5L @ 0x300008
  3710                           ;	unspecified, using default values
  3711                           ;	Code Protection bit
  3712                           ;	CP0 = 0x1, unprogrammed default
  3713                           ;	Code Protection bit
  3714                           ;	CP1 = 0x1, unprogrammed default
  3715                           ;	Code Protection bit
  3716                           ;	CP2 = 0x1, unprogrammed default
  3717                           ;	Code Protection bit
  3718                           ;	CP3 = 0x1, unprogrammed default
  3719   300008                     	org	3145736
  3720   300008  0F                 	db	15
  3721                           
  3722                           ;Config register CONFIG5H @ 0x300009
  3723                           ;	unspecified, using default values
  3724                           ;	Boot Block Code Protection bit
  3725                           ;	CPB = 0x1, unprogrammed default
  3726                           ;	Data EEPROM Code Protection bit
  3727                           ;	CPD = 0x1, unprogrammed default
  3728   300009                     	org	3145737
  3729   300009  C0                 	db	192
  3730                           
  3731                           ;Config register CONFIG6L @ 0x30000A
  3732                           ;	unspecified, using default values
  3733                           ;	Write Protection bit
  3734                           ;	WRT0 = 0x1, unprogrammed default
  3735                           ;	Write Protection bit
  3736                           ;	WRT1 = 0x1, unprogrammed default
  3737                           ;	Write Protection bit
  3738                           ;	WRT2 = 0x1, unprogrammed default
  3739                           ;	Write Protection bit
  3740                           ;	WRT3 = 0x1, unprogrammed default
  3741   30000A                     	org	3145738
  3742   30000A  0F                 	db	15
  3743                           
  3744                           ;Config register CONFIG6H @ 0x30000B
  3745                           ;	unspecified, using default values
  3746                           ;	Configuration Register Write Protection bit
  3747                           ;	WRTC = 0x1, unprogrammed default
  3748                           ;	Boot Block Write Protection bit
  3749                           ;	WRTB = 0x1, unprogrammed default
  3750                           ;	Data EEPROM Write Protection bit
  3751                           ;	WRTD = 0x1, unprogrammed default
  3752   30000B                     	org	3145739
  3753   30000B  E0                 	db	224
  3754                           
  3755                           ;Config register CONFIG7L @ 0x30000C
  3756                           ;	unspecified, using default values
  3757                           ;	Table Read Protection bit
  3758                           ;	EBTR0 = 0x1, unprogrammed default
  3759                           ;	Table Read Protection bit
  3760                           ;	EBTR1 = 0x1, unprogrammed default
  3761                           ;	Table Read Protection bit
  3762                           ;	EBTR2 = 0x1, unprogrammed default
  3763                           ;	Table Read Protection bit
  3764                           ;	EBTR3 = 0x1, unprogrammed default
  3765   30000C                     	org	3145740
  3766   30000C  0F                 	db	15
  3767                           
  3768                           ;Config register CONFIG7H @ 0x30000D
  3769                           ;	unspecified, using default values
  3770                           ;	Boot Block Table Read Protection bit
  3771                           ;	EBTRB = 0x1, unprogrammed default
  3772   30000D                     	org	3145741
  3773   30000D  40                 	db	64
  3774                           tosu	equ	0xFFF
  3775                           tosh	equ	0xFFE
  3776                           tosl	equ	0xFFD
  3777                           stkptr	equ	0xFFC
  3778                           pclatu	equ	0xFFB
  3779                           pclath	equ	0xFFA
  3780                           pcl	equ	0xFF9
  3781                           tblptru	equ	0xFF8
  3782                           tblptrh	equ	0xFF7
  3783                           tblptrl	equ	0xFF6
  3784                           tablat	equ	0xFF5
  3785                           prodh	equ	0xFF4
  3786                           prodl	equ	0xFF3
  3787                           indf0	equ	0xFEF
  3788                           postinc0	equ	0xFEE
  3789                           postdec0	equ	0xFED
  3790                           preinc0	equ	0xFEC
  3791                           plusw0	equ	0xFEB
  3792                           fsr0h	equ	0xFEA
  3793                           fsr0l	equ	0xFE9
  3794                           wreg	equ	0xFE8
  3795                           indf1	equ	0xFE7
  3796                           postinc1	equ	0xFE6
  3797                           postdec1	equ	0xFE5
  3798                           preinc1	equ	0xFE4
  3799                           plusw1	equ	0xFE3
  3800                           fsr1h	equ	0xFE2
  3801                           fsr1l	equ	0xFE1
  3802                           bsr	equ	0xFE0
  3803                           indf2	equ	0xFDF
  3804                           postinc2	equ	0xFDE
  3805                           postdec2	equ	0xFDD
  3806                           preinc2	equ	0xFDC
  3807                           plusw2	equ	0xFDB
  3808                           fsr2h	equ	0xFDA
  3809                           fsr2l	equ	0xFD9
  3810                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        1
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     24      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[10]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->___awdiv
    _DireccionaLCD->_EnviaDato
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _LeerDHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6760
                                             22 COMRAM     2     2      0
                           _ADC_Conv
                           _BorraLCD
                           _ColorRGB
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                          _LeerDHT11
                     _MensajeLCD_Var
                           _ReadData
                           _SaveData
                    _TransmitirDatos
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                     14    10      4    4071
                                             10 COMRAM    12     8      4
                      _DireccionaLCD
                       _EscribeLCD_c
                         _Transmitir
                            ___awdiv
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     387
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     390
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                              6 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _SaveData                                             3     0      3     196
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _ReadData                                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       4     3      1     694
                                              7 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              6 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerDHT11                                            1     1      0      75
                                              6 COMRAM     1     1      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0      75
                                              3 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0      60
                                              4 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     0      2     384
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Conv                                             1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMRAM     2     2      0
                            _Recibir
 ---------------------------------------------------------------------------------
 (6) _Recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Conv
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerDHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Var
     _EscribeLCD_c
     _strlen
   _ReadData
   _SaveData
   _TransmitirDatos
     _DireccionaLCD
     _EscribeLCD_c
     _Transmitir
     ___awdiv
     ___lbdiv
     ___lbmod
     ___lwdiv
     ___lwmod
     ___wmul
   ___lbdiv
   ___lbmod

 _ISR (ROOT)
   _Recibir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     18      20       1       34.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRlhhl       11      0       0      33        0.0%
BITBIGSFRhlhhh       E      0       0      23        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRll          D      0       0      35        0.0%
BITBIGSFRhlhlh       8      0       0      25        0.0%
BITBIGSFRhllhl       7      0       0      29        0.0%
BITBIGSFRhlhhl       7      0       0      24        0.0%
BITBIGSFRlhhhh       6      0       0      31        0.0%
BITBIGSFRhllhhl      4      0       0      27        0.0%
BITBIGSFRhllll       4      0       0      30        0.0%
BITBIGSFRhllhhl      2      0       0      28        0.0%
BITBIGSFRhllhhh      1      0       0      26        0.0%
BITBIGSFRlhhhl       1      0       0      32        0.0%
BITBIGSFRlhl         1      0       0      34        0.0%
BITBIGSFRhhll        1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      36        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Jun 04 00:01:30 2023

                      _A 001B                        _B 0019        Transmitir@BufferT 0003  
                     _GO 007E11                       _RD 007D30                       u60 11F6  
                     _WR 007D31             ___awdiv@sign 0008               EnviaDato@a 0006  
    ___wmul@multiplicand 0005                      l205 0C4C            _InicializaLCD 0E1A  
                    l215 11A2                      l208 0D2E                      l234 11F2  
                    l218 11AC                      l229 11CE                      l253 0854  
                    l258 0994                      l283 134C                      l259 0A86  
                    l289 12BA                      l801 114C                      l791 1072  
                    _GIE 007F97                      _RB0 007C08                      _RB1 007C09  
                    _RB2 007C0A                      _RC2 007C12                      _RB5 007C0D  
                    _RC4 007C14                      _RB6 007C0E                      _RB7 007C0F  
                    _RE2 007C22                      u270 12F8                      _ISR 0008  
                    u710 0F86                      u900 0D72                      u820 112E  
                    u750 1172                      u920 0D92                      u940 0DB2  
                    u790 104C                      u960 0DD2                      u880 0D52  
                    u980 0DF2         TransmitirDatos@n 0011                      wreg 000FE8  
                   ?_ISR 0001                     l1105 11E2                     l1071 0FC8  
                   l1073 0FD8                     l1081 100E                     l1153 12CC  
                   l1075 0FFA                     l1307 0E2C                     l1163 1370  
                   l1077 1004                     l1093 1106                     l1317 0E4A  
                   l2029 0B94                     l1327 0E68                     l1347 0EA0  
                   l2067 0D04                     l2069 0D18                     l1705 0F7A  
                   l1721 0FAC                     l1811 1086                     l1707 0F82  
                   l1725 0FBA                     l1717 0FA2                     l1805 1142  
                   l1671 1256                     l1735 1168                     l1751 118C  
                   l1903 08D0                     l1673 1258                     l1905 08FA  
                   l1851 0D86                     l1819 10B8                     l1747 1184  
                   l1739 116E                     l1845 0D66                     l1693 0F54  
                   l1765 1248                     l1757 1230                     l1863 0DC6  
                   l1839 0D46                     l1857 0DA6                     l1777 1040  
                   l1875 0E06                     l1699 0F64                     l1779 1048  
                   l1869 0DE6                     l1789 1068                     l1797 1122  
                   l1893 0876                     l1799 112A                     l1897 08A2  
                   l1889 0862                     _CFGS 007D36                     _EEIF 007D0C  
                   STR_1 0801                     STR_2 080E                     STR_3 0818  
                   STR_4 081E                     u1000 0E12                     u1030 0A80  
                   u1060 0CEA                     u1117 0AD0                     u1070 0CEC  
                   u1207 0C6C                     u1127 0B82                     u1080 0CF8  
                   u1217 0C86                     u1137 0BA6                     u1090 0CFA  
                   u1307 0FEE                     u1227 0CAE                     u1147 0BC2  
                   u1317 0FFC                     u1237 0CD0                     u1157 0BDE  
                   u1327 1006                     u1247 1198                     u1167 0BFA  
                   _LATD 000F8C                     u1337 1364                     u1257 11A8  
                   u1177 0C14                     u1267 11D4                     u1187 0C32  
                   u1277 11E4                     u1197 0C56                     u1287 0FCE  
                   u1297 0FDE                     _RCIF 007CF5                     _RBPU 007F8F  
                   _TMR0 000FD6                     _TRMT 007D61                     _WREN 007D32  
         ??_EscribeLCD_c 0007                     _main 0AC0                     btemp 0021  
       __end_of_ADC_Conv 1352                     prodh 000FF4                     prodl 000FF3  
                   start 000E          __end_of_LeerBit 11FA             ___param_bank 000000  
                  ??_ISR 0001          __end_of_Recibir 1382           ?_InicializaLCD 0001  
            ReadData@dir 0003                    ?_main 0001          __end_of___awdiv 0FC4  
        __end_of___lbdiv 1190                    _ADRES 000FC3                    _EEADR 000FA9  
          EscribeLCD_c@a 0007          __end_of___lbmod 1250                    _EEPGD 007D37  
                  _T0CON 000FD5          ___awdiv@divisor 0005                    _LATC2 007C5A  
                  _LATE0 007C68                    _LATE1 007C69          __end_of___lwdiv 107C  
        __end_of___lwmod 1156                    i2l309 0F3C          ___awdiv@counter 0007  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _SPBRG 000FAF  
                  _USBEN 007B6B                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    _TXREG 000FAD  
                  _TXSTA 000FAC                    tablat 000FF5              _HabilitaLCD 1360  
                  ttemp5 0022                    ttemp6 0025                    ttemp7 0029  
                  status 000FD8                    wtemp8 0022          ___lbdiv@divisor 0003  
        ___lbdiv@counter 0005         __end_of_BorraLCD 133E         __end_of_ColorRGB 0E1A  
        __initialization 11FA         __end_of_LeerByte 12E6             __end_of_main 0D32  
       __end_of_ReadData 1360         __end_of_SaveData 12C4                   ??_main 0017  
   __end_of_ConfiguraLCD 12FE            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _EEDATA 000FA8  
         DireccionaLCD@a 0007                   _EECON2 000FA7         ___awdiv@dividend 0003  
                 i2l1651 0ED6                   i2l1653 0EE6                   i2l1661 0F08  
                 i2l1655 0EEE                   i2l1663 0F24                   i2l1647 0ED0  
                 i2l1657 0EF6                   _OSCCON 000FD3                   _TMR0IE 007F95  
                 _TMR0IF 007F92                   _TMR0ON 007EAF                   _TRISA0 007C90  
                 _TRISC2 007CA2                ??_LeerBit 0003    __end_of_DireccionaLCD 1314  
                 _UTRDIS 007B7B               _RetardoLCD 0FC4                ??_Recibir 0001  
    TransmitirDatos@Ent1 000B      TransmitirDatos@Ent2 000D      TransmitirDatos@Simb 0013  
                 ___wmul 1278                ??___awdiv 0007                ??___lbdiv 0004  
              ??___lbmod 0004                ??___lwdiv 0007                ??___lwmod 0007  
        ??_InicializaLCD 0007                   clear_0 1212         ___awdiv@quotient 0009  
                 isa$std 000001     __end_of_EscribeLCD_c 132A                   _strlen 1250  
           __pdataCOMRAM 0020                ?_ADC_Conv 0001             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
            SaveData@dir 0003               _Transmitir 136E         ___lbdiv@dividend 0004  
        ___lbmod@divisor 0003               __accesstop 0060  __end_of__initialization 1218  
        ___lbmod@counter 0005            ___rparam_used 000001        __end_of_LeerDHT11 11CA  
         __pcstackCOMRAM 0001        __end_of_EnviaDato 1114         ___lbdiv@quotient 0006  
             ??_ADC_Conv 0003                ?_BorraLCD 0001                ?_ColorRGB 0003  
         _MensajeLCD_Var 107C                ?_LeerByte 0001          MensajeLCD_Var@a 0008  
        MensajeLCD_Var@i 000A                ?_ReadData 0003              ?_RetardoLCD 0001  
            RetardoLCD@a 0004                ?_SaveData 0003                  ?___wmul 0003  
                _BAUDCON 000FB8                  ?_strlen 0003   __end_of_MensajeLCD_Var 10CE  
                i2u64_40 0EC6                  i2u65_45 0EC8               ??_BorraLCD 0007  
             ??_ColorRGB 0005              ?_Transmitir 0001               ??_LeerByte 0004  
           ?_HabilitaLCD 0001               ??_ReadData 0005                  _LeerBit 11CA  
           _ConfiguraLCD 12E6               ??_SaveData 0006                  _Humedad 001E  
                _Recibir 137A                  __Hparam 0000                  __Lparam 0000  
   TransmitirDatos@TempC 0015                  ___awdiv 0F40                  ___lbdiv 1156  
                ___lbmod 1226                  ___lwdiv 102A                  ___lwmod 1114  
           __psmallconst 0800              _Temperatura 001F                  __pcinit 11FA  
                __ramtop 0800                  __ptext0 0AC0                  __ptext1 0824  
                __ptext2 1278                  __ptext3 1114                  __ptext4 102A  
                __ptext5 1226                  __ptext6 1156                  __ptext7 0F40  
                __ptext8 136E                  __ptext9 12FE          ?_MensajeLCD_Var 0008  
         __pintcode_body 0EB6     end_of_initialization 1218            __Lmediumconst 0000  
                int_func 0EB6             _EscribeLCD_c 1314             SaveData@dato 0005  
      ??_TransmitirDatos 000F                  postinc0 000FEE        _TemperaturaEEPROM 001D  
                strlen@s 0003         ___lbmod@dividend 0004                LeerByte@i 0006  
            ___lbmod@rem 0006                _LeerDHT11 1190           __end_of___wmul 129E  
          __pidataCOMRAM 1382    __end_of_InicializaLCD 0EB6                _EnviaDato 10CE  
         __end_of_strlen 1278      start_initialization 11FA              __end_of_ISR 0F40  
           ??_RetardoLCD 0003                 ??___wmul 0007               ?_LeerDHT11 0001  
               ??_strlen 0005               ?_EnviaDato 0001              __pbssCOMRAM 0019  
     __end_of_RetardoLCD 102A             ??_Transmitir 0003                 ?_LeerBit 0001  
          _DireccionaLCD 12FE                 ?_Recibir 0001         ___lwdiv@dividend 0003  
              __pintcode 0008                 ?___awdiv 0003                 ?___lbdiv 0003  
               ?___lbmod 0003                 ?___lwdiv 0003                 ?___lwmod 0003  
     __end_of_Transmitir 137A         ??_MensajeLCD_Var 0009              __smallconst 0800  
               _ADC_Conv 133E         ___lwdiv@quotient 0007          _TransmitirDatos 0824  
         ___wmul@product 0007           ?_DireccionaLCD 0001                 i2u134_47 0F2E  
            ??_LeerDHT11 0007        ___wmul@multiplier 0003              ??_EnviaDato 0005  
          ADC_Conv@canal 0003                 _BorraLCD 132A                 _ColorRGB 0D32  
               _LeerByte 12C4                 _ReadData 1352                 _SaveData 129E  
               __Hrparam 0000                 __Lrparam 0000            ConfiguraLCD@a 0003  
__end_of_TransmitirDatos 0AC0          ___lwdiv@divisor 0005          ___lwdiv@counter 0009  
               __ptext10 129E                 __ptext11 1352                 __ptext20 10CE  
               __ptext12 107C                 __ptext21 0FC4                 __ptext13 1250  
               __ptext22 1360                 __ptext14 1314                 __ptext23 12E6  
               __ptext15 1190                 __ptext24 0D32                 __ptext16 12C4  
               __ptext25 133E                 __ptext17 11CA                 __ptext18 0E1A  
               __ptext27 137A                 __ptext19 132A          ??_DireccionaLCD 0007  
               _interfaz 0020                 isa$xinst 000000                 int$flags 0021  
               intlevel2 0000            ??_HabilitaLCD 0003         ___lwmod@dividend 0003  
          ?_ConfiguraLCD 0001              ColorRGB@val 0003          ___lwmod@divisor 0005  
               strlen@cp 0005          ___lwmod@counter 0007         ?_TransmitirDatos 000B  
         ??_ConfiguraLCD 0003            ?_EscribeLCD_c 0001               LeerBit@res 0003  
    __end_of_HabilitaLCD 136E              LeerByte@res 0005  
